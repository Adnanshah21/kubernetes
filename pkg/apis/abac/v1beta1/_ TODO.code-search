# Query: // TODO
# ContextLines: 1

3297 results - 1740 files

cluster\images\etcd\migrate\migrate_server.go:
  41  // Start starts an etcd server as a separate process, waits until it has started, and returns a exec.Cmd.
  42: // TODO: Add support for listening to client via TLS.
  43  func (r *EtcdMigrateServer) Start(version *EtcdVersion) error {

cluster\images\etcd\migrate\migrator.go:
  58  type Migrator struct {
  59: 	cfg           *EtcdMigrateCfg // TODO: don't wire this directly in
  60  	dataDirectory *DataDirectory

cmd\dependencyverifier\dependencyverifier.go:
  37  type UnwantedSpec struct {
  38: 	// TODO implement checks for RootModules
  39  	// module names/patterns of root modules whose dependencies should be considered direct references

  46  type UnwantedStatus struct {
  47: 	// TODO implement checks for Vendored
  48  	// unwanted modules we still vendor, based on vendor/modules.txt content.

  51  
  52: 	// TODO implement checks for distinguishing direct/indirect
  53  	// unwanted modules we still directly reference from spec.roots, based on `go mod graph` content.

cmd\genman\gen_kube_man.go:
  138  
  139: 		// Todo, when we mark a shorthand is deprecated, but specify an empty message.
  140  		// The flag.ShorthandDeprecated is empty as the shorthand is deprecated.

cmd\genyaml\gen_kubectl_yaml.go:
  88  	flags.VisitAll(func(flag *pflag.Flag) {
  89: 		// Todo, when we mark a shorthand is deprecated, but specify an empty message.
  90  		// The flag.ShorthandDeprecated is empty as the shorthand is deprecated.

cmd\kube-apiserver\app\options\options.go:
  194  	// See #14282 for details on how to test/try this option out.
  195: 	// TODO: remove this comment once this option is tested in CI.
  196  	fs.IntVar(&s.KubernetesServiceNodePort, "kubernetes-service-node-port", s.KubernetesServiceNodePort, ""+

cmd\kube-apiserver\app\options\validation.go:
  32  
  33: // TODO: Longer term we should read this from some config store, rather than a flag.
  34  // validateClusterIPFlags is expected to be called after Complete()

cmd\kube-controller-manager\app\controllermanager.go:
  208  		handler := genericcontrollermanager.BuildHandlerChain(unsecuredMux, &c.Authorization, &c.Authentication)
  209: 		// TODO: handle stoppedCh and listenerStoppedCh returned by c.SecureServing.Serve
  210  		if _, _, err := c.SecureServing.Serve(handler, 0, stopCh); err != nil {

  447  		controllers["cloud-node-lifecycle"] = startCloudNodeLifecycleController
  448: 		// TODO: volume controller into the IncludeCloudLoops only set.
  449  	}

  467  // GetAvailableResources gets the map which contains all available resources of the apiserver
  468: // TODO: In general, any controller checking this needs to be dynamic so
  469  // users don't have to restart their controller manager if they change the apiserver.

  702  // leaderElectAndRun runs the leader election, and runs the callbacks once the leader lease is acquired.
  703: // TODO: extract this function into staging/controller-manager
  704  func leaderElectAndRun(c *config.CompletedConfig, lockIdentity string, electionChecker *leaderelection.HealthzAdaptor, resourceLock string, leaseName string, callbacks leaderelection.LeaderCallbacks) {

cmd\kube-controller-manager\app\import_known_versions.go:
  17  // Package app imports the API groups that the client will support
  18: // TODO: Remove this file when namespace controller and garbage collector
  19  // stops using legacyscheme.Registry.RESTMapper()

cmd\kube-controller-manager\app\plugins_providers.go:
  44  		klog.Warningf("Unexpected CSI Migration Feature Flags combination detected: %v. CSI Migration may not take effect", err)
  45: 		// TODO: fail and return here once alpha only tests can set the feature flags for a plugin correctly
  46  	}

cmd\kube-controller-manager\app\options\deprecatedcontroller.go:
  25  // DeprecatedControllerOptions holds the DeprecatedController options, those option are deprecated.
  26: // TODO remove these fields once the deprecated flags are removed.
  27  type DeprecatedControllerOptions struct {

cmd\kube-controller-manager\app\options\options.go:
  401  
  402: 	// TODO: validate component config, master and kubeconfig
  403  

cmd\kube-proxy\app\conntrack.go:
  81  	}
  82: 	// TODO: generify this and sysctl to a new sysfs.WriteInt()
  83  	klog.InfoS("Setting conntrack hashsize", "conntrack hashsize", max/4)

cmd\kube-proxy\app\server_others.go:
  195  
  196: 			// TODO this has side effects that should only happen when Run() is invoked.
  197  			proxier, err = iptables.NewDualStackProxier(

  219  
  220: 			// TODO this has side effects that should only happen when Run() is invoked.
  221  			proxier, err = iptables.NewProxier(

  326  
  327: 		// TODO this has side effects that should only happen when Run() is invoked.
  328  		proxier, err = userspace.NewProxier(

cmd\kube-proxy\app\server_test.go:
  295  func TestLoadConfigFailures(t *testing.T) {
  296: 	// TODO(phenixblue): Uncomment below template when v1alpha2+ of kube-proxy config is
  297  	// released with strict decoding. These associated tests will fail with

  326  		},
  327: 		// TODO(phenixblue): Uncomment below tests when v1alpha2+ of kube-proxy config is
  328  		// released with strict decoding. These tests will fail with the

cmd\kube-proxy\app\server_windows.go:
  159  			*utilnet.ParsePortRangeOrDie(config.PortRange),
  160: 			// TODO @pires replace below with default values, if applicable
  161  			config.IPTables.SyncPeriod.Duration,

cmd\kube-proxy\app\server.go:
  116  	//
  117: 	// TODO remove these fields once the deprecated flags are removed.
  118  

  548  // createClients creates a kube client and an event client from the given config and masterOverride.
  549: // TODO remove masterOverride when CLI flags are removed.
  550  func createClients(config componentbaseconfig.ClientConnectionConfiguration, masterOverride string) (clientset.Interface, v1core.EventsGetter, error) {

  646  // Run runs the specified ProxyServer.  This should never exit (unless CleanupAndExit is set).
  647: // TODO: At the moment, Run() cannot return a nil error, otherwise it's caller will never exit. Update callers of Run to handle nil errors.
  648  func (s *ProxyServer) Run() error {

  653  
  654: 	// TODO(vmarmol): Use container config for this.
  655  	var oomAdjuster *oom.OOMAdjuster

  667  
  668: 	// TODO(thockin): make it possible for healthz and metrics to be on the same port.
  669  

  699  				// as well.
  700: 				// TODO(random-liu): Remove this when the docker bug is fixed.
  701  				const message = "CRI error: /sys is read-only: " +

cmd\kube-scheduler\app\server.go:
  184  		handler := buildHandlerChain(newHealthzAndMetricsHandler(&cc.ComponentConfig, cc.InformerFactory, isLeader, checks...), cc.Authentication.Authenticator, cc.Authorization.Authorizer)
  185: 		// TODO: handle stoppedCh and listenerStoppedCh returned by c.SecureServing.Serve
  186  		if _, _, err := cc.SecureServing.Serve(handler, 0, ctx.Done()); err != nil {

cmd\kube-scheduler\app\options\deprecated.go:
  26  // DeprecatedOptions contains deprecated options and their flags.
  27: // TODO remove these fields once the deprecated flags are removed.
  28  type DeprecatedOptions struct {

cmd\kube-scheduler\app\options\options.go:
  347  // createKubeConfig creates a kubeConfig from the given config and masterOverride.
  348: // TODO remove masterOverride when CLI flags are removed.
  349  func createKubeConfig(config componentbaseconfig.ClientConnectionConfiguration, masterOverride string) (*restclient.Config, error) {

cmd\kubeadm\app\apis\bootstraptoken\v1\utils.go:
  126  		// Format the expiration date accordingly
  127: 		// TODO: This maybe should be a helper function in bootstraputil?
  128  		expirationString := token.Expires.Time.UTC().Format(time.RFC3339)

cmd\kubeadm\app\apis\kubeadm\types.go:
  146  	// command line except without leading dash(es).
  147: 	// TODO: This is temporary and ideally we would like to switch all components to
  148  	// use ComponentConfig + ConfigMaps.

  166  // DNSAddOnType defines string identifying DNS add-on types
  167: // TODO: Remove with v1beta2 https://github.com/kubernetes/kubeadm/issues/2459
  168  type DNSAddOnType string

  171  	// CoreDNS add-on type
  172: 	// TODO: Remove with v1beta2 https://github.com/kubernetes/kubeadm/issues/2459
  173  	CoreDNS DNSAddOnType = "CoreDNS"

  178  	// Type defines the DNS add-on to be used
  179: 	// TODO: Used only in validation over the internal type. Remove with v1beta2 https://github.com/kubernetes/kubeadm/issues/2459
  180  	Type DNSAddOnType

cmd\kubeadm\app\apis\kubeadm\v1beta2\bootstraptokenstring.go:
  75  	substrs := bootstraputil.BootstrapTokenRegexp.FindStringSubmatch(token)
  76: 	// TODO: Add a constant for the 3 value here, and explain better why it's needed (other than because how the regexp parsin works)
  77  	if len(substrs) != 3 {

cmd\kubeadm\app\apis\kubeadm\v1beta2\types.go:
  120  	// command line except without leading dash(es).
  121: 	// TODO: This is temporary and ideally we would like to switch all components to
  122  	// use ComponentConfig + ConfigMaps.

cmd\kubeadm\app\apis\kubeadm\v1beta3\conversion.go:
  35  	// Make roundtrip / fuzzers happy
  36: 	// TODO: Remove with v1beta2 https://github.com/kubernetes/kubeadm/issues/2459
  37  	out.DNS.Type = ""

  41  // Convert_kubeadm_DNS_To_v1beta3_DNS is required since Type does not exist in the DNS struct
  42: // TODO: Remove with v1beta2 https://github.com/kubernetes/kubeadm/issues/2459
  43  func Convert_kubeadm_DNS_To_v1beta3_DNS(in *kubeadm.DNS, out *DNS, s conversion.Scope) error {

cmd\kubeadm\app\apis\kubeadm\v1beta3\types.go:
  144  	// command line except without leading dash(es).
  145: 	// TODO: This is temporary and ideally we would like to switch all components to
  146  	// use ComponentConfig + ConfigMaps.

cmd\kubeadm\app\apis\kubeadm\validation\validation_test.go:
  457  
  458: // TODO: Create a separated test for ValidateClusterConfiguration
  459  func TestValidateInitConfiguration(t *testing.T) {

cmd\kubeadm\app\apis\kubeadm\validation\validation.go:
   54  	allErrs = append(allErrs, ValidateClusterConfiguration(&c.ClusterConfiguration)...)
   55: 	// TODO(Arvinderpal): update advertiseAddress validation for dual-stack once it's implemented.
   56  	allErrs = append(allErrs, ValidateAPIEndpoint(&c.LocalAPIEndpoint, field.NewPath("localAPIEndpoint"))...)
   57: 	// TODO: Maybe validate that .CertificateKey is a valid hex encoded AES key
   58  	return allErrs

  100  		allErrs = append(allErrs, ValidateAPIEndpoint(&c.LocalAPIEndpoint, fldPath.Child("localAPIEndpoint"))...)
  101: 		// TODO: Maybe validate that .CertificateKey is a valid hex encoded AES key
  102  	}

  117  	allErrs = append(allErrs, ValidateSocketPath(nro.CRISocket, fldPath.Child("criSocket"))...)
  118: 	// TODO: Maybe validate .Taints as well in the future using something like validateNodeTaints() in pkg/apis/core/validation
  119  	return allErrs

  498  
  499: 	// TODO: Remove with v1beta2 https://github.com/kubernetes/kubeadm/issues/2459
  500  	const kubeDNSType = "kube-dns"

cmd\kubeadm\app\cmd\config.go:
  209  				APIServerEndpoint:        "kube-apiserver:6443",
  210: 				UnsafeSkipCAVerification: true, // TODO: UnsafeSkipCAVerification: true needs to be set for validation to pass, but shouldn't be recommended as the default
  211  			},

cmd\kubeadm\app\cmd\options\token.go:
  40  // and applying the parsed flags to a InitConfiguration object later at runtime
  41: // TODO: In the future, we might want to group the flags in a better way than adding them all individually like this
  42  type BootstrapTokenOptions struct {

cmd\kubeadm\app\cmd\phases\init\kubelet.go:
  71  	// as we handle that ourselves in the mark-control-plane phase
  72: 	// TODO: Maybe we want to do that some time in the future, in order to remove some logic from the mark-control-plane phase?
  73  	if err := kubeletphase.WriteKubeletDynamicEnvFile(&data.Cfg().ClusterConfiguration, &data.Cfg().NodeRegistration, false, data.KubeletDir()); err != nil {

cmd\kubeadm\app\cmd\phases\init\waitcontrolplane.go:
  74  	// If we're dry-running, print the generated manifests.
  75: 	// TODO: think of a better place to move this call - e.g. a hidden phase.
  76  	if data.DryRun() {

cmd\kubeadm\app\cmd\phases\join\kubelet.go:
  192  		// If we're dry-running, print the kubelet config manifests and print static pod manifests if joining a control plane.
  193: 		// TODO: think of a better place to move this call - e.g. a hidden phase.
  194  		if err := dryrunutil.PrintFilesIfDryRunning(cfg.ControlPlane != nil, data.ManifestDir(), data.OutputWriter()); err != nil {

cmd\kubeadm\app\cmd\phases\upgrade\node\kubeletconfig.go:
  73  
  74: 		// TODO: Checkpoint the current configuration first so that if something goes wrong it can be recovered
  75  

  88  
  89: 		// TODO: Temporary workaround. Remove in 1.27:
  90  		// https://github.com/kubernetes/kubeadm/issues/2626

cmd\kubeadm\app\cmd\phases\workflow\runner.go:
  77  // of contextual information derived by the workflow managed by the Runner.
  78: // TODO: If we ever decide to get more sophisticated we can swap this type with a well defined dag or tree library.
  79  type phaseRunner struct {

cmd\kubeadm\app\cmd\upgrade\diff_test.go:
  70  
  71: 	// TODO: Add test cases for empty cfgPath, it should automatically fetch cfg from cluster
  72  	testCases := []struct {

cmd\kubeadm\app\cmd\upgrade\plan_test.go:
  68  
  69: // TODO Think about modifying this test to be less verbose checking b/c it can be brittle.
  70  func TestPrintAvailableUpgrades(t *testing.T) {

cmd\kubeadm\app\cmd\upgrade\plan.go:
  122  	pf.JSONYamlPrintFlags.AddFlags(cmd)
  123: 	// TODO: once we are confident the feature is graduated we should remove the EXPERIMENTAL text below:
  124  	// https://github.com/kubernetes/kubeadm/issues/494

  301  
  302: // TODO There is currently no way to cleanly output upgrades that involve adding, removing, or changing components
  303  // https://github.com/kubernetes/kubeadm/issues/810 was created to track addressing this.

cmd\kubeadm\app\componentconfigs\configset.go:
  344  // Validate is a placeholder for performing a validation on an already loaded component configs in a ClusterConfiguration
  345: // TODO: investigate if the function can be repurposed for validating component config via CLI
  346  func Validate(clusterCfg *kubeadmapi.ClusterConfiguration) field.ErrorList {

cmd\kubeadm\app\constants\constants.go:
  233  	// Note however that anything in between /108 and /112 will be clamped to /112 due to the limitations of the underlying allocation logic.
  234: 	// TODO: https://github.com/kubernetes/enhancements/pull/1881
  235  	MaximumBitsForServiceSubnet = 20

  359  	// YAMLDocumentSeparator is the separator for YAML documents
  360: 	// TODO: Find a better place for this constant
  361  	YAMLDocumentSeparator = "---\n"

  403  	// to avoid kubeadm dependency on the internal module
  404: 	// TODO: share Mode* constants in component config
  405  

  512  func getSkewedKubernetesVersionImpl(versionInfo *apimachineryversion.Info, n int) *version.Version {
  513: 	// TODO: update if the kubeadm version gets decoupled from the Kubernetes version.
  514  	// This would require keeping track of the supported skew in a table.

  521  	// Append the MINOR version skew.
  522: 	// TODO: handle the case of Kubernetes moving to v2.0 or having MAJOR version updates in the future.
  523  	// This would require keeping track (in a table) of the last MINOR for a particular MAJOR.

cmd\kubeadm\app\discovery\discovery.go:
  40  func For(cfg *kubeadmapi.JoinConfiguration) (*clientcmdapi.Config, error) {
  41: 	// TODO: Print summary info about the CA certificate, along with the checksum signature
  42  	// we also need an ability for the user to configure the client to validate received CA cert against a checksum

cmd\kubeadm\app\phases\addons\proxy\proxy_test.go:
  115  
  116: 			// TODO: Consider using a YAML file instead for this that makes it possible to specify YAML documents for the ComponentConfigs
  117  			initConfiguration, err := configutil.DefaultedStaticInitConfiguration()

cmd\kubeadm\app\phases\certs\certlist.go:
  350  			Config: certutil.Config{
  351: 				// TODO: etcd 3.2 introduced an undocumented requirement for ClientAuth usage on the
  352  				// server cert: https://github.com/coreos/etcd/issues/9785#issuecomment-396715692

cmd\kubeadm\app\phases\controlplane\volumes.go:
  52  	// Read-only mount for the certificates directory
  53: 	// TODO: Always mount the K8s Certificates directory to a static path inside of the container
  54  	mounts.NewHostPathMount(kubeadmconstants.KubeAPIServer, kubeadmconstants.KubeCertificatesVolumeName, cfg.CertificatesDir, cfg.CertificatesDir, true, &hostPathDirectoryOrCreate)

  65  	// Read-only mount for the certificates directory
  66: 	// TODO: Always mount the K8s Certificates directory to a static path inside of the container
  67  	mounts.NewHostPathMount(kubeadmconstants.KubeControllerManager, kubeadmconstants.KubeCertificatesVolumeName, cfg.CertificatesDir, cfg.CertificatesDir, true, &hostPathDirectoryOrCreate)

cmd\kubeadm\app\phases\etcd\local.go:
  223  		"name": nodeName,
  224: 		// TODO: start using --initial-corrupt-check once the graduated flag is available:
  225  		// https://github.com/kubernetes/kubeadm/issues/2676

cmd\kubeadm\app\phases\upgrade\health.go:
  170  	// Waiting and manually deleting the Job is a workaround to not enabling the TTL controller.
  171: 	// TODO: refactor this if the TTL controller is enabled in kubeadm once it goes Beta.
  172  

cmd\kubeadm\app\phases\upgrade\postupgrade.go:
   68  
   69: 	// TODO: Temporary workaround. Remove in 1.27:
   70  	// https://github.com/kubernetes/kubeadm/issues/2626

   76  	// --cri-socket.
   77: 	// TODO: In the future we want to use something more official like NodeStatus or similar for detecting this properly
   78  	if err := patchnodephase.AnnotateCRISocket(client, cfg.NodeRegistration.Name, cfg.NodeRegistration.CRISocket); err != nil {

  101  
  102: 	// TODO: Is this needed to do here? I think that updating cluster info should probably be separate from a normal upgrade
  103  	// Create the cluster-info ConfigMap with the associated RBAC rules

  114  	//
  115: 	// TODO: remove this once "kubeadm upgrade apply" phases are supported:
  116  	//   https://github.com/kubernetes/kubeadm/issues/1318

  141  	//
  142: 	// TODO: remove this once "kubeadm upgrade apply" phases are supported:
  143  	//   https://github.com/kubernetes/kubeadm/issues/1318

  215  // from disk, ensure that the container runtime flag is removed.
  216: // TODO: Temporary workaround. Remove in 1.27:
  217  // https://github.com/kubernetes/kubeadm/issues/2626

cmd\kubeadm\app\preflight\checks.go:
  682  // Check validates external etcd version
  683: // TODO: Use the official etcd Golang client for this instead?
  684  func (evc ExternalEtcdVersionCheck) Check() (warnings, errorList []error) {

  906  		// Linux only
  907: 		// TODO: support other OS, if control-plane is supported on it.
  908  		MemCheck{Mem: kubeadmconstants.ControlPlaneMem},

cmd\kubeadm\app\util\marshal.go:
  43  // MarshalToYamlForCodecs marshals an object into yaml using the specified codec
  44: // TODO: Is specifying the gv really needed here?
  45: // TODO: Can we support json out of the box easily here?
  46  func MarshalToYamlForCodecs(obj runtime.Object, gv schema.GroupVersion, codecs serializer.CodecFactory) ([]byte, error) {

  62  // UnmarshalFromYamlForCodecs unmarshals yaml into an object using the specified codec
  63: // TODO: Is specifying the gv really needed here?
  64: // TODO: Can we support json out of the box easily here?
  65  func UnmarshalFromYamlForCodecs(buffer []byte, gv schema.GroupVersion, codecs serializer.CodecFactory) (runtime.Object, error) {

cmd\kubeadm\app\util\apiclient\idempotency.go:
  41  
  42: // TODO: We should invent a dynamic mechanism for this using the dynamic client instead of hard-coding these functions per-type
  43  

cmd\kubeadm\app\util\config\cluster.go:
  161  // getNodeNameFromKubeletConfig gets the node name from a kubelet config file
  162: // TODO: in future we want to switch to a more canonical way for doing this e.g. by having this
  163  //

cmd\kubelet\app\auth.go:
   99  		// generate a context from stopCh. This is to avoid modifying files which are relying on this method
  100: 		// TODO: See if we can pass ctx to the current method
  101  		ctx, cancel := context.WithCancel(context.Background())

cmd\kubelet\app\plugins_providers.go:
  49  		klog.InfoS("Unexpected CSI Migration Feature Flags combination detected, CSI Migration may not take effect", "err", err)
  50: 		// TODO: fail and return here once alpha only tests can set the feature flags for a plugin correctly
  51  	}

cmd\kubelet\app\server_others.go:
  30  	}
  31: 	// TODO: Check if kubelet is running in the `initial` user namespace.
  32  	// http://man7.org/linux/man-pages/man7/user_namespaces.7.html

cmd\kubelet\app\server.go:
   761  
   762: 	// TODO(vmarmol): Do this through container config.
   763  	oomAdjuster := kubeDeps.OOMAdjuster

  1202  	nodeIPs []net.IP) (k kubelet.Bootstrap, err error) {
  1203: 	// TODO: block until all sources have delivered at least one update to the channel, or break the sync loop
  1204  	// up into "per source" synchronizations

cmd\kubelet\app\options\globalflags_providers.go:
  26  func addLegacyCloudProviderCredentialProviderFlags(global, local *pflag.FlagSet) {
  27: 	// TODO(#58034): This is not a static file, so it's not quite as straightforward as --google-json-key.
  28  	// We need to figure out how ACR users can dynamically provide pull credentials before we can deprecate this.

cmd\kubemark\hollow-node.go:
  85  
  86: // TODO(#45650): Refactor hollow-node into hollow-kubelet and hollow-proxy
  87  // and make the config driven.

hack\lib\swagger.sh:
  43  //
  44: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  45  // they are on one line! For multiple line or blocks that you want to ignore use ---.

pkg\api\legacyscheme\scheme.go:
  28  	// the api group, unless you really know what you're doing.
  29: 	// TODO(lavalamp): make the above error impossible.
  30  	Scheme = runtime.NewScheme()

pkg\api\testing\defaulting_test.go:
  44  
  45: // TODO: add a reflexive test that verifies that all SetDefaults functions are registered
  46  func TestDefaulting(t *testing.T) {

pkg\api\testing\fuzzer.go:
  52  		func(j *runtime.Object, c fuzz.Continue) {
  53: 			// TODO: uncomment when round trip starts from a versioned object
  54  			if true { //c.RandBool() {

pkg\api\testing\serialization_test.go:
  203  				}
  204: 				// TODO: this is wrong, but legacy clients expect it
  205  				if !bytes.Contains(data, []byte(`"kind":"`+kind+`","apiVersion":"v1"`)) {

pkg\apis\abac\register.go:
  31  // Scheme is the default instance of runtime.Scheme to which types in the abac API group are api.Registry.
  32: // TODO: remove this, abac should not have its own scheme.
  33  var Scheme = runtime.NewScheme()

  38  func init() {
  39: 	// TODO: delete this, abac should not have its own scheme.
  40  	addKnownTypes(Scheme)

pkg\apis\abac\types.go:
  65  
  66: 	// TODO: "expires" string in RFC3339 format.
  67  
  68: 	// TODO: want a way to allow some users to restart containers of a pod but
  69  	// not delete or modify it.
  70  
  71: 	// TODO: want a way to allow a controller to create a pod based only on a
  72  	// certain podTemplates.

pkg\apis\abac\latest\latest.go:
  25  
  26: // TODO: this file is totally wrong, it should look like other latest files.
  27  // lavalamp is in the middle of fixing this code, so wait for the new way of doing things..

pkg\apis\abac\v0\register.go:


  40  	// SchemeBuilder is the scheme builder with scheme init functions to run for this API package
  41: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  42  	SchemeBuilder runtime.SchemeBuilder

pkg\apis\abac\v1beta1\register.go:
  

  40  	// SchemeBuilder is the scheme builder with scheme init functions to run for this API package
  41: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  42  	SchemeBuilder runtime.SchemeBuilder

pkg\apis\admissionregistration\v1beta1\defaults.go:
  48  	if obj.SideEffects == nil {
  49: 		// TODO: revisit/remove this default and possibly make the field required when promoting to v1
  50  		unknown := admissionregistrationv1beta1.SideEffectClassUnknown

  81  	if obj.SideEffects == nil {
  82: 		// TODO: revisit/remove this default and possibly make the field required when promoting to v1
  83  		unknown := admissionregistrationv1beta1.SideEffectClassUnknown

pkg\apis\apps\register.go:
  49  func addKnownTypes(scheme *runtime.Scheme) error {
  50: 	// TODO this will get cleaned up with the scheme types are fixed
  51  	scheme.AddKnownTypes(SchemeGroupVersion,

pkg\apis\apps\types.go:
  151  	// If unspecified, defaults to 1.
  152: 	// TODO: Consider a rename of this field.
  153  	// +optional

  173  	// any volumes in the template, with the same name.
  174: 	// TODO: Define the behavior if a claim already exists with the same name.
  175  	// +optional

  265  
  266: // TODO: Add valid condition types for Statefulsets.
  267  

  432  	//---
  433: 	// TODO: Update this to follow our convention for oneOf, whatever we decide it
  434  	// to be.

  570  	//---
  571: 	// TODO: Update this to follow our convention for oneOf, whatever we decide it
  572  	// to be. Same as Deployment `strategy.rollingUpdate`.

  721  
  722: // TODO: Add valid condition types of a DaemonSet.
  723  

pkg\apis\apps\v1\conversion.go:
  44  	// Copy annotation to deprecated rollbackTo field for roundtrip
  45: 	// TODO: remove this conversion after we delete extensions/v1beta1 and apps/v1beta1 Deployment
  46  	if revision := in.Annotations[appsv1.DeprecatedRollbackTo]; revision != "" {

  69  	// Copy deprecated rollbackTo field to annotation for roundtrip
  70: 	// TODO: remove this conversion after we delete extensions/v1beta1 and apps/v1beta1 Deployment
  71  	if in.Spec.RollbackTo != nil {

pkg\apis\apps\v1beta2\conversion.go:
  102  	// Copy annotation to deprecated rollbackTo field for roundtrip
  103: 	// TODO: remove this conversion after we delete extensions/v1beta1 and apps/v1beta1 Deployment
  104  	if revision := in.Annotations[appsv1beta2.DeprecatedRollbackTo]; revision != "" {

  126  	// Copy deprecated rollbackTo field to annotation for roundtrip
  127: 	// TODO: remove this conversion after we delete extensions/v1beta1 and apps/v1beta1 Deployment
  128  	if in.Spec.RollbackTo != nil {

pkg\apis\apps\validation\validation.go:
   39  func ValidateStatefulSetName(name string, prefix bool) []string {
   40: 	// TODO: Validate that there's name for the suffix inserted by the pods.
   41  	// Currently this is just "-index". In the future we may allow a user

   58  		}
   59: 		// TODO: Add validation for PodSpec, currently this will check volumes, which we know will
   60  		// fail. We should really check that the union of the given volumes and volumeClaims match

  227  	allErrs = append(allErrs, apivalidation.ValidateObjectMetaUpdate(&statefulSet.ObjectMeta, &oldStatefulSet.ObjectMeta, field.NewPath("metadata"))...)
  228: 	// TODO: Validate status.
  229  	if apivalidation.IsDecremented(statefulSet.Status.CollisionCount, oldStatefulSet.Status.CollisionCount) {

pkg\apis\autoscaling\install\install.go:
  42  	utilruntime.Must(v1.AddToScheme(scheme))
  43: 	// TODO: move v2 to the front of the list in 1.24
  44  	utilruntime.Must(scheme.SetVersionPriority(v1.SchemeGroupVersion, v2.SchemeGroupVersion, v2beta1.SchemeGroupVersion, v2beta2.SchemeGroupVersion))

pkg\apis\autoscaling\v1\conversion.go:
  344  	if in.Spec.Behavior != nil {
  345: 		// TODO: this is marshaling an internal type. Fix this without breaking backwards compatibility.
  346  		behaviorEnc, err := json.Marshal(in.Spec.Behavior)

  397  	if behaviorEnc, hasConstraints := out.Annotations[autoscaling.BehaviorSpecsAnnotation]; hasConstraints {
  398: 		// TODO: this is unmarshaling an internal type. Fix this without breaking backwards compatibility.
  399  		var behavior autoscaling.HorizontalPodAutoscalerBehavior

pkg\apis\autoscaling\v2beta1\conversion_test.go:
  29  // Testing nil pointer panic uncovered by #70806
  30: // TODO(yue9944882): Test nil/empty conversion across all resource types
  31  func TestNilOrEmptyConversion(t *testing.T) {

pkg\apis\autoscaling\v2beta1\conversion.go:
  294  	if in.Spec.Behavior != nil {
  295: 		// TODO: this is marshaling an internal type. Fix this without breaking backwards compatibility with n-1 API servers.
  296  		behaviorEnc, err := json.Marshal(in.Spec.Behavior)

  317  	if behaviorEnc, hasBehaviors := out.Annotations[autoscaling.BehaviorSpecsAnnotation]; hasBehaviors {
  318: 		// TODO: this is unmarshaling an internal type. Fix this without breaking backwards compatibility with n-1 API servers.
  319  		var behavior autoscaling.HorizontalPodAutoscalerBehavior

pkg\apis\batch\types.go:
  269  
  270: 	// TODO enabled it when https://github.com/kubernetes/kubernetes/issues/28486 has been fixed
  271  	// Optional number of failed pods to retain.

pkg\apis\batch\validation\validation.go:
  72  //
  73: // TODO: generalize for other controller objects that will follow the same pattern, such as ReplicaSet and DaemonSet, and
  74  // move to new location.  Replace batch.Job with an interface.

pkg\apis\coordination\register.go:
  48  func addKnownTypes(scheme *runtime.Scheme) error {
  49: 	// TODO this gets cleaned up when the types are fixed
  50  	scheme.AddKnownTypes(SchemeGroupVersion,

pkg\apis\core\toleration.go:
  23  // if the two tolerations have same <key,effect,operator,value> combination, regard as they match.
  24: // TODO: uniqueness check for tolerations in api validations.
  25  func (t *Toleration) MatchToleration(tolerationToMatch *Toleration) bool {

pkg\apis\core\types.go:
    63  	// ---
    64: 	// TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
    65  	// mount host directories as read/write.

   646  type EmptyDirVolumeSource struct {
   647: 	// TODO: Longer term we want to represent the selection of underlying
   648  	// media more like a scheduling problem - user says what traits they

   699  	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   700: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
   701  	// +optional

   733  	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   734: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
   735  	// +optional

   781  	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   782: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
   783  	// +optional

   822  	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   823: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
   824  	// +optional

   899  	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   900: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
   901  	// +optional

   932  	Directory string
   933: 	// TODO: Consider credentials here.
   934  }

  1083  	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  1084: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
  1085  	// +optional

  1114  	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  1115: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
  1116  	// +optional

  4095  	// kubernetes components, like kube-proxy, are not IPv6 ready.
  4096: 	// TODO: This should allow hostname or IP, see #4447.
  4097  	IP string

  4707  // PodAttachOptions is the query options to a Pod's remote attach call
  4708: // TODO: merge w/ PodExecOptions below for stdin, stdout, etc
  4709  type PodAttachOptions struct {

  4825  	// referencing a part of an object.
  4826: 	// TODO: this design is not final and this field is subject to change in the future.
  4827  	// +optional

  4884  // treated as informative, best-effort, supplemental data.
  4885: // TODO: Decide whether to store these separately or with the object they apply to.
  4886  type Event struct {

  4897  	// can't start, the Reason might be "ImageNotFound".
  4898: 	// TODO: provide exact specification for format.
  4899  	// +optional

  4902  	// Optional. A human-readable description of the status of this operation.
  4903: 	// TODO: decide on maximum length. Mapped to events.Event.note
  4904  	// +optional

  5299  	//   Secret.Data["tls.crt"] - TLS certificate.
  5300: 	// TODO: Consider supporting different formats, specifying CA/destinationCA.
  5301  	SecretTypeTLS SecretType = "kubernetes.io/tls"

pkg\apis\core\fuzzer\fuzzer.go:
  120  			c.FuzzNoCustom(j) // fuzz self without calling this function again
  121: 			// TODO: uncomment when round trip starts from a versioned object
  122  			if false { //j.Items == nil {

pkg\apis\core\helper\helpers.go:
  96  		// Ignore formatting, only care that numeric value stayed the same.
  97: 		// TODO: if we decide it's important, it should be safe to start comparing the format.
  98  		//

pkg\apis\core\v1\conversion.go:
  417  		// Moved to defaults
  418: 		// TODO(#18538): We round up resource values to milli scale to maintain API compatibility.
  419  		// In the future, we should instead reject values that need rounding.

pkg\apis\core\v1\defaults.go:
  36  	for key, val := range *obj {
  37: 		// TODO(#18538): We round up resource values to milli scale to maintain API compatibility.
  38  		// In the future, we should instead reject values that need rounding.

  50  	}
  51: 	// TODO: support templates defined elsewhere when we support them in the API
  52  	if labels != nil {

pkg\apis\core\v1\register.go:
  35  
  36: // TODO: remove these global variables
  37  // GroupName is the group name use in this package

pkg\apis\core\v1\helper\helpers.go:
  144  // and hostnames and returns true if equal or false if otherwise
  145: // TODO: make method on LoadBalancerStatus?
  146  func LoadBalancerStatusEqual(l, r *v1.LoadBalancerStatus) bool {

pkg\apis\core\validation\validation_test.go:
  9171  			Spec: validPodSpec(
  9172: 				// TODO: Uncomment and move this block and move inside NodeAffinity once
  9173  				// RequiredDuringSchedulingRequiredDuringExecution is implemented

  9231  			Spec: validPodSpec(
  9232: 				// TODO: Uncomment and move this block and move inside NodeAffinity once
  9233  				// RequiredDuringSchedulingRequiredDuringExecution is implemented

  9270  				Namespace: "ns",
  9271: 				// TODO: Uncomment and move this block into Annotations map once
  9272  				// RequiredDuringSchedulingRequiredDuringExecution is implemented

  9335  				Namespace: "ns",
  9336: 				// TODO: Uncomment and move this block into Annotations map once
  9337  				// RequiredDuringSchedulingRequiredDuringExecution is implemented

pkg\apis\core\validation\validation.go:
   353  // It doesn't return an error for rootscoped resources with namespace, because namespace should already be cleared before.
   354: // TODO: Remove calls to this method scattered in validations of specific resources, e.g., ValidatePodUpdate.
   355  func ValidateObjectMeta(meta *metav1.ObjectMeta, requiresNamespace bool, nameFn ValidateNameFunc, fldPath *field.Path) field.ErrorList {

  2179  		// storageclass annotation should be immutable after creation
  2180: 		// TODO: remove Beta when no longer needed
  2181  		allErrs = append(allErrs, ValidateImmutableAnnotation(newPvc.ObjectMeta.Annotations[v1.BetaStorageClassAnnotation], oldPvc.ObjectMeta.Annotations[v1.BetaStorageClassAnnotation], v1.BetaStorageClassAnnotation, field.NewPath("metadata"))...)

  2186  		}
  2187: 		// TODO: add a specific error with a hint that storage class name can not be changed
  2188  		// (instead of letting spec comparison below return generic field forbidden error)

  3072  
  3073: 	// TODO: do not validate leading and trailing whitespace to preserve backward compatibility.
  3074  	// for example: https://github.com/openshift/origin/issues/14659 image = " " is special token in pod template

  3382  	switch *effect {
  3383: 	// TODO: Replace next line with subsequent commented-out line when implement TaintEffectNoScheduleNoAdmit.
  3384  	case core.TaintEffectNoSchedule, core.TaintEffectPreferNoSchedule, core.TaintEffectNoExecute:

  3390  			string(core.TaintEffectNoExecute),
  3391: 			// TODO: Uncomment this block when implement TaintEffectNoScheduleNoAdmit.
  3392  			// string(core.TaintEffectNoScheduleNoAdmit),

  3750  		// are set via securityContext.WindowsOptions which we validate below
  3751: 		// TODO: Think if we need to relax this restriction or some of the restrictions
  3752  		if sc != nil {

  4016  	allErrs := field.ErrorList{}
  4017: 	// TODO:Uncomment below code once RequiredDuringSchedulingRequiredDuringExecution is implemented.
  4018  	// if podAntiAffinity.RequiredDuringSchedulingRequiredDuringExecution != nil {

  4035  	allErrs := field.ErrorList{}
  4036: 	// TODO: Uncomment the next three lines once RequiredDuringSchedulingRequiredDuringExecution is implemented.
  4037  	// if na.RequiredDuringSchedulingRequiredDuringExecution != nil {

  4051  	allErrs := field.ErrorList{}
  4052: 	// TODO:Uncomment below code once RequiredDuringSchedulingRequiredDuringExecution is implemented.
  4053  	// if podAffinity.RequiredDuringSchedulingRequiredDuringExecution != nil {

  4561  	if len(binding.Target.Kind) != 0 && binding.Target.Kind != "Node" {
  4562: 		// TODO: When validation becomes versioned, this gets more complicated.
  4563  		allErrs = append(allErrs, field.NotSupported(field.NewPath("target", "kind"), binding.Target.Kind, []string{"Node", "<empty>"}))

  4565  	if len(binding.Target.Name) == 0 {
  4566: 		// TODO: When validation becomes versioned, this gets more complicated.
  4567  		allErrs = append(allErrs, field.Required(field.NewPath("target", "name"), ""))

  5052  		}
  5053: 		// TODO: What to do for AWS?  It doesn't support replicas
  5054  	}

  5196  
  5197: 	// TODO: Enable the code once we have better core object.status update model. Currently,
  5198  	// anyone can update node status.

  5657  		}
  5658: 	// TODO: Verify that the key matches the cert.
  5659  	default:

pkg\apis\extensions\register.go:
  51  func addKnownTypes(scheme *runtime.Scheme) error {
  52: 	// TODO this gets cleaned up when the types are fixed
  53  	scheme.AddKnownTypes(SchemeGroupVersion,

pkg\apis\extensions\v1beta1\defaults.go:
   35  
   36: 	// TODO: support templates defined elsewhere when we support them in the API
   37  	if labels != nil {

  136  
  137: 	// TODO: support templates defined elsewhere when we support them in the API
  138  	if labels != nil {

pkg\apis\flowcontrol\install\install.go:
  42  	utilruntime.Must(flowcontrolv1beta3.AddToScheme(scheme))
  43: 	// TODO(#112512): This controls serialization order, for 1.26, we can
  44  	//  set the serialization version to v1beta2 because vN-1 understands that

pkg\apis\networking\types.go:
  418  	SecretName string
  419: 	// TODO: Consider specifying different modes of termination, protocols etc.
  420  }

  491  	Paths []HTTPIngressPath
  492: 	// TODO: Consider adding fields for ingress-type specific global
  493  	// options usable by a loadbalancer, like http keep-alive.

pkg\apis\networking\fuzzer\fuzzer.go:
  30  			c.FuzzNoCustom(np) // fuzz self without calling this function again
  31: 			// TODO: Implement a fuzzer to generate valid keys, values and operators for
  32  			// selector requirements.

  41  			c.FuzzNoCustom(np) // fuzz self without calling this function again
  42: 			// TODO: Implement a fuzzer to generate valid keys, values and operators for
  43  			// selector requirements.

pkg\apis\networking\validation\validation.go:
  269  	allErrs := field.ErrorList{}
  270: 	// TODO: Perform a more thorough validation of spec.TLS.Hosts that takes
  271  	// the wildcard spec from RFC 6125 into account.

  336  			}
  337: 			// TODO: Ports and ips are allowed in the host part of a url
  338  			// according to RFC 3986, consider allowing them.

pkg\apis\policy\register.go:
  48  func addKnownTypes(scheme *runtime.Scheme) error {
  49: 	// TODO this gets cleaned up when the types are fixed
  50  	scheme.AddKnownTypes(SchemeGroupVersion,

pkg\apis\policy\install\install.go:
  38  	utilruntime.Must(v1.AddToScheme(scheme))
  39: 	// TODO (mortent): priority should change after 1.21. See https://github.com/kubernetes/kubernetes/pull/95718#discussion_r520969477
  40  	utilruntime.Must(scheme.SetVersionPriority(v1beta1.SchemeGroupVersion, v1.SchemeGroupVersion))

pkg\apis\rbac\validation\validation.go:
  125  
  126: 	// TODO allow multiple API groups.  For now, restrict to one, but I can envision other experimental roles in other groups taking
  127  	// advantage of the binding infrastructure

  169  
  170: 	// TODO allow multiple API groups.  For now, restrict to one, but I can envision other experimental roles in other groups taking
  171  	// advantage of the binding infrastructure

  232  	case rbac.UserKind:
  233: 		// TODO(ericchiang): What other restrictions on user name are there?
  234  		if subject.APIGroup != rbac.GroupName {

  238  	case rbac.GroupKind:
  239: 		// TODO(ericchiang): What other restrictions on group name are there?
  240  		if subject.APIGroup != rbac.GroupName {

pkg\apis\storage\util\helpers.go:
  25  // BetaIsDefaultStorageClassAnnotation is the beta version of IsDefaultStorageClassAnnotation.
  26: // TODO: remove Beta when no longer used
  27  const BetaIsDefaultStorageClassAnnotation = "storageclass.beta.kubernetes.io/is-default-class"

  30  // the annotation is set
  31: // TODO: remove Beta when no longer needed
  32  func IsDefaultAnnotationText(obj metav1.ObjectMeta) string {

  44  // the annotation is set
  45: // TODO: remove Beta when no longer needed
  46  func IsDefaultAnnotation(obj metav1.ObjectMeta) bool {

pkg\apis\storage\validation\validation.go:
  276  
  277: 		// TODO (verult) consider improving runtime
  278  		for _, t := range rawTopologies {

pkg\auth\authorizer\abac\abac.go:
   57  //
   58: // TODO: Have policies be created via an API call and stored in REST storage.
   59  func NewFromFile(path string) (PolicyList, error) {

  179  func verbMatches(p abac.Policy, a authorizer.Attributes) bool {
  180: 	// TODO: match on verb
  181  

  235  	return authorizer.DecisionNoOpinion, "No policy matched.", nil
  236: 	// TODO: Benchmark how much time policy matching takes with a medium size
  237  	// policy file, compared to other steps such as encoding/decoding.

pkg\cluster\ports\ports.go:
  31  	// until heapster can transition to using the SSL endpoint.
  32: 	// TODO(roberthbailey): Remove this once we have a better solution for heapster.
  33  	KubeletReadOnlyPort = 10255

pkg\controller\controller_ref_manager.go:
  257  
  258: 			// TODO: If the pod has owner references, but none of them
  259  			// has the owner.UID, server will silently ignore the patch.

pkg\controller\controller_utils.go:
  212  
  213: // TODO: Extend ExpirationCache to support explicit expiration.
  214: // TODO: Make this possible to disable in tests.
  215: // TODO: Support injection of clock.
  216  func (exp *ControlleeExpectations) isExpired() bool {

  280  func (e *ControlleeExpectations) Fulfilled() bool {
  281: 	// TODO: think about why this line being atomic doesn't matter
  282  	return atomic.LoadInt64(&e.add) <= 0 && atomic.LoadInt64(&e.del) <= 0

  315  // to remember the expected deletes so they aren't double counted.
  316: // TODO: Track creates as well (#22599)
  317  type UIDTrackingControllerExpectations struct {
  318  	ControllerExpectationsInterface
  319: 	// TODO: There is a much nicer way to do this that involves a single store,
  320  	// a lock per entry, and a ControlleeExpectationsInterface type.

  424  
  425: // TODO: merge the controller revision interface in controller_history.go with this one
  426  // ControllerRevisionControlInterface is an interface that knows how to patch

  688  	}
  689: 	// TODO: take availability into account when we push minReadySeconds information from deployment into pods,
  690  	//       see https://github.com/kubernetes/kubernetes/issues/22065

  730  	}
  731: 	// TODO: take availability into account when we push minReadySeconds information from deployment into pods,
  732  	//       see https://github.com/kubernetes/kubernetes/issues/22065

  841  	}
  842: 	// TODO: take availability into account when we push minReadySeconds information from deployment into pods,
  843  	//       see https://github.com/kubernetes/kubernetes/issues/22065

pkg\controller\certificates\certificate_controller_test.go:
  31  
  32: // TODO flesh this out to cover things like not being able to find the csr in the cache, not
  33  // auto-approving, etc.

pkg\controller\certificates\signer\signer.go:
  239  	default:
  240: 		// TODO type this error so that a different reporting loop (one without a signing cert), can mark
  241  		//  CSRs with unknown kube signers as terminal if we wish.  This largely depends on how tightly we want to control

pkg\controller\certificates\signer\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\clusterroleaggregation\clusterroleaggregation_controller.go:
  126  	err = c.applyClusterRoles(ctx, sharedClusterRole.Name, newPolicyRules)
  127: 	if errors.IsUnsupportedMediaType(err) { // TODO: Remove this fallback at least one release after ServerSideApply GA
  128  		// When Server Side Apply is not enabled, fallback to Update. This is required when running

pkg\controller\cronjob\cronjob_controllerv2_test.go:
  1553  
  1554: 		// TODO: Add more test cases for updating scheduling.
  1555  	}

pkg\controller\cronjob\cronjob_controllerv2.go:
  407  	// during the next schedule
  408: 	// TODO: need to handle the change of spec.JobTemplate.metadata.labels explicitly
  409  	//   to cleanup jobs with old labels

  543  
  544: 		// TODO: Since we don't set LastScheduleTime when not scheduling, we are going to keep noticing
  545  		// the miss every cycle.  In order to avoid sending multiple events, and to avoid processing

  569  		//
  570: 		// TODO: for Forbid, we could use the same name for every execution, as a lock.
  571  		// With replace, we could use a name that is deterministic per execution time.

pkg\controller\cronjob\injection.go:
  91  	// DeleteJob deletes the Job identified by name.
  92: 	// TODO: delete by UID?
  93  	DeleteJob(namespace string, name string) error

pkg\controller\cronjob\utils.go:
  48  	}
  49: 	// TODO: @alpatel the memory footprint can may be reduced here by
  50  	//  cj.Status.Active = append(cj.Status.Active[:indexToRemove], cj.Status.Active[indexToRemove:]...)

pkg\controller\cronjob\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\daemon\daemon_controller.go:
  235  
  236: 	// TODO: make a KEP and fix informers to always call the delete event handler on re-create
  237  	if curDS.UID != oldDS.UID {

  338  
  339: 	// TODO: Handle overlapping controllers better. See comment in ReplicationManager.
  340  	dsc.queue.Add(key)

  349  
  350: 	// TODO: Handle overlapping controllers better. See comment in ReplicationManager.
  351  	dsc.queue.AddAfter(key, after)

  642  func (dsc *DaemonSetsController) addNode(obj interface{}) {
  643: 	// TODO: it'd be nice to pass a hint with these enqueues, so that each ds would only examine the added node (unless it has other work to do, too).
  644  	dsList, err := dsc.dsLister.List(labels.Everything())

  706  	}
  707: 	// TODO: it'd be nice to pass a hint with these enqueues, so that each ds would only examine the added node (unless it has other work to do, too).
  708  	for _, ds := range dsList {

pkg\controller\daemon\update_test.go:
  309  		}
  310: 		// TODO: workaround UpdatePodCondition calling time.Now() directly
  311  		setCondition := podutil.GetPodReadyCondition(pod.Status)

pkg\controller\daemon\update.go:
  486  	if outerErr := err; errors.IsAlreadyExists(outerErr) {
  487: 		// TODO: Is it okay to get from historyLister?
  488  		existedHistory, getErr := dsc.kubeClient.AppsV1().ControllerRevisions(ds.Namespace).Get(ctx, name, metav1.GetOptions{})

pkg\controller\daemon\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\daemon\util\daemonset_util.go:
  117  	}
  118: 	// TODO: do we need to validate if the DaemonSet is RollingUpdate or not?
  119  	if len(hash) > 0 {

pkg\controller\deployment\deployment_controller.go:
  597  	// Deep-copy otherwise we are mutating our cache.
  598: 	// TODO: Deep-copy only when needed.
  599  	d := deployment.DeepCopy()

pkg\controller\deployment\rollback.go:
  121  
  122: // TODO: Remove this when extensions/v1beta1 and apps/v1beta1 Deployment are dropped.
  123  func getRollbackTo(d *apps.Deployment) *extensions.RollbackConfig {

  138  
  139: // TODO: Remove this when extensions/v1beta1 and apps/v1beta1 Deployment are dropped.
  140  func setRollbackTo(d *apps.Deployment, rollbackTo *extensions.RollbackConfig) {

pkg\controller\deployment\sync.go:
  268  			// We don't really care about this error at this point, since we have a bigger issue to report.
  269: 			// TODO: Identify which errors are permanent and switch DeploymentIsFailed to take into account
  270  			// these reasons as well. Related issue: https://github.com/kubernetes/kubernetes/issues/18568

  385  
  386: 			// TODO: Use transactions when we have them.
  387  			if _, _, err := dc.scaleReplicaSet(ctx, rs, nameToSize[rs.Name], deployment, scalingOperation); err != nil {

  497  	status := apps.DeploymentStatus{
  498: 		// TODO: Ensure that if we start retrying status updates, we won't pick up a new Generation value.
  499  		ObservedGeneration:  deployment.Generation,

pkg\controller\deployment\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\deployment\util\deployment_util.go:
  303  // skipCopyAnnotation returns true if we should skip copying the annotation with the given annotation key
  304: // TODO: How to decide which annotations should / should not be copied?
  305  //

  527  
  528: // TODO: switch RsListFunc and podListFunc to full namespacers
  529  

  540  func ListReplicaSets(deployment *apps.Deployment, getRSList RsListFunc) ([]*apps.ReplicaSet, error) {
  541: 	// TODO: Right now we list replica sets by their labels. We should list them by selector, i.e. the replica set's selector
  542  	//       should be a superset of the deployment's selector, see https://github.com/kubernetes/kubernetes/issues/19830.

  830  func WaitForObservedDeployment(getDeploymentFunc func() (*apps.Deployment, error), desiredGeneration int64, interval, timeout time.Duration) error {
  831: 	// TODO: This should take clientset.Interface when all code is updated to use clientset. Keeping it this way allows the function to be used by callers who have client.Interface.
  832  	return wait.PollImmediate(interval, timeout, func() (bool, error) {

  893  
  894: 	// TODO: MODIFY THIS METHOD so that it checks for the podTemplateSpecHash label
  895  	dList, err := deploymentLister.Deployments(rs.Namespace).List(labels.Everything())

pkg\controller\disruption\disruption_test.go:
  797  	// 100%>1% healthy BUT two RCs => no disruption allowed
  798: 	// TODO: Find out if this assert is still needed
  799  	//ps.VerifyDisruptionAllowed(t, pdbName, 0)

pkg\controller\disruption\disruption.go:
  452  func (dc *DisruptionController) updateDb(old, cur interface{}) {
  453: 	// TODO(mml) ignore updates where 'old' is equivalent to 'cur'.
  454  	pdb := cur.(*policy.PodDisruptionBudget)

  767  	err = nil
  768: 	// TODO(davidopp): consider making the way expectedCount and rules about
  769  	// permitted controller configurations (specifically, considering it an error

pkg\controller\endpoint\endpoints_controller_test.go:
  1505  // This test uses real time.Sleep, as there is no easy way to mock time in endpoints controller now.
  1506: // TODO(mborsz): Migrate this test to mock clock when possible.
  1507  func TestPodUpdatesBatching(t *testing.T) {

  1653  // This test uses real time.Sleep, as there is no easy way to mock time in endpoints controller now.
  1654: // TODO(mborsz): Migrate this test to mock clock when possible.
  1655  func TestPodAddsBatching(t *testing.T) {

  1761  // This test uses real time.Sleep, as there is no easy way to mock time in endpoints controller now.
  1762: // TODO(mborsz): Migrate this test to mock clock when possible.
  1763  func TestPodDeleteBatching(t *testing.T) {

pkg\controller\endpoint\endpoints_controller.go:
  224  		// set IPFamilies (e.g. old api-server during an upgrade)
  225: 		// TODO (khenidak): remove by when the possibility of upgrading
  226  		// from a cluster that does not support dual stack is nil

  382  		// Delete the corresponding endpoint, as the service has been deleted.
  383: 		// TODO: Please note that this will delete an endpoint when a
  384  		// service is deleted. However, if we're down at the time when

pkg\controller\endpoint\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\endpointslice\endpointslice_controller_test.go:
  1121  // This test uses real time.Sleep, as there is no easy way to mock time in endpoints controller now.
  1122: // TODO(mborsz): Migrate this test to mock clock when possible.
  1123  func TestPodAddsBatching(t *testing.T) {

  1230  // This test uses real time.Sleep, as there is no easy way to mock time in endpoints controller now.
  1231: // TODO(mborsz): Migrate this test to mock clock when possible.
  1232  func TestPodUpdatesBatching(t *testing.T) {

  1378  // This test uses real time.Sleep, as there is no easy way to mock time in endpoints controller now.
  1379: // TODO(mborsz): Migrate this test to mock clock when possible.
  1380  func TestPodDeleteBatching(t *testing.T) {

pkg\controller\endpointslice\reconciler_test.go:
  1786  			numCreated:       0,
  1787: 			// TODO(robscott): Since we're potentially changing more slices when
  1788  			// adding topology hints we could use it as a free repacking

pkg\controller\endpointslice\utils.go:
  311  	serviceSupportedAddresses := make(map[discovery.AddressType]struct{})
  312: 	// TODO: (khenidak) when address types are removed in favor of
  313  	// v1.IPFamily this will need to be removed, and work directly with

  331  
  332: 	// TODO (khenidak) remove when (1) dual stack becomes
  333  	// enabled by default (2) v1.19 falls off supported versions

pkg\controller\endpointslice\config\v1alpha1\conversion.go:
  28  // be able to call these conversion functions in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these
  30  // Convert_* functions in autogenerated code as well.

pkg\controller\endpointslice\topologycache\topologycache.go:
  189  
  190: 		// TODO(robscott): Figure out if there's an acceptable proportion of
  191  		// nodes with inadequate information. The current logic means that as

pkg\controller\garbagecollector\garbagecollector.go:
  412  
  413: 	// TODO: we need to verify the reference resource is supported by the
  414  	// system. If it's not a valid resource, the garbage collector should i)

  433  
  434: 	// TODO: It's only necessary to talk to the API server if the owner node
  435  	// is a "virtual" node. The local graph could lag behind the real

  508  	}
  509: 	// TODO: It's only necessary to talk to the API server if this is a
  510  	// "virtual" node. The local graph could lag behind the real status, but in

  530  
  531: 	// TODO: attemptToOrphanWorker() routine is similar. Consider merging
  532  	// attemptToOrphanWorker() into attemptToDeleteItem() as well.

pkg\controller\garbagecollector\graph_builder.go:
  147  		UpdateFunc: func(oldObj, newObj interface{}) {
  148: 			// TODO: check if there are differences in the ownerRefs,
  149  			// finalizers, and DeletionTimestamp; if not, ignore the update.

  477  
  478: // TODO: profile this function to see if a naive N^2 algorithm performs better
  479  // when the number of references is small.

pkg\controller\garbagecollector\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\garbagecollector\metaonly\types.go:
  24  // JSON data.
  25: // TODO: enable meta-only decoding for protobuf.
  26  //

  36  // a list, and those of the enclosing objects.
  37: // TODO: enable meta-only decoding for protobuf.
  38  //

pkg\controller\job\job_controller.go:
  503  
  504: 	// TODO: Handle overlapping controllers better. Either disallow them at admission time or
  505  	// deterministically avoid syncing controllers that fight over pods. Currently, we only

pkg\controller\job\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\namespace\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\namespace\deletion\namespaced_resources_deleter.go:
  158  	//
  159: 	// TODO(sttts): get rid of opCache and http 405 logic around it and trust discovery info
  160  	resources, err := d.discoverResourcesFn()

  241  // it will return an error if the UID for an object changes across retry operations.
  242: // TODO RetryOnConflict should be a generic concept in client code
  243  func (d *namespacedResourcesDeleter) retryOnConflictError(namespace *v1.Namespace, fn updateNamespaceFunc) (result *v1.Namespace, err error) {

  327  	// this is strange, but we need to special case for both MethodNotSupported and NotFound errors
  328: 	// TODO: https://github.com/kubernetes/kubernetes/issues/22413
  329  	// we have a resource returned in the discovery API that supports no top-level verbs:

  361  	// this is strange, but we need to special case for both MethodNotSupported and NotFound errors
  362: 	// TODO: https://github.com/kubernetes/kubernetes/issues/22413
  363  	// we have a resource returned in the discovery API that supports no top-level verbs:

  509  	}
  510: 	// TODO(sttts): get rid of opCache and pass the verbs (especially "deletecollection") down into the deleter
  511  	deletableResources := discovery.FilteredBy(discovery.SupportsAllVerbs{Verbs: []string{"delete"}}, resources)

pkg\controller\nodeipam\node_ipam_controller.go:
  124  
  125: 	// TODO: Abstract this check into a generic controller manager should run method.
  126  	if ic.allocatorType == ipam.IPAMFromClusterAllocatorType || ic.allocatorType == ipam.IPAMFromCloudAllocatorType {

pkg\controller\nodeipam\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\nodeipam\ipam\cidr_allocator.go:
  59  
  60: // TODO: figure out the good setting for those constants.
  61  const (

pkg\controller\nodeipam\ipam\cidrset\cidr_set.go:
  56  	// The subnet mask size cannot be greater than 16 more than the cluster mask size
  57: 	// TODO: https://github.com/kubernetes/kubernetes/issues/44918
  58  	// clusterSubnetMaxDiff limited to 16 due to the uncompressed bitmap

pkg\controller\nodeipam\ipam\multicidrset\multi_cidr_set.go:
  79  	// The subnet mask size cannot be greater than 16 more than the cluster mask size
  80: 	// TODO: https://github.com/kubernetes/kubernetes/issues/44918
  81  	// clusterSubnetMaxDiff limited to 16 due to the uncompressed bitmap.

pkg\controller\nodelifecycle\node_lifecycle_controller.go:
   145  		// Reconcile the beta and the stable OS label using the stable label as the source of truth.
   146: 		// TODO(#89477): no earlier than 1.22: drop the beta labels if they differ from the GA labels
   147  		primaryKey:            v1.LabelOSStable,

   152  		// Reconcile the beta and the stable arch label using the stable label as the source of truth.
   153: 		// TODO(#89477): no earlier than 1.22: drop the beta labels if they differ from the GA labels
   154  		primaryKey:            v1.LabelArchStable,

   307  	// nodeMonitorGracePeriod.
   308: 	// TODO: Change node health monitor to watch based.
   309  	nodeMonitorPeriod time.Duration

   598  			klog.Errorf("Failed to taint NoSchedule on node <%s>, requeue it: %v", nodeName, err)
   599: 			// TODO(k82cn): Add nodeName back to the queue
   600  		}
   601: 		// TODO: re-evaluate whether there are any labels that need to be
   602  		// reconcile in 1.19. Remove this function if it's no longer necessary.

   604  			klog.Errorf("Failed to reconcile labels for node <%s>, requeue it: %v", nodeName, err)
   605: 			// TODO(yujuhong): Add nodeName back to the queue
   606  		}

  1045  	//   Ready Condition changed it state since we last seen it, so we update both probeTimestamp and readyTransitionTimestamp.
  1046: 	// TODO: things to consider:
  1047  	//   - if 'LastProbeTime' have gone back in time its probably an error, currently we ignore it,

  1072  		klog.Errorf("ReadyCondition was removed from Status of Node %s", node.Name)
  1073: 		// TODO: figure out what to do in this case. For now we do the same thing as above.
  1074  		nodeHealth = &nodeHealthData{

pkg\controller\nodelifecycle\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\nodelifecycle\scheduler\rate_limited_queue.go:
  297  		// If we're currently waiting on limiter, we drain the new one - this is a good approach when Burst value is 1
  298: 		// TODO: figure out if we need to support higher Burst values and decide on the drain logic, should we keep:
  299  		// - saturation (percentage of used tokens)

pkg\controller\nodelifecycle\scheduler\taint_manager_test.go:
  834  			controller.NodeUpdated(item.oldNode, item.newNode)
  835: 			// TODO(mborsz): Remove this sleep and other sleeps in this file.
  836  			time.Sleep(timeForControllerToProgress)

pkg\controller\nodelifecycle\scheduler\taint_manager.go:
  49  const (
  50: 	// TODO (k82cn): Figure out a reasonable number of workers/channels and propagate
  51  	// the number of workers up making it a parameter of Run() function.

pkg\controller\podautoscaler\horizontal_test.go:
   372  			actualConditions := obj.Status.Conditions
   373: 			// TODO: it's ok not to sort these because statusOk
   374  			// contains all the conditions, so we'll never be appending.

  2890  									Type: autoscalingv2.UtilizationMetricType,
  2891: 									// TODO: Change this to &tc.CPUTarget and the expected ScaleLimited
  2892  									//       condition to False. This test incorrectly leaves the v1

pkg\controller\podautoscaler\horizontal.go:
  206  
  207: 	// TODO: could we leak if we fail to get the key?
  208  	a.queue.Forget(key)

pkg\controller\podautoscaler\replica_calculator_test.go:
  660  			requests: []resource.Quantity{resource.MustParse("1.0"), resource.MustParse("1.0"), resource.MustParse("1.0"), resource.MustParse("1.0")},
  661: 			levels:   makePodMetricLevels(500, 700), // TODO: This test is broken and works only because of missing metrics
  662  

pkg\controller\podautoscaler\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\podgc\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\replicaset\replica_set_test.go:
  914  
  915: // TODO: This test is too hairy for a unittest. It should be moved to an E2E suite.
  916  func doTestControllerBurstReplicas(t *testing.T, burstReplicas, numReplicas int) {

pkg\controller\replicaset\replica_set_utils.go:
  51  	// that we've seen a spec update when we retry.
  52: 	// TODO: This can clobber an update if we allow multiple agents to write to the
  53  	// same status.

pkg\controller\replicaset\replica_set.go:
  312  
  313: 	// TODO: make a KEP and fix informers to always call the delete event handler on re-create
  314  	if curRS.UID != oldRS.UID {

  458  		rsc.enqueueRS(rs)
  459: 		// TODO: MinReadySeconds in the Pod will generate an Available condition to be added in
  460  		// the Pod status which in turn will trigger a requeue of the owning replica set thus

  570  		}
  571: 		// TODO: Track UIDs of creates just like deletes. The problem currently
  572  		// is we'd need to wait on the result of a create to record the pod's

  692  	// anymore but has the stale controller ref.
  693: 	// TODO: Do the List and Filter in a single pass, or use an index.
  694  	allPods, err := rsc.podLister.Pods(rs.Namespace).List(labels.Everything())

pkg\controller\replicaset\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\replication\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\resourcequota\resource_quota_controller.go:
  402  		if intersection := evaluator.MatchingResources(resourceQuotaResources); len(intersection) > 0 {
  403: 			// TODO: make this support targeted replenishment to a specific kind, right now it does a full recalc on that quota.
  404  			rq.enqueueResourceQuota(resourceQuota)

pkg\controller\resourcequota\resource_quota_monitor.go:
  171  
  172: 	// TODO: if we can share storage with garbage collector, it may make sense to support other resources
  173  	// until that time, aggregated api servers will have to run their own controller to reconcile their own quota.

pkg\controller\resourcequota\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\serviceaccount\serviceaccounts_controller.go:
  212  		// this is only safe because we never read it and we always write it
  213: 		// TODO eliminate this once the fake client can handle creation without NS
  214  		sa.Namespace = ns.Name

pkg\controller\serviceaccount\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\statefulset\stateful_pod_control.go:
  341  		}
  342: 		// TODO: Check resource requirements and accessmodes, update if necessary
  343  	}

pkg\controller\statefulset\stateful_set_control_test.go:
  68  	//
  69: 	// TODO: It might be better to rewrite all these tests manipulate the client an explicitly sync to ensure consistent
  70  	// state, or to create a fake client that does not use a local cache.

pkg\controller\statefulset\stateful_set_status_updater.go:
  58  		set.Status = *status
  59: 		// TODO: This context.TODO should use a real context once we have RetryOnConflictWithContext
  60  		_, updateErr := ssu.client.AppsV1().StatefulSets(set.Namespace).UpdateStatus(context.TODO(), set, metav1.UpdateOptions{})

pkg\controller\statefulset\stateful_set_utils.go:
  196  	// This is the case both in real clusters and the unittests.
  197: 	// TODO: there must be a better way to do this other than hardcoding the pod version?
  198  	updateMeta := func(tm *metav1.TypeMeta, kind string) {

  344  					ClaimName: claim.Name,
  345: 					// TODO: Use source definition to set this value when we have one.
  346  					ReadOnly: false,

pkg\controller\statefulset\stateful_set.go:
  136  
  137: 	// TODO: Watch volumes
  138  	return ssc

  229  		ssc.enqueueStatefulSet(set)
  230: 		// TODO: MinReadySeconds in the Pod will generate an Available condition to be added in
  231  		// the Pod status which in turn will trigger a requeue of the owning replica set thus

pkg\controller\statefulset\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\ttl\ttl_controller.go:
  21  //
  22: // TODO: This is a temporary workaround for the Kubelet not being able to
  23  // send "watch secrets attached to pods from my node" request. Once

pkg\controller\ttlafterfinished\config\v1alpha1\conversion.go:
  28  // functions in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\util\node\controller_utils.go:
  181  	klog.V(2).InfoS("Recording status change event message for node", "status", newStatus, "node", node.Name)
  182: 	// TODO: This requires a transaction, either both node status is updated
  183  	// and event is recorded or neither should happen, see issue #6055.

pkg\controller\volume\attachdetach\attach_detach_controller_test.go:
  100  	plugins := controllervolumetesting.CreateTestPlugin()
  101: 	var prober volume.DynamicPluginProber = nil // TODO (#51147) inject mock
  102  

  167  	plugins := controllervolumetesting.CreateTestPlugin()
  168: 	var prober volume.DynamicPluginProber = nil // TODO (#51147) inject mock
  169  	nodeInformer := informerFactory.Core().V1().Nodes().Informer()

pkg\controller\volume\attachdetach\attach_detach_controller.go:
  544  	node, ok := obj.(*v1.Node)
  545: 	// TODO: investigate if nodeName is empty then if we can return
  546  	// kubernetes/kubernetes/issues/37777

  560  	node, ok := newObj.(*v1.Node)
  561: 	// TODO: investigate if nodeName is empty then if we can return
  562  	if node == nil || !ok {

pkg\controller\volume\attachdetach\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\volume\attachdetach\statusupdater\node_status_updater.go:
  63  	var nodeIssues int
  64: 	// TODO: investigate right behavior if nodeName is empty
  65  	// kubernetes/kubernetes/issues/37777

pkg\controller\volume\ephemeral\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controller\volume\expand\expand_controller.go:
  334  
  335: // TODO make concurrency configurable (workers argument). previously, nestedpendingoperations spawned unlimited goroutines
  336  func (expc *expandController) Run(ctx context.Context) {

pkg\controller\volume\persistentvolume\binder_test.go:
  481  			// claim. Check that the claim is marked as lost.
  482: 			// TODO: test that an event is emitted
  483  			name:            "3-6 - bound claim with bound volume",

pkg\controller\volume\persistentvolume\framework_test.go:
  506  // used to compose claims specified inline in a test.
  507: // TODO(refactor): This helper function (and other helpers related to claim
  508  // arrays) could use some cleaning up (most assume an array size of one)-

pkg\controller\volume\persistentvolume\pv_controller_base.go:
  337  	claim *v1.PersistentVolumeClaim) (*v1.PersistentVolumeClaim, error) {
  338: 	// TODO: update[Claim|Volume]MigrationAnnotations can be optimized to not
  339  	// copy the claim/volume if no modifications are required. Though this

  643  	claimClone := claim.DeepCopy()
  644: 	// TODO: remove the beta storage provisioner anno after the deprecation period
  645  	metav1.SetMetaDataAnnotation(&claimClone.ObjectMeta, storagehelpers.AnnBetaStorageProvisioner, provisionerName)

pkg\controller\volume\persistentvolume\pv_controller.go:
  930  // Ignores claims that already have a storage class.
  931: // TODO: if resync is ever changed to a larger period, we might need to change how we set the default class on existing unbound claims
  932  func (ctrl *PersistentVolumeController) assignDefaultStorageClass(claim *v1.PersistentVolumeClaim) (*v1.PersistentVolumeClaim, error) {

  939  		// It is safe to ignore errors here because it means we either could not list SCs or there is more than one default.
  940: 		// TODO: do not ignore errors after this PR is merged: https://github.com/kubernetes/kubernetes/pull/110559
  941  		klog.V(4).Infof("failed to get default storage class: %v", err)

pkg\controller\volume\persistentvolume\config\v1alpha1\conversion.go:
  28  // in an autogenerated manner.
  29: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  30  // in autogenerated code as well.

pkg\controlplane\controller.go:
   96  	// it will not work for clients because of the IP family mismatch.
   97: 	// TODO: revisit for dual-stack https://github.com/kubernetes/enhancements/issues/2438
   98  	if c.ExtraConfig.EndpointReconcilerType != reconcilers.NoneEndpointReconcilerType {

  261  	// Update service & endpoint records.
  262: 	// TODO: when it becomes possible to change this stuff,
  263  	// stop polling and start watching.
  264: 	// TODO: add endpoints of all replicas, not just the elected master.
  265  	if err := createNamespaceIfNeeded(c.client.CoreV1(), metav1.NamespaceDefault); err != nil {

pkg\controlplane\instance.go:
  156  
  157: 	// TODO, we can probably group service related items into a substruct to make it easier to configure
  158  	// the API server items and `Extra*` fields likely fit nicely together.

  300  	if cfg.ExtraConfig.ServiceNodePortRange.Size == 0 {
  301: 		// TODO: Currently no way to specify an empty range (do we need to allow this?)
  302  		// We should probably allow this for clouds that don't require NodePort to do load-balancing (GCE)

  393  	// with specific priorities.
  394: 	// TODO: describe the priority all the way down in the RESTStorageProviders and plumb it back through the various discovery
  395  	// handlers that we have.

  429  		// generate a context  from stopCh. This is to avoid modifying files which are relying on apiserver
  430: 		// TODO: See if we can pass ctx to the current method
  431  		ctx, cancel := context.WithCancel(context.Background())

pkg\controlplane\reconcilers\endpointsadapter.go:
  123  
  124: 	// TODO: Add support for dual stack here (and in the rest of
  125  	// EndpointsAdapter).

pkg\generated\openapi\openapi_test.go:
  33  		t.Run(name, func(t *testing.T) {
  34: 			// TODO(kubernetes/gengo#193): We currently round-trip ints to floats.
  35  			value.Schema = *handler.PruneDefaultsSchema(&value.Schema)

pkg\kubeapiserver\default_storage_factory_builder.go:
  71  		//
  72: 		// TODO (https://github.com/kubernetes/kubernetes/issues/108451): remove the override in 1.25.
  73  		// apisstorage.Resource("csistoragecapacities").WithVersion("v1beta1"),

pkg\kubeapiserver\admission\initializer.go:
  25  
  26: // TODO add a `WantsToRun` which takes a stopCh.  Might make it generic.
  27  

  47  // NewPluginInitializer constructs new instance of PluginInitializer
  48: // TODO: switch these parameters to use the builder pattern or just make them
  49  // all public, this construction method is pointless boilerplate.

pkg\kubeapiserver\authenticator\config.go:
   80  
   81: 	// TODO, this is the only non-serializable part of the entire config.  Factor it out into a clientconfig
   82  	ServiceAccountTokenGetter   serviceaccount.ServiceAccountTokenGetter

  142  		if config.BootstrapTokenAuthenticator != nil {
  143: 			// TODO: This can sometimes be nil because of
  144  			tokenAuthenticators = append(tokenAuthenticators, authenticator.WrapAudienceAgnosticToken(config.APIAudiences, config.BootstrapTokenAuthenticator))

  153  	if len(config.OIDCIssuerURL) > 0 && len(config.OIDCClientID) > 0 {
  154: 		// TODO(enj): wire up the Notifier and ControllerRunner bits when OIDC supports CA reload
  155  		var oidcCAContent oidc.CAContentProvider

pkg\kubectl\cmd\convert\convert.go:
  246  		// objects that are not part of api.Scheme must be converted to JSON
  247: 		// TODO: convert to map[string]interface{}, attach to runtime.Unknown?
  248  		if !specifiedOutputVersion.Empty() {
  249  			if _, _, err := scheme.Scheme.ObjectKinds(info.Object); runtime.IsNotRegisteredError(err) {
  250: 				// TODO: ideally this would encode to version, but we don't expose multiple codecs here.
  251  				data, err := runtime.Encode(encoder, info.Object)

  254  				}
  255: 				// TODO: Set ContentEncoding and ContentType.
  256  				objects = append(objects, &runtime.Unknown{Raw: data})

pkg\kubectl\cmd\convert\import_known_versions.go:
  19  // These imports are the API groups the client will support.
  20: // TODO: Remove these manual install once we don't need legacy scheme in convert
  21  import (

pkg\kubelet\kubelet_network_linux.go:
  39  	// KubeMarkMasqChain is the mark-for-masquerade chain
  40: 	// TODO: clean up this logic in kube-proxy
  41  	KubeMarkMasqChain utiliptables.Chain = "KUBE-MARK-MASQ"

pkg\kubelet\kubelet_network.go:
  29  func (kl *Kubelet) providerRequiresNetworkingConfiguration() bool {
  30: 	// TODO: We should have a mechanism to say whether native cloud provider
  31  	// is used or whether we are using overlay networking. We should return

pkg\kubelet\kubelet_node_status_test.go:
  715  
  716: 	// TODO(random-liu): Refactor the unit test to be table driven test.
  717  	// Should report kubelet not ready if the runtime check is out of date

pkg\kubelet\kubelet_node_status.go:
  383  
  384: 		// TODO: We can't assume that the node has credentials to talk to the
  385  		// cloudprovider from arbitrary nodes. At most, we should talk to a

  588  // any fields that are currently set.
  589: // TODO(madhusudancs): Simplify the logic for setting node conditions and
  590  // refactor the node status condition code out to a different file.

  642  		nodestatus.VolumesInUse(kl.volumeManager.ReconcilerStatesHasBeenSynced, kl.volumeManager.GetVolumesInUse),
  643: 		// TODO(mtaufen): I decided not to move this setter for now, since all it does is send an event
  644  		// and record state back to the Kubelet runtime object. In the future, I'd like to isolate

pkg\kubelet\kubelet_pods_test.go:
  43  
  44: 	// TODO: remove this import if
  45  	// api.Registry.GroupOrDie(v1.GroupName).GroupVersions[0].String() is changed

pkg\kubelet\kubelet_pods.go:
   803  		// env vars.
   804: 		// TODO: remove this next line once all platforms use apiserver+Pods.
   805  		if _, present := tmpEnv[k]; !present {

  1077  	// of such pods should not be changed, and there is no need to sync them.
  1078: 	// TODO: the logic here does not handle two cases:
  1079  	//   1. If the containers were removed immediately after they died, kubelet

  1157  	// running pods to clean up the volumes.
  1158: 	// TODO: Evaluate the performance impact of bypassing the runtime cache.
  1159  	runningRuntimePods, err = kl.containerRuntime.GetPods(false)

  1174  	// but not yet deleted pods.
  1175: 	// TODO: this method could more aggressively cleanup terminated pods
  1176  	// in the future (volumes, mount dirs, logs, and containers could all be

  1293  // GetKubeletContainerLogs returns logs from the container
  1294: // TODO: this method is returning logs of random container attempts, when it should be returning the most recent attempt
  1295  // or all of them.

  1321  
  1322: 	// TODO: Consolidate the logic here with kuberuntime.GetContainerLogs, here we convert container name to containerID,
  1323  	// but inside kuberuntime we convert container id back to container name and restart count.
  1324: 	// TODO: After separate container log lifecycle management, we should get log based on the existing log files
  1325  	// instead of container status.

  1823  			// If the init container is terminated with exit code 0, it won't be restarted.
  1824: 			// TODO(random-liu): Handle this in a cleaner way.
  1825  			s := podStatus.FindContainerStatusByName(container.Name)

  1872  func (kl *Kubelet) ServeLogs(w http.ResponseWriter, req *http.Request) {
  1873: 	// TODO: allowlist logs we are willing to serve
  1874  	kl.logServer.ServeHTTP(w, req)

  1899  	}
  1900: 	// TODO(tallclair): Pass a proper timeout value.
  1901  	return kl.runner.RunInContainer(container.ID, cmd, 0)

pkg\kubelet\kubelet_resources.go:
  32  // the node allocatable.
  33: // TODO: if/when we have pod level resources, we need to update this function
  34  // to use those limits instead of node allocatable.

pkg\kubelet\kubelet_test.go:
    97  
    98: 	// TODO(harry) any global place for these two?
    99  	// Reasonable size range of all container images. 90%ile of images on dockerhub drops into this range.

   357  
   358: 	var prober volume.DynamicPluginProber // TODO (#51147) inject mock
   359  	kubelet.volumePluginMgr, err =

  1131  
  1132: // TODO(filipg): This test should be removed once StatusSyncer can do garbage collection without external signal.
  1133  func TestPurgingObsoleteStatusMapEntries(t *testing.T) {

pkg\kubelet\kubelet_volumes_linux_test.go:
  168  		},
  169: 		// TODO: test volume in volume-manager
  170  	}

pkg\kubelet\kubelet_volumes_test.go:
  333  	// Remove pod
  334: 	// TODO: technically waitForVolumeUnmount
  335  	kubelet.podWorkers.(*fakePodWorkers).setPodRuntimeBeRemoved(pod.UID)

pkg\kubelet\kubelet_volumes.go:
   42  	for outerVolumeSpecName, volume := range podVolumes {
   43: 		// TODO: volume.Mounter could be nil if volume object is recovered
   44  		// from reconciler's sync state process. PR 33616 will fix this problem

   62  	for outerVolumeSpecName, volume := range podVolumes {
   63: 		// TODO: volume.Mounter could be nil if volume object is recovered
   64  		// from reconciler's sync state process. PR 33616 will fix this problem

   82  	}
   83: 	// TODO: This checks pod volume paths and whether they are mounted. If checking returns error, podVolumesExist will return true
   84  	// which means we consider volumes might exist and requires further checking.

  190  		// Doing so may result in corruption of data.
  191: 		// TODO: getMountedVolumePathListFromDisk() call may be redundant with
  192  		// kl.getPodVolumePathListFromDisk(). Can this be cleaned up?

pkg\kubelet\kubelet.go:
   264  
   265: 	// TODO:  it needs to be replaced by a proper context in the future
   266  	ctx := context.TODO()

  1531  	// Record pod worker start latency if being created
  1532: 	// TODO: make pod workers record their own latencies
  1533  	if updateType == kubetypes.SyncPodCreate {

  1547  	// The pod IP may be changed in generateAPIPodStatus if the pod is using host network. (See #24576)
  1548: 	// TODO(random-liu): After writing pod spec into container labels, check whether pod is using host network, and
  1549  	// set pod IP to hostIP directly in runtime.GetPodStatus

  1637  	// or update the pod's cgroup
  1638: 	// TODO: once context cancellation is added this check can be removed
  1639  	if !kl.podWorkers.IsPodTerminationRequested(pod.UID) {

  1721  	// Volume manager will not mount volumes for terminating pods
  1722: 	// TODO: once context cancellation is added this check can be removed
  1723  	if !kl.podWorkers.IsPodTerminationRequested(pod.UID) {

  1806  	// Once the containers are stopped, we can stop probing for liveness and readiness.
  1807: 	// TODO: once a pod is terminal, certain probes (liveness exec) could be stopped immediately after
  1808  	//   the detection of a container shutdown or (for readiness) after the first failure. Tracked as

  1814  	// catch race conditions introduced by callers updating pod status out of order.
  1815: 	// TODO: have KillPod return the terminal status of stopped containers and write that into the
  1816  	//  cache immediately

  1856  // gates pod deletion). When this method exits the pod is expected to be ready for cleanup.
  1857: // TODO: make this method take a context and exit early
  1858  func (kl *Kubelet) syncTerminatedPod(ctx context.Context, pod *v1.Pod, podStatus *kubecontainer.PodStatus) error {

  1862  	// generate the final status of the pod
  1863: 	// TODO: should we simply fold this into TerminatePod? that would give a single pod update
  1864  	apiPodStatus := kl.generateAPIPodStatus(pod, podStatus)

  1973  	// if any handler rejects, the pod is rejected.
  1974: 	// TODO: move out of disk check into a pod admitter
  1975: 	// TODO: out of resource eviction should have a pod admitter call-out
  1976  	attrs := &lifecycle.PodAdmitAttributes{Pod: pod, OtherPods: pods}

  2111  		case kubetypes.SET:
  2112: 			// TODO: Do we want to support this?
  2113  			klog.ErrorS(nil, "Kubelet does not support snapshot update")

  2215  
  2216: // TODO: handle mirror pods in a separate component (issue #17251)
  2217  func (kl *Kubelet) handleMirrorPod(mirrorPod *v1.Pod, start time.Time) {

pkg\kubelet\pod_workers_test.go:
  1421  		{
  1422: 			// TODO: Do we want to allow non-static pods with the same full name?
  1423  			// Note that it may disable the force deletion of pods.

  1437  		{
  1438: 			// TODO: Do we want to allow a non-static pod with the same full name
  1439  			// as the started static pod?

  1459  		{
  1460: 			// TODO: Do we want to allow a static pod with the same full name as the
  1461  			// started non-static pod?

pkg\kubelet\pod_workers.go:
  190  	// all running containers are stopped.
  191: 	// TODO: Once pod logs are separated from running containers, this method should
  192  	// be used to gate whether containers are kept.

  818  	if !kubetypes.IsStaticPod(pod) {
  819: 		// TODO: Do we want to allow non-static pods with the same full name?
  820  		// Note that it may disable the force deletion of pods.

  850  	waitingPods := p.waitingToStartStaticPodsByFullname[fullname]
  851: 	// TODO: This is O(N) with respect to the number of updates to static pods
  852  	// with overlapping full names, and ideally would be O(1).

  916  				// wait until we see the next refresh from the PLEG via the cache (max 2s)
  917: 				// TODO: this adds ~1s of latency on all transitions from sync to terminating
  918  				//  to terminated, and on all termination retries (including evictions). We should

pkg\kubelet\reason_cache.go:
  36  //
  37: // TODO(random-liu): Use more reliable cache which could collect garbage of failed pod.
  38: // TODO(random-liu): Move reason cache to somewhere better.
  39  type ReasonCache struct {

pkg\kubelet\runonce_test.go:
  119  
  120: 	// TODO: Factor out "stats.Provider" from Kubelet so we don't have a cyclic dependency
  121  	volumeStatsAggPeriod := time.Second * 10

  161  	// because runonce is never used in kubernetes now, we should deprioritize the cleanup work.
  162: 	// TODO(random-liu) Fix the test, make it meaningful.
  163  	fakeRuntime.PodStatus = kubecontainer.PodStatus{

pkg\kubelet\runonce.go:
  140  		}
  141: 		// TODO(proppy): health checking would be better than waiting + checking the state at the next iteration.
  142  		klog.InfoS("Pod's containers synced, waiting", "pod", klog.KObj(pod), "duration", delay)

pkg\kubelet\apis\config\types.go:
  322  	// Warning: Please match the value of the corresponding parameter in kube-proxy.
  323: 	// TODO: clean up IPTablesMasqueradeBit in kube-proxy
  324  	IPTablesMasqueradeBit int32

pkg\kubelet\apis\config\v1beta1\defaults.go:
  25  
  26: 	// TODO: Cut references to k8s.io/kubernetes, eventually there should be none from this package
  27  	logsapi "k8s.io/component-base/logs/api/v1"

  34  const (
  35: 	// TODO: Move these constants to k8s.io/kubelet/config/v1beta1 instead?
  36  	DefaultIPTablesMasqueradeBit = 14

  45  	zeroDuration = metav1.Duration{}
  46: 	// TODO: Move these constants to k8s.io/kubelet/config/v1beta1 instead?
  47  	// Refer to [Node Allocatable](https://git.k8s.io/design-proposals-archive/node/node-allocatable.md) doc for more information.

pkg\kubelet\cadvisor\cadvisor_cloudproviders.go:
  23  	// Register cloud info providers.
  24: 	// TODO(#68522): Remove this in 1.20+ once the cAdvisor endpoints are removed.
  25  	_ "github.com/google/cadvisor/utils/cloudinfo/aws"

pkg\kubelet\cadvisor\cadvisor_linux.go:
   55  
   56: // TODO(vmarmol): Make configurable.
   57  // The amount of time for which to keep stats in memory.

  187  	}
  188: 	// TODO(vmarmol): Handle this better when a label has more than one image filesystem.
  189  	if len(res) > 1 {

pkg\kubelet\cadvisor\util.go:
  67  // CRI integrations should get container metrics via CRI.
  68: // TODO: cri-o relies on cadvisor as a temporary workaround. The code should
  69  // be removed. Related issue:

pkg\kubelet\cloudresource\cloud_request_manager.go:
  91  func (m *cloudResourceSyncManager) getNodeAddresses() ([]v1.NodeAddress, error) {
  92: 	// TODO(roberthbailey): Can we do this without having credentials to talk to
  93  	// the cloud provider?
  94: 	// TODO(justinsb): We can if CurrentNodeName() was actually CurrentNode() and
  95  	// returned an interface.
  96: 	// TODO: If IP addresses couldn't be fetched from the cloud provider, should
  97  	// kubelet fallback on the other methods for getting the IP below?

pkg\kubelet\cm\cgroup_manager_linux.go:
  216  
  217: 	// TODO(filbranden): This logic belongs in libcontainer/cgroup/systemd instead.
  218  	// It should take a libcontainerconfigs.Cgroup.Path field (rather than Name and Parent)

pkg\kubelet\cm\container_manager_linux.go:
  193  
  194: // TODO(vmarmol): Add limits to the system containers.
  195  // Takes the absolute name of the specified containers.

  646  
  647: // TODO: move the GetResources logic to PodContainerManager.
  648  func (cm *containerManagerImpl) GetResources(pod *v1.Pod, container *v1.Container) (*kubecontainer.RunContainerOptions, error) {

  672  	}
  673: 	// TODO: we need to think about a better way to do this. This will work for
  674  	// now so long as we have only the cpuManager and deviceManager relying on

pkg\kubelet\cm\container_manager.go:
  25  	"k8s.io/apimachinery/pkg/util/sets"
  26: 	// TODO: Migrate kubelet to either use its own internal objects or client library.
  27  	v1 "k8s.io/api/core/v1"

pkg\kubelet\cm\node_container_manager_linux.go:
  169  func getCgroupConfig(rl v1.ResourceList) *ResourceConfig {
  170: 	// TODO(vishh): Set CPU Quota if necessary.
  171  	if rl == nil {

pkg\kubelet\cm\cpumanager\cpu_manager.go:
  511  func (m *manager) updateContainerCPUSet(containerID string, cpus cpuset.CPUSet) error {
  512: 	// TODO: Consider adding a `ResourceConfigForContainer` helper in
  513  	// helpers_linux.go similar to what exists for pods.

pkg\kubelet\cm\cpumanager\topology\topology_test.go:
  237  			// We flip NUMA cells and Sockets to exercise the code.
  238: 			// TODO(fromanirh): replace with a real-world topology
  239  			// once we find a suitable one.

pkg\kubelet\cm\devicemanager\manager_test.go:
  1401  
  1402: 	// TODO: we should not calling private methods, but among the existing tests we do anyway
  1403  	err = m.readCheckpoint()

pkg\kubelet\cm\devicemanager\manager.go:
  183  		}
  184: 		// TODO: Until the bug - https://github.com/golang/go/issues/33357 is fixed, os.stat wouldn't return the
  185  		// right mode(socket) on windows. Hence deleting the file, without checking whether

  779  		// requests may fail if we serve them in mixed order.
  780: 		// TODO: may revisit this part later if we see inefficient resource allocation
  781  		// in real use as the result of this. Should also consider to parallelize device

  794  		devs := allocDevices.UnsortedList()
  795: 		// TODO: refactor this part of code to just append a ContainerAllocationRequest
  796  		// in a passed in AllocateRequest pointer, and issues a single Allocate call per pod.

  915  	}
  916: 	// TODO: Add metrics support for init RPC
  917  	return nil

pkg\kubelet\cm\devicemanager\pod_devices.go:
  305  				ReadOnly:      mount.ReadOnly,
  306: 				// TODO: This may need to be part of Device plugin API.
  307  				SELinuxRelabel: false,

pkg\kubelet\cm\devicemanager\types.go:
  95  
  96: // TODO: evaluate whether we need this error definition.
  97  const (

pkg\kubelet\cm\devicemanager\checkpoint\checkpoint.go:
  46  // in a checkpoint file.
  47: // TODO: add version control when we need to change checkpoint format.
  48  type checkpointData struct {

pkg\kubelet\cm\devicemanager\plugin\v1beta1\api.go:
  32  
  33: // TODO: evaluate whether we need these error definitions.
  34  const (

pkg\kubelet\cm\devicemanager\plugin\v1beta1\server.go:
  165  func (s *server) isVersionCompatibleWithPlugin(versions ...string) bool {
  166: 	// TODO(vikasc): Currently this is fine as we only have a single supported version. When we do need to support
  167  	// multiple versions in the future, we may need to extend this function to return a supported version.

pkg\kubelet\cm\memorymanager\memory_manager.go:
  299  
  300: // TODO: move the method to the upper level, to re-use it under the CPU and memory managers
  301  func (m *manager) removeStaleState() {

pkg\kubelet\cm\memorymanager\policy_static.go:
  175  	// though the final state here doesn't accurately reflect what was (in reality) allocated to each container
  176: 	// TODO: we should refactor our state structs to reflect the amount of the re-used memory
  177  	p.updateInitContainersMemoryBlocks(s, pod, container, containerBlocks)

pkg\kubelet\config\common.go:
  32  
  33: 	// TODO: remove this import if
  34  	// api.Registry.GroupOrDie(v1.GroupName).GroupVersion.String() is changed

pkg\kubelet\config\config.go:
  136  
  137: // TODO: PodConfigNotificationMode could be handled by a listener to the updates channel
  138  // in the future, especially with multiple listeners.
  139: // TODO: allow initialization of the current state of the store with snapshotted version.
  140  func newPodStorage(updates chan<- kubetypes.PodUpdate, mode PodConfigNotificationMode, recorder record.EventRecorder) *podStorage {

  424  	// 1. this is a reconcile
  425: 	// TODO: it would be better to update the whole object and only preserve certain things
  426  	//       like the source annotation or the UID (to ensure safety)

pkg\kubelet\config\file_linux_test.go:
   88  				for _, pod := range update.Pods {
   89: 					// TODO: remove the conversion when validation is performed on versioned objects.
   90  					internalPod := &api.Pod{}

  372  			for _, pod := range update.Pods {
  373: 				// TODO: remove the conversion when validation is performed on versioned objects.
  374  				internalPod := &api.Pod{}

pkg\kubelet\config\http_test.go:
  313  		for _, pod := range update.Pods {
  314: 			// TODO: remove the conversion when validation is performed on versioned objects.
  315  			internalPod := &api.Pod{}

pkg\kubelet\container\container_gc.go:
  54  
  55: // TODO(vmarmol): Preferentially remove pod infra containers.
  56  type realContainerGC struct {

pkg\kubelet\container\helpers.go:
   64  // ShouldContainerBeRestarted checks whether a container needs to be restarted.
   65: // TODO(yifan): Think about how to refactor this.
   66  func ShouldContainerBeRestarted(container *v1.Container, pod *v1.Pod, podStatus *PodStatus) bool {

  135  // container environment definitions. This does *not* include valueFrom substitutions.
  136: // TODO: callers should use ExpandContainerCommandAndArgs with a fully resolved list of environment.
  137  func ExpandContainerCommandOnlyStatic(containerCommand []string, envs []v1.EnvVar) (command []string) {

  235  // ConvertPodStatusToRunningPod returns Pod given PodStatus and container runtime string.
  236: // TODO(random-liu): Convert PodStatus to running Pod, should be deprecated soon
  237  func ConvertPodStatusToRunningPod(runtimeName string, podStatus *PodStatus) Pod {

  271  // kubecontainer.Containers to avoid substantial changes to PLEG.
  272: // TODO: Remove this once it becomes obsolete.
  273  func SandboxToContainerState(state runtimeapi.PodSandboxState) State {

pkg\kubelet\container\ref.go:
  35  	if err != nil {
  36: 		// TODO: figure out intelligent way to refer to containers that we implicitly
  37  		// start (like the pod infra container). This is not a good way, ugh.

pkg\kubelet\container\runtime_cache.go:
  25  var (
  26: 	// TODO(yifan): Maybe set the them as parameters for NewCache().
  27  	defaultCachePeriod = time.Second * 2

pkg\kubelet\container\runtime.go:
   77  	// This may be different from the runtime engine's version.
   78: 	// TODO(random-liu): We should fold this into Version()
   79  	APIVersion() (Version, error)

   94  	// will be GC'd.
   95: 	// TODO: Revisit this method and make it cleaner.
   96  	GarbageCollect(gcPolicy GCPolicy, allSourcesReady bool, evictNonDeletedPods bool) error

   99  	// KillPod kills all the containers of a pod. Pod may be nil, running pod must not be.
  100: 	// TODO(random-liu): Return PodSyncResult in KillPod.
  101  	// gracePeriodOverride if specified allows the caller to override the pod default grace period.

  107  	GetPodStatus(uid types.UID, name, namespace string) (*PodStatus, error)
  108: 	// TODO(vmarmol): Unify pod and containerID args.
  109  	// GetContainerLogs returns logs of a specific container. By

  177  	// components. This is only populated by kuberuntime.
  178: 	// TODO: use the runtimeApi.PodSandbox type directly.
  179  	Sandboxes []*Container

  392  	// Name of the volume mount.
  393: 	// TODO(yifan): Remove this field, as this is not representing the unique name of the mount,
  394  	// but the volume name only.

pkg\kubelet\container\sync_result.go:
  25  
  26: // TODO(random-liu): We need to better organize runtime errors for introspection.
  27  

pkg\kubelet\container\testing\fake_runtime.go:
  233  	}
  234: 	// TODO(random-liu): Add SyncResult for starting and killing containers
  235  	if f.Err != nil {

pkg\kubelet\cri\remote\remote_image.go:
  166  
  167: 	// TODO: for refactoring common code blocks between the cri versions into
  168  	// one code block in the internal where possible examples:

  298  	// Do not set timeout, because `ImageFsInfo` takes time.
  299: 	// TODO(random-liu): Should we assume runtime should cache the result, and set timeout here?
  300  	ctx, cancel := getContextWithCancel()

pkg\kubelet\cri\remote\remote_runtime.go:
   205  	// Use 2 times longer timeout for sandbox operation (4 mins by default)
   206: 	// TODO: Make the pod sandbox timeout configurable.
   207  	timeout := r.timeout * 2

  1033  	// Do not set timeout, because writable layer stats collection takes time.
  1034: 	// TODO(random-liu): Should we assume runtime should cache the result, and set timeout here?
  1035  	ctx, cancel := getContextWithCancel()

pkg\kubelet\cri\streaming\server.go:
  106  // NewServer creates a new Server for stream requests.
  107: // TODO(tallclair): Add auth(n/z) interface & handling.
  108  func NewServer(config Config, runtime Runtime) (Server, error) {

  234  	if !stayUp {
  235: 		// TODO(tallclair): Implement this.
  236  		return errors.New("stayUp=false is not yet implemented")

pkg\kubelet\cri\streaming\remotecommand\httpstream.go:
   55  	if tty && stderr {
   56: 		// TODO: make this an error before we reach this method
   57  		klog.V(4).InfoS("Access to exec with tty and stderr is not supported, bypassing stderr")

  242  		case <-expired:
  243: 			// TODO find a way to return the error to the user. Maybe use a separate
  244  			// stream to report errors?

  293  		case <-expired:
  294: 			// TODO find a way to return the error to the user. Maybe use a separate
  295  			// stream to report errors?

  341  		case <-expired:
  342: 			// TODO find a way to return the error to the user. Maybe use a separate
  343  			// stream to report errors?

  395  		case <-expired:
  396: 			// TODO find a way to return the error to the user. Maybe use a separate
  397  			// stream to report errors?

pkg\kubelet\cri\streaming\remotecommand\websocket.go:
  104  	// Send an empty message to the lowest writable channel to notify the client the connection is established
  105: 	// TODO: make generic to SPDY and WebSockets and do it outside of this method?
  106  	switch {

pkg\kubelet\envvars\envvars.go:
  64  func makeEnvVariableName(str string) string {
  65: 	// TODO: If we simplify to "all names are DNS1123Subdomains" this
  66  	// will need two tweaks:

pkg\kubelet\eviction\eviction_manager.go:
  240  	// build the ranking functions (if not yet known)
  241: 	// TODO: have a function in cadvisor that lets us know if global housekeeping has completed
  242  	if m.dedicatedImageFs == nil {

pkg\kubelet\eviction\helpers.go:
  341  // localVolumeNames returns the set of volumes for the pod that are local
  342: // TODO: summary API should report what volumes consume local storage rather than hard-code here.
  343  func localVolumeNames(pod *v1.Pod) []string {

pkg\kubelet\images\types.go:
  54  
  55: 	// TODO(ronl): consolidating image managing and deleting operation in this interface
  56  }

pkg\kubelet\kuberuntime\helpers.go:
  107  // kubecontainer.Containers to avoid substantial changes to PLEG.
  108: // TODO: Remove this once it becomes obsolete.
  109  func (m *kubeGenericRuntimeManager) sandboxToKubeContainer(s *runtimeapi.PodSandbox) (*kubecontainer.Container, error) {

pkg\kubelet\kuberuntime\kuberuntime_container.go:
  256  	// support.
  257: 	// TODO(random-liu): Remove this after cluster logging supports CRI container log path.
  258  	containerMeta := containerConfig.GetMetadata()

  503  	statuses := []*kubecontainer.Status{}
  504: 	// TODO: optimization: set maximum number of containers per container name to examine.
  505  	for _, c := range containers {

  612  // just need to retrieve them from container labels and restore the specs.
  613: // TODO(random-liu): Add a node e2e test to test this behaviour.
  614: // TODO(random-liu): Change the lifecycle handler to just accept information needed, so that we can
  615  // just pass the needed function not create the fake object.

  936  	// Remove the container log.
  937: 	// TODO: Separate log and container lifecycle management.
  938  	if err := m.removeContainerLog(containerID); err != nil {

  961  	// Remove the legacy container log symlink.
  962: 	// TODO(random-liu): Remove this after cluster logging supports CRI container log path.
  963  	labeledInfo := getContainerInfoFromLabels(status.Labels)

pkg\kubelet\kuberuntime\kuberuntime_gc.go:
  351  	// Remove dead container log symlinks.
  352: 	// TODO(random-liu): Remove this after cluster logging supports CRI container log path.
  353  	logSymlinks, _ := osInterface.Glob(filepath.Join(legacyContainerLogsDir, fmt.Sprintf("*.%s", legacyLogSuffix)))

  358  				if err != nil {
  359: 					// TODO: we should handle container not found (i.e. container was deleted) case differently
  360  					// once https://github.com/kubernetes/kubernetes/issues/63336 is resolved

pkg\kubelet\kuberuntime\kuberuntime_image.go:
  131  // this is a known issue, and we'll address this by getting imagefs stats directly from CRI.
  132: // TODO: Get imagefs stats directly from CRI.
  133  func (m *kubeGenericRuntimeManager) ImageStats() (*kubecontainer.ImageStats, error) {

pkg\kubelet\kuberuntime\kuberuntime_manager.go:
   230  	// Only matching kubeRuntimeAPIVersion is supported now
   231: 	// TODO: Runtime API machinery is under discussion at https://github.com/kubernetes/kubernetes/issues/28642
   232  	if typedVersion.Version != kubeRuntimeAPIVersion {

   245  	// If the container logs directory does not exist, create it.
   246: 	// TODO: create podLogsRootDirectory at kubelet.go when kubelet is refactored to
   247  	// new runtime interface

   434  	// The reason is a clearer source of info on why a container will be killed
   435: 	// TODO: replace message with reason?
   436  	reason containerKillReason

   975  	// these limitations now.
   976: 	// TODO: move this comment to SyncPod.
   977  	podSandboxIDs, err := m.getSandboxIDByPodUID(uid, nil)

  1047  func (m *kubeGenericRuntimeManager) UpdatePodCIDR(podCIDR string) error {
  1048: 	// TODO(#35531): do we really want to write a method on this manager for each
  1049  	// field of the config?

pkg\kubelet\kuberuntime\kuberuntime_sandbox_test.go:
  57  	assert.Equal(t, len(sandboxes), 1)
  58: 	// TODO Check pod sandbox configuration
  59  }

pkg\kubelet\kuberuntime\kuberuntime_sandbox.go:
   79  func (m *kubeGenericRuntimeManager) generatePodSandboxConfig(pod *v1.Pod, attempt uint32) (*runtimeapi.PodSandboxConfig, error) {
   80: 	// TODO: deprecating podsandbox resource requirements in favor of the pod level cgroup
   81  	// Refer https://github.com/kubernetes/kubernetes/issues/29871

  100  	if !kubecontainer.IsHostNetworkPod(pod) {
  101: 		// TODO: Add domain support in new runtime interface
  102  		podHostname, podDomain, err := m.runtimeHelper.GeneratePodHostNameAndDomain(pod)

  169  
  170: 			// TODO: Deprecated, remove after we switch to Seccomp field
  171  			// Forcing sandbox to run as `runtime/default` allow users to

pkg\kubelet\kuberuntime\labels.go:
  30  const (
  31: 	// TODO: change those label names to follow kubernetes's format
  32  	podDeletionGracePeriodLabel    = "io.kubernetes.pod.deletionGracePeriod"

pkg\kubelet\kuberuntime\security_context.go:
  37  
  38: 	// TODO: Deprecated, remove after we switch to Seccomp field
  39  	// set SeccompProfilePath.

pkg\kubelet\kuberuntime\logs\logs.go:
   48  //   * If the rotation is using copytruncate, we'll be reading at the original position and get nothing.
   49: // TODO(random-liu): Support log rotation.
   50  

  191  
  192: 	// TODO: JSON decoding is fairly expensive, we should evaluate this.
  193  	if err := json.Unmarshal(log, l); err != nil {

pkg\kubelet\lifecycle\handlers.go:
  62  		var msg string
  63: 		// TODO(tallclair): Pass a proper timeout value.
  64  		output, err := hr.commandRunner.RunInContainer(containerID, handler.Exec.Command, 0)

pkg\kubelet\lifecycle\predicate.go:
  186  // rejectPodAdmissionBasedOnOSField rejects pods if their OS field doesn't match runtime.GOOS.
  187: // TODO: Relax this restriction when we start supporting LCOW in kubernetes where podOS may not match
  188  //

pkg\kubelet\logs\container_log_manager.go:
   56  type ContainerLogManager interface {
   57: 	// TODO(random-liu): Add RotateLogs function and call it under disk pressure.
   58  	// Start container log manager.

   76  // Returned logs are sorted in oldest to newest order.
   77: // TODO(#59902): Leverage this function to support log rotation in `kubectl logs`.
   78  func GetAllLogs(log string) ([]string, error) {

  109  // stream of the uncompressed content.
  110: // TODO(#59902): Leverage this function to support log rotation in `kubectl logs`.
  111  func UncompressLog(log string) (_ io.ReadCloser, retErr error) {

  216  	defer c.mutex.Unlock()
  217: 	// TODO(#59998): Use kubelet pod cache.
  218  	containers, err := c.runtimeService.ListContainers(&runtimeapi.ContainerFilter{})

pkg\kubelet\nodestatus\setters_test.go:
    56  
    57: // TODO(mtaufen): below is ported from the old kubelet_node_status_test.go code, potentially add more test coverage for NodeAddress setter in future
    58  func TestNodeAddress(t *testing.T) {

  1299  			expectConditions: []v1.NodeCondition{*makeReadyCondition(true, "kubelet is posting ready status", now, now)},
  1300: 			// TODO(mtaufen): The current behavior is that we don't send an event for the initial NodeReady condition,
  1301  			// the reason for this is unclear, so we may want to actually send an event, and change these test cases

pkg\kubelet\nodestatus\setters.go:
  263  
  264: 		// TODO: Post NotReady if we cannot get MachineInfo from cAdvisor. This needs to start
  265  		// cAdvisor locally, e.g. for test-cmd.sh, and in integration test.

  267  		if err != nil {
  268: 			// TODO(roberthbailey): This is required for test-cmd.sh to pass.
  269  			// See if the test should be updated instead.

  291  				node.Status.NodeInfo.BootID != info.BootID {
  292: 				// TODO: This requires a transaction, either both node status is updated
  293  				// and event is recorded or neither should happen, see issue #6055.

  298  
  299: 			// TODO: all the node resources should use ContainerManager.GetCapacity instead of deriving the
  300  			// capacity for every node status request

  399  		node.Status.NodeInfo.KubeletVersion = version.Get().String()
  400: 		// TODO: kube-proxy might be different version from kubelet in the future
  401  		node.Status.NodeInfo.KubeProxyVersion = version.Get().String()

  509  		// Append AppArmor status if it's enabled.
  510: 		// TODO(tallclair): This is a temporary message until node feature reporting is added.
  511  		if appArmorValidateHostFunc != nil && newNodeReadyCondition.Status == v1.ConditionTrue {

pkg\kubelet\pleg\generic.go:
  123  // events.
  124: // TODO: support multiple subscribers.
  125  func (g *GenericPLEG) Watch() chan *PodLifecycleEvent {

  245  			// detect again in the next relist.
  246: 			// TODO: If many pods changed during the same relist period,
  247  			// inspecting the pod and getting the PodStatus to update the cache

  344  		// Update sandboxes as containers
  345: 		// TODO: keep track of sandboxes explicitly.
  346  		fillCidSet(p.Sandboxes)

  399  	timestamp := g.clock.Now()
  400: 	// TODO: Consider adding a new runtime method
  401  	// GetPodStatus(pod *kubecontainer.Pod) so that Docker can avoid listing

pkg\kubelet\pluginmanager\pluginwatcher\plugin_watcher.go:
  162  	fi, err := os.Stat(event.Name)
  163: 	// TODO: This is a workaround for Windows 20H2 issue for os.Stat(). Please see
  164  	// microsoft/Windows-Containers#97 for details.

pkg\kubelet\pod\testing\fake_mirror_client.go:
  53  
  54: // TODO (Robert Krawitz): Implement UID checking
  55  func (fmc *FakeMirrorClient) DeleteMirrorPod(podFullName string, _ *types.UID) (bool, error) {

pkg\kubelet\server\server.go:
  187  	klog.InfoS("Starting to listen read-only", "address", address, "port", port)
  188: 	// TODO: https://github.com/kubernetes/kubernetes/issues/109829 tracer should use WithPublicEndpoint
  189  	s := NewServer(host, resourceAnalyzer, nil, oteltrace.NewNoopTracerProvider(), nil)

  644  	if len(podID) == 0 {
  645: 		// TODO: Why return JSON when the rest return plaintext errors?
  646: 		// TODO: Why return plaintext errors?
  647  		response.WriteError(http.StatusBadRequest, fmt.Errorf(`{"message": "Missing podID."}`))

  650  	if len(containerName) == 0 {
  651: 		// TODO: Why return JSON when the rest return plaintext errors?
  652  		response.WriteError(http.StatusBadRequest, fmt.Errorf(`{"message": "Missing container name."}`))

  655  	if len(podNamespace) == 0 {
  656: 		// TODO: Why return JSON when the rest return plaintext errors?
  657  		response.WriteError(http.StatusBadRequest, fmt.Errorf(`{"message": "Missing podNamespace."}`))

  711  	}
  712: 	// TODO: this needs to be parameterized to the kubelet, not hardcoded. Depends on Kubelet
  713  	//   as API server refactor.
  714: 	// TODO: Locked to v1, needs to be made generic
  715  	codec := legacyscheme.Codecs.LegacyCodec(schema.GroupVersion{Group: v1.GroupName, Version: "v1"})

  792  func proxyStream(w http.ResponseWriter, r *http.Request, url *url.URL) {
  793: 	// TODO(random-liu): Set MaxBytesPerSec to throttle the stream.
  794  	handler := proxy.NewUpgradeAwareHandler(url, nil /*transport*/, false /*wrapTransport*/, true /*upgradeRequired*/, &responder{})

pkg\kubelet\server\stats\fs_resource_analyzer.go:
  102  	if !found {
  103: 		// TODO: Differentiate between stats being empty
  104  		// See issue #20679

pkg\kubelet\server\stats\summary.go:
   68  func (sp *summaryProviderImpl) Get(updateStats bool) (*statsapi.Summary, error) {
   69: 	// TODO(timstclair): Consider returning a best-effort response if any of
   70  	// the following errors occur.

  121  func (sp *summaryProviderImpl) GetCPUAndMemoryStats() (*statsapi.Summary, error) {
  122: 	// TODO(timstclair): Consider returning a best-effort response if any of
  123  	// the following errors occur.

pkg\kubelet\stats\cri_stats_provider_windows.go:
  90  
  91: 	// TODO: add support of multiple interfaces for getting default interface.
  92  	result.Interfaces = append(result.Interfaces, iStat)

pkg\kubelet\stats\cri_stats_provider.go:
  394  	//
  395: 	// TODO(yguo0905): Support returning stats of multiple image filesystems.
  396  	if len(resp) == 0 {

  494  
  495: 	// TODO: sum Pod network stats from container stats.
  496  	klog.V(4).InfoS("Unable to find network stats for sandbox", "sandboxID", podSandboxID)

pkg\kubelet\stats\helper.go:
  275  	// MaxInt64 due to rounding by the kernel.
  276: 	// TODO: cadvisor should export this https://github.com/google/cadvisor/blob/master/metrics/prometheus.go#L596
  277  	const maxMemorySize = uint64(1 << 62)

pkg\kubelet\status\status_manager.go:
  603  
  604: // TODO(filipg): It'd be cleaner if we can do this without signal from user.
  605  func (m *manager) RemoveOrphanedStatuses(podUIDs map[types.UID]bool) {

  669  
  670: 	// TODO: make me easier to express from client code
  671  	pod, err := m.kubeClient.CoreV1().Pods(status.podNamespace).Get(context.TODO(), status.podName, metav1.GetOptions{})

  771  // static pod uid here.
  772: // TODO(random-liu): Simplify the logic when mirror pod manager is added.
  773  func (m *manager) needsReconcile(uid types.UID, status v1.PodStatus) bool {

pkg\kubelet\types\types.go:
  26  
  27: // TODO: Reconcile custom types in kubelet/types and this subpackage
  28  

pkg\kubelet\util\manager\watch_based_manager.go:
  205  func (c *objectCache) newStore() *cacheStore {
  206: 	// TODO: We may consider created a dedicated store keeping just a single
  207  	// item, instead of using a generic store implementation for this purpose.

  389  
  390: 	// TODO propagate stopCh from the higher level.
  391  	objectStore := NewObjectCache(listObject, watchObject, newObject, isImmutable, groupResource, clock.RealClock{}, maxIdleTime, wait.NeverStop)

pkg\kubelet\volumemanager\volume_manager_test.go:
  289  	plugMgr := &volume.VolumePluginMgr{}
  290: 	// TODO (#51147) inject mock prober
  291  	fakeVolumeHost := volumetest.NewFakeKubeletVolumeHost(t, tmpDir, kubeClient, nil)

pkg\kubelet\volumemanager\cache\desired_state_of_wold_selinux_metrics.go:
  26  var (
  27: 	// TODO: add plugin name + access mode labels to all these metrics
  28  	seLinuxContainerContextErrors = compbasemetrics.NewGauge(

pkg\kubelet\volumemanager\cache\desired_state_of_world.go:
  339  			if seLinuxFileLabel != vol.seLinuxFileLabel {
  340: 				// TODO: update the error message after tests, e.g. add at least the conflicting pod names.
  341  				fullErr := fmt.Errorf("conflicting SELinux labels of volume %s: %q and %q", volumeSpec.Name(), vol.seLinuxFileLabel, seLinuxFileLabel)

pkg\kubelet\volumemanager\populator\desired_state_of_world_populator.go:
  499  
  500: 		// TODO: replace this with util.GetVolumeMode() when features.BlockVolume is removed.
  501  		// The function will return the right value then.

  506  
  507: 		// TODO: remove features.BlockVolume checks / comments after no longer needed
  508  		// Error if a container has volumeMounts but the volumeMode of PVC isn't Filesystem.

pkg\kubelet\volumemanager\reconciler\reconciler.go:
  222  		if cache.IsSELinuxMountMismatchError(err) {
  223: 			// TODO: check error message + lower frequency, this can be noisy
  224  			klog.ErrorS(err, volumeToMount.GenerateErrorDetailed("mount precondition failed, please report this error in https://github.com/kubernetes/enhancements/issues/1710, together with full Pod yaml file", err).Error(), "pod", klog.KObj(volumeToMount.Pod))
  225: 			// TODO: report error better, this may be too noisy
  226  			rc.desiredStateOfWorld.AddErrorToPod(volumeToMount.PodName, err.Error())

  559  	}
  560: 	// TODO: Currently cleanupMounts only includes UnmountVolume operation. In the next PR, we will add
  561  	// to unmount both volume and device in the same routine.

  702  		// devicePath is updated during updateStates() by checking node status's VolumesAttached data.
  703: 		// TODO: get device path directly from the volume mount path.
  704  		devicePath:        "",

  772  			}
  773: 			// TODO(jsafrane): add reconstructed SELinux context
  774  			err = rc.actualStateOfWorld.MarkDeviceAsMounted(gvl.volumeName, gvl.devicePath, deviceMountPath, "")

pkg\printers\internalversion\import_known_versions.go:
  20  	// These imports are the API groups the client will support.
  21: 	// TODO: Remove these manual install once we don't need legacy scheme in get command
  22  	_ "k8s.io/kubernetes/pkg/apis/apps/install"

pkg\printers\internalversion\printers.go:
   86  // AddHandlers adds print handlers for default Kubernetes types dealing with internal versions.
   87: // TODO: handle errors from Handler
   88  func AddHandlers(h printers.PrintHandler) {

  967  
  968: // TODO(AdoHe): try to put wide output in a single method
  969  func printReplicationController(obj *api.ReplicationController, options printers.GenerateOptions) ([]metav1.TableRow, error) {

pkg\probe\exec\errors.go:
  32  // in order for the exec prober to interpret exec timeouts as failed probes.
  33: // TODO: this error type can likely be removed when we support CRI errors.
  34  type TimeoutError struct {

pkg\proxy\endpoints.go:
   47  type BaseEndpointInfo struct {
   48: 	Endpoint string // TODO: should be an endpointString type
   49  	// IsLocal indicates whether the endpoint is running in same host as kube-proxy.

   58  	// true since only ready endpoints are read from Endpoints.
   59: 	// TODO: Ready can be inferred from Serving and Terminating below when enabled by default.
   60  	Ready bool

  293  		// we want to measure. So we simply ignore it in this cases.
  294: 		// TODO(wojtek-t, robscott): Address the problem for EndpointSlice deletion
  295  		// when other EndpointSlice for that service still exist.

  346  func getLastChangeTriggerTime(annotations map[string]string) time.Time {
  347: 	// TODO(#81360): ignore case when Endpoint is deleted.
  348  	if _, ok := annotations[v1.EndpointsLastChangeTriggerTime]; !ok {

  394  
  395: 	// TODO: If this will appear to be computationally expensive, consider
  396  	// computing this incrementally similarly to endpointsMap.

pkg\proxy\endpointslicecache.go:
  240  			}
  241: 			// TODO: handle nil ports to mean "all"
  242  			if port.Port == nil || *port.Port == int32(0) {

pkg\proxy\service.go:
  345  
  346: 	// TODO: If this will appear to be computationally expensive, consider
  347  	// computing this incrementally similarly to serviceMap.

pkg\proxy\types.go:
  105  // Endpoint in an interface which abstracts information about an endpoint.
  106: // TODO: Rename functions to be consistent with ServicePort.
  107  type Endpoint interface {

pkg\proxy\config\config_test.go:
  431  
  432: // TODO: Add a unittest for interrupts getting processed in a timely manner.
  433  // Currently this module has a circular dependency with config, and so it's

pkg\proxy\healthcheck\proxier_health.go:
  105  		msg := fmt.Sprintf("failed to start proxier healthz on %s: %v", hs.addr, err)
  106: 		// TODO(thockin): move eventing back to caller
  107  		if hs.recorder != nil {

pkg\proxy\iptables\proxier_test.go:
   383  func NewFakeProxier(ipt utiliptables.Interface) *Proxier {
   384: 	// TODO: Call NewProxier after refactoring out the goroutine
   385  	// invocation into a Run() method.

  5091  
  5092: // TODO(thockin): add *more* tests for syncProxyRules() or break it down further and test the pieces.
  5093  

pkg\proxy\iptables\proxier.go:
   726  // This assumes the proxier mutex is held
   727: // TODO: move it to util
   728  func (proxier *Proxier) deleteEndpointConnections(connectionMap []proxy.ServiceEndpoint) {

  1509  	// Clear stale conntrack entries for UDP Services, this has to be done AFTER the iptables rules are programmed.
  1510: 	// TODO: these could be made more consistent.
  1511  	klog.V(4).InfoS("Deleting conntrack stale entries for services", "IPs", conntrackCleanupServiceIPs.UnsortedList())

pkg\proxy\ipvs\proxier.go:
  1634  	// Finish housekeeping.
  1635: 	// TODO: these could be made more consistent.
  1636  	for _, svcIP := range staleServices.UnsortedList() {

pkg\proxy\metaproxier\meta_proxier.go:
  31  	ipv6Proxier proxy.Provider
  32: 	// TODO(imroc): implement node handler for meta proxier.
  33  	config.NoopNodeHandler

pkg\proxy\userspace\proxier_test.go:
  1023  
  1024: // TODO(justinsb): Add test for nodePort conflict detection, once we have nodePort wired in

pkg\proxy\userspace\proxier.go:
   141  	config.NoopEndpointSliceHandler
   142: 	// TODO(imroc): implement node handler for userspace proxier.
   143  	config.NoopNodeHandler

   511  		info, exists := proxier.serviceMap[serviceName]
   512: 		// TODO: check health of the socket? What if ProxyLoop exited?
   513  		if exists && sameConfig(info, service, servicePort) {

   829  
   830: 	// TODO: We could pre-populate some reserved ports into portMap and/or blacklist some well-known ports
   831  

   878  func (proxier *Proxier) openNodePort(nodePort int, protocol v1.Protocol, proxyIP net.IP, proxyPort int, name proxy.ServicePortName) error {
   879: 	// TODO: Do we want to allow containers to access public services?  Probably yes.
   880: 	// TODO: We could refactor this to be the same code as portal, but with IP == nil
   881  

  1026  func iptablesInit(ipt iptables.Interface) error {
  1027: 	// TODO: There is almost certainly room for optimization here.  E.g. If
  1028  	// we knew the service-cluster-ip-range CIDR we could fast-track outbound packets not

  1089  
  1090: 	// TODO: Verify order of rules.
  1091  	return nil

  1195  	if proxyIP.Equal(zeroIPv4) || proxyIP.Equal(zeroIPv6) {
  1196: 		// TODO: Can we REDIRECT with IPv6?
  1197  		args = append(args, "-j", "REDIRECT", "--to-ports", fmt.Sprintf("%d", proxyPort))
  1198  	} else {
  1199: 		// TODO: Can we DNAT with IPv6?
  1200  		args = append(args, "-j", "DNAT", "--to-destination", net.JoinHostPort(proxyIP.String(), strconv.Itoa(proxyPort)))

  1232  	}
  1233: 	// TODO: Can we DNAT with IPv6?
  1234  	args = append(args, "-j", "DNAT", "--to-destination", net.JoinHostPort(proxyIP.String(), strconv.Itoa(proxyPort)))

  1239  // See iptablesHostPortalArgs
  1240: // TODO: Should we just reuse iptablesHostPortalArgs?
  1241  func (proxier *Proxier) iptablesHostNodePortArgs(nodePort int, protocol v1.Protocol, proxyIP net.IP, proxyPort int, service proxy.ServicePortName) []string {

  1246  	}
  1247: 	// TODO: Can we DNAT with IPv6?
  1248  	args = append(args, "-j", "DNAT", "--to-destination", net.JoinHostPort(proxyIP.String(), strconv.Itoa(proxyPort)))

  1265  	// https://code.google.com/p/go/issues/detail?id=4373#c14
  1266: 	// TODO: maybe create a stoppable TCP listener that returns a StoppedError
  1267  	return strings.HasSuffix(err.Error(), "use of closed network connection")

pkg\proxy\userspace\proxysocket.go:
  101  		klog.V(3).InfoS("Mapped service to endpoint", "service", service, "endpoint", endpoint)
  102: 		// TODO: This could spin up a new goroutine to make the outbound connection,
  103  		// and keep accepting inbound traffic.

  179  // no new connections are allowed and existing connections are broken.
  180: // TODO: We could lame-duck this ourselves, if it becomes important.
  181  type udpProxySocket struct {

  212  		// Block until data arrives.
  213: 		// TODO: Accumulate a histogram of n or something, to fine tune the buffer size.
  214  		n, cliAddr, err := udp.ReadFrom(buffer[0:])

  229  		}
  230: 		// TODO: It would be nice to let the goroutine handle this write, but we don't
  231  		// really want to copy the buffer.  We could do a pool of buffers or something.

  235  				klog.ErrorS(err, "Write failed")
  236: 				// TODO: Maybe tear down the goroutine for this client/server pair?
  237  			}

  253  	if !found {
  254: 		// TODO: This could spin up a new goroutine to make the outbound connection,
  255  		// and keep accepting inbound traffic.

  275  // This function is expected to be called as a goroutine.
  276: // TODO: Track and log bytes copied, like TCP
  277  func (udp *udpProxySocket) proxyClient(cliAddr net.Addr, svrConn net.Conn, activeClients *ClientCache, timeout time.Duration) {

pkg\proxy\winkernel\hns.go:
  98  		// Storing this is expensive in terms of memory, however there is a bug in Windows Server 2019 that can cause two endpoints to be created with the same IP address.
  99: 		// TODO: Store by IP only and remove any lookups by endpoint ID.
  100  		endpointInfos[ep.Id] = &endpointsInfo{

pkg\proxy\winkernel\proxier.go:
   517  type Proxier struct {
   518: 	// TODO(imroc): implement node handler for winkernel proxier.
   519  	proxyconfig.NoopNodeHandler

   777  	deleteAllHnsLoadBalancerPolicy()
   778: 	// TODO
   779  	// Delete all Hns Remote endpoints

  1136  			// Note that hcsshim.AddLoadBalancer() doesn't support endpoints with different ports, so only port from first endpoint is used.
  1137: 			// TODO(feiskyer): add support of different endpoint ports after hcsshim.AddLoadBalancer() add that.
  1138  			if svcInfo.targetPort == 0 {

  1141  			// There is a bug in Windows Server 2019 that can cause two endpoints to be created with the same IP address, so we need to check using endpoint ID first.
  1142: 			// TODO: Remove lookup by endpoint ID, and use the IP address only, so we don't need to maintain multiple keys for lookup.
  1143  			if len(ep.hnsID) > 0 {

  1417  	// Finish housekeeping.
  1418: 	// TODO: these could be made more consistent.
  1419  	for _, svcIP := range staleServices.UnsortedList() {
  1420: 		// TODO : Check if this is required to cleanup stale services here
  1421  		klog.V(5).InfoS("Pending delete stale service IP connections", "IP", svcIP)

pkg\proxy\winuserspace\proxier_test.go:
  958  
  959: // TODO(justinsb): Add test for nodePort conflict detection, once we have nodePort wired in

pkg\proxy\winuserspace\proxier.go:
   85  	config.NoopEndpointSliceHandler
   86: 	// TODO(imroc): implement node handler for winuserspace proxier.
   87  	config.NoopNodeHandler

  471  	// https://code.google.com/p/go/issues/detail?id=4373#c14
  472: 	// TODO: maybe create a stoppable TCP listener that returns a StoppedError
  473  	return strings.HasSuffix(err.Error(), "use of closed network connection")

pkg\proxy\winuserspace\proxysocket.go:
  107  		klog.V(3).InfoS("Mapped service to endpoint", "service", klog.KRef(service.Namespace, service.Name), "endpoint", endpoint)
  108: 		// TODO: This could spin up a new goroutine to make the outbound connection,
  109  		// and keep accepting inbound traffic.

  185  // no new connections are allowed and existing connections are broken.
  186: // TODO: We could lame-duck this ourselves, if it becomes important.
  187  type udpProxySocket struct {

  219  		// Block until data arrives.
  220: 		// TODO: Accumulate a histogram of n or something, to fine tune the buffer size.
  221  		n, cliAddr, err := udp.ReadFrom(buffer[0:])

  237  		}
  238: 		// TODO: It would be nice to let the goroutine handle this write, but we don't
  239  		// really want to copy the buffer.  We could do a pool of buffers or something.

  243  				klog.ErrorS(err, "Write failed")
  244: 				// TODO: Maybe tear down the goroutine for this client/server pair?
  245  			}

  261  	if !found {
  262: 		// TODO: This could spin up a new goroutine to make the outbound connection,
  263  		// and keep accepting inbound traffic.

  283  // This function is expected to be called as a goroutine.
  284: // TODO: Track and log bytes copied, like TCP
  285  func (udp *udpProxySocket) proxyClient(cliAddr net.Addr, svrConn net.Conn, activeClients *clientCache, service ServicePortPortalName, timeout time.Duration) {

pkg\quota\v1\evaluator\core\pods.go:
  356  	limits := corev1.ResourceList{}
  357: 	// TODO: ideally, we have pod level requests and limits in the future.
  358  	for i := range pod.Spec.Containers {

pkg\registry\admissionregistration\rest\storage_apiserver.go:
  35  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  36: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  37  

pkg\registry\apps\daemonset\strategy.go:
  106  	//
  107: 	// TODO: Any changes to a part of the object that represents desired state (labels,
  108  	// annotations etc) should also increment the generation.

  153  	// to prevent unintentionally breaking users who may rely on the old behavior.
  154: 	// TODO(#50791): after extensions/v1beta1 is removed, move selector immutability check inside ValidateDaemonSetUpdate().
  155  	if requestInfo, found := genericapirequest.RequestInfoFrom(ctx); found {

pkg\registry\apps\daemonset\storage\storage_test.go:
  199  
  200: // TODO TestUpdateStatus

pkg\registry\apps\deployment\strategy.go:
  132  	// to prevent unintentionally breaking users who may rely on the old behavior.
  133: 	// TODO(#50791): after apps/v1beta1 and extensions/v1beta1 are removed,
  134  	// move selector immutability check inside ValidateDeploymentUpdate().

pkg\registry\apps\deployment\storage\storage.go:
  375  	return &autoscaling.Scale{
  376: 		// TODO: Create a variant of ObjectMeta type that only contains the fields below.
  377  		ObjectMeta: metav1.ObjectMeta{

pkg\registry\apps\replicaset\strategy.go:
  146  	// to prevent unintentionally breaking users who may rely on the old behavior.
  147: 	// TODO(#50791): after extensions/v1beta1 is removed, move selector immutability check inside ValidateReplicaSetUpdate().
  148  	if requestInfo, found := genericapirequest.RequestInfoFrom(ctx); found {

pkg\registry\apps\replicaset\storage\storage.go:
  270  	return &autoscaling.Scale{
  271: 		// TODO: Create a variant of ObjectMeta type that only contains the fields below.
  272  		ObjectMeta: metav1.ObjectMeta{

pkg\registry\apps\rest\storage_apps.go:
  40  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  41: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  42  

pkg\registry\apps\statefulset\strategy.go:
  205  func (statefulSetStatusStrategy) ValidateUpdate(ctx context.Context, obj, old runtime.Object) field.ErrorList {
  206: 	// TODO: Validate status updates.
  207  	return validation.ValidateStatefulSetStatusUpdate(obj.(*apps.StatefulSet), old.(*apps.StatefulSet))

pkg\registry\apps\statefulset\storage\storage_test.go:
   42  
   43: // TODO: allow for global factory override
   44  func newStorage(t *testing.T) (StatefulSetStorage, *etcd3testing.EtcdTestServer) {

   98  		ps,
   99: 		// TODO: Add an invalid case when we have validation.
  100  	)

  102  
  103: // TODO: Test updates to spec when we allow them.
  104  

  298  
  299: // TODO: Test generation number.
  300  

pkg\registry\apps\statefulset\storage\storage.go:
  264  	return &autoscaling.Scale{
  265: 		// TODO: Create a variant of ObjectMeta type that only contains the fields below.
  266  		ObjectMeta: metav1.ObjectMeta{

pkg\registry\authentication\rest\storage_authentication.go:
  41  func (p RESTStorageProvider) NewRESTStorage(apiResourceConfigSource serverstorage.APIResourceConfigSource, restOptionsGetter generic.RESTOptionsGetter) (genericapiserver.APIGroupInfo, error) {
  42: 	// TODO figure out how to make the swagger generation stable, while allowing this endpoint to be disabled.
  43  	// if p.Authenticator == nil {

  48  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  49: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  50  

pkg\registry\authorization\rest\storage_authorization.go:
  45  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  46: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  47  

pkg\registry\autoscaling\rest\storage_autoscaling.go:
  37  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  38: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  39  

pkg\registry\batch\cronjob\storage\storage_test.go:
   33  
   34: // TODO: allow for global factory override
   35  func newStorage(t *testing.T) (*REST, *StatusREST, *etcd3testing.EtcdTestServer) {

  165  
  166: // TODO: test update /status

pkg\registry\batch\job\strategy_test.go:
  279  
  280: // TODO(#111514): refactor by spliting into dedicated test functions
  281  func TestJobStrategy(t *testing.T) {

pkg\registry\batch\job\strategy.go:
  154  	job := obj.(*batch.Job)
  155: 	// TODO: move UID generation earlier and do this in defaulting logic?
  156  	if job.Spec.ManualSelector == nil || *job.Spec.ManualSelector == false {

  243  
  244: // TODO: generalize generateSelector so it can work for other controller
  245  // objects such as ReplicaSet.  Can use pkg/api/meta to generically get the

pkg\registry\batch\job\storage\storage_test.go:
  362  
  363: // TODO: test update /status
  364  

pkg\registry\batch\rest\storage_batch.go:
  36  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  37: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  38  

pkg\registry\certificates\rest\storage_certificates.go:
  34  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  35: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  36  

pkg\registry\coordination\rest\storage_coordination.go:
  34  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  35: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  36  

pkg\registry\core\limitrange\storage\storage.go:
  43  
  44: 		// TODO: define table converter that exposes more than name/creation timestamp
  45  		TableConvertor: rest.NewDefaultTableConvertor(api.Resource("limitranges")),

pkg\registry\core\namespace\storage\storage.go:
  165  	// upon first request to delete, we switch the phase to start namespace termination
  166: 	// TODO: enhance graceful deletion's calls to DeleteStrategy to allow phase change and finalizer patterns
  167  	if namespace.DeletionTimestamp.IsZero() {

pkg\registry\core\node\storage\storage.go:
  138  		}
  139: 		// TODO: Remove the conversion. Consider only return the NodeAddresses
  140  		externalNode := &v1.Node{}

pkg\registry\core\pod\strategy.go:
  299  // ToSelectableFields returns a field set that represents the object
  300: // TODO: fields are not labels, and the validation rules for them do not apply.
  301  func ToSelectableFields(pod *api.Pod) fields.Set {

  311  	podSpecificFieldsSet["status.phase"] = string(pod.Status.Phase)
  312: 	// TODO: add podIPs as a downward API value(s) with proper format
  313  	podIP := ""

pkg\registry\core\pod\rest\log.go:
  49  func (r *LogREST) New() runtime.Object {
  50: 	// TODO - return a resource that represents a log
  51  	return &api.Pod{}

pkg\registry\core\pod\storage\eviction.go:
  362  func createTooManyRequestsError(name string) error {
  363: 	// TODO: Once there are time-based
  364  	// budgets, we can sometimes compute a sensible suggested value.  But

pkg\registry\core\pod\storage\storage.go:
  176  
  177: 	// TODO: move me to a binding strategy
  178  	if errs := validation.ValidatePodBinding(binding); len(errs) != 0 {

pkg\registry\core\rest\storage_core.go:
   96  // master.go for wiring controllers.
   97: // TODO remove this by running the controller as a poststarthook
   98  type LegacyRESTStorage struct {

  202  		mem = allocator.NewAllocationMapWithOffset(max, rangeSpec, offset)
  203: 		// TODO etcdallocator package to return a storage interface via the storageFactory
  204  		etcd, err := serviceallocator.NewEtcd(mem, "/ranges/serviceips", serviceStorageConfig.ForResource(api.Resource("serviceipallocations")))

  223  			mem = allocator.NewAllocationMapWithOffset(max, rangeSpec, offset)
  224: 			// TODO etcdallocator package to return a storage interface via the storageFactory
  225  			etcd, err := serviceallocator.NewEtcd(mem, "/ranges/secondaryserviceips", serviceStorageConfig.ForResource(api.Resource("serviceipallocations")))

  241  		mem := allocator.NewAllocationMap(max, rangeSpec)
  242: 		// TODO etcdallocator package to return a storage interface via the storageFactory
  243  		etcd, err := serviceallocator.NewEtcd(mem, "/ranges/servicenodeports", serviceStorageConfig.ForResource(api.Resource("servicenodeportallocations")))

  391  	// this is fragile, which assumes that the default port is being used
  392: 	// TODO: switch to secure port until these components remove the ability to serve insecurely.
  393  	serversToValidate := map[string]*componentstatus.Server{

  417  		}
  418: 		// TODO: etcd health checking should be abstracted in the storage tier
  419  		serversToValidate[fmt.Sprintf("etcd-%d", ix)] = &componentstatus.Server{

pkg\registry\core\service\allocator\bitmap.go:
  35  //
  36: // TODO: use RLE and compact the allocator to minimize space.
  37  type AllocationBitmap struct {

pkg\registry\core\service\allocator\storage\storage.go:
  42  // Etcd exposes a service.Allocator
  43: // TODO: allow multiple allocations to be tried at once
  44: // TODO: subdivide the keyspace to reduce conflicts
  45: // TODO: investigate issuing a CAS without reading first
  46  type Etcd struct {

pkg\registry\core\service\ipallocator\controller\repair.go:
   55  //
   56: // TODO: allocate new IPs if necessary
   57: // TODO: perform repair?
   58  type Repair struct {

  138  func (c *Repair) doRunOnce() error {
  139: 	// TODO: (per smarterclayton) if Get() or ListServices() is a weak consistency read,
  140  	// or if they are executed against different leaders,

pkg\registry\core\service\portallocator\controller\repair.go:
   96  func (c *Repair) doRunOnce() error {
   97: 	// TODO: (per smarterclayton) if Get() or ListServices() is a weak consistency read,
   98  	// or if they are executed against different leaders,

  242  		s := seen[healthPort]
  243: 		// TODO: is it safe to assume the protocol is always TCP?
  244  		if s == nil || s.Has(string(corev1.ProtocolTCP)) {

pkg\registry\core\service\storage\alloc.go:
  150  	// rest of allocation code to not have to consider corner cases.
  151: 	// TODO(thockin): when we tighten validation (e.g. to require IPs) we will
  152  	// need a "strict" and a "loose" form of this.

  503  				if err != nil {
  504: 					// TODO: when validation becomes versioned, this gets more complicated.
  505  					el := field.ErrorList{field.Invalid(field.NewPath("spec", "ports").Index(i).Child("nodePort"), np, err.Error())}

  512  				if err != nil {
  513: 					// TODO: what error should be returned here?  It's not a
  514  					// field-level validation failure (the field is valid), and it's

  521  		} else if int(servicePort.NodePort) != allocatedNodePort {
  522: 			// TODO(xiangpengzhao): do we need to allocate a new NodePort in this case?
  523  			// Note: the current implementation is better, because it saves a NodePort.

  528  				if err != nil {
  529: 					// TODO: when validation becomes versioned, this gets more complicated.
  530  					el := field.ErrorList{field.Invalid(field.NewPath("spec", "ports").Index(i).Child("nodePort"), servicePort.NodePort, err.Error())}

  800  			if err != nil {
  801: 				// TODO: what error should be returned here?  It's not a
  802  				// field-level validation failure (the field is valid), and it's

pkg\registry\core\service\storage\storage_test.go:
  11564  
  11565: // TODO(thockin): We need to look at feature-tests for:
  11566  //   externalIPs, lbip, lbsourceranges, externalname, PublishNotReadyAddresses, AllocateLoadBalancerNodePorts, LoadBalancerClass, status

pkg\registry\core\service\storage\storage.go:
  335  		ctx := genericapirequest.WithNamespace(genericapirequest.NewContext(), svc.Namespace)
  336: 		// TODO: This is clumsy.  It was added for fear that the endpoints
  337  		// controller might lag, and we could end up rusing the service name

  466  					addr := ss.Addresses[(addrSeed+try)%len(ss.Addresses)]
  467: 					// TODO(thockin): do we really need this check?
  468  					if err := isValidAddress(ctx, &addr, r.pods); err != nil {

pkg\registry\discovery\rest\storage_discovery.go:
  37  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  38: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  39  

pkg\registry\events\rest\storage_events.go:
  39  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  40: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  41  

pkg\registry\networking\ingress\storage\storage_test.go:
  253  
  254: // TODO TestUpdateStatus

pkg\registry\networking\rest\storage_settings.go:
  38  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  39: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  40  

pkg\registry\policy\poddisruptionbudget\storage\storage_test.go:
   70  		pdb,
   71: 		// TODO: Add an invalid case when we have validation.
   72  	)

   74  
   75: // TODO: Test updates to spec when we allow them.
   76  

  173  
  174: // TODO: Test generation number.

pkg\registry\policy\rest\storage_policy.go:
  36  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  37: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  38  

pkg\registry\rbac\clusterrole\storage\storage.go:
  43  
  44: 		// TODO: define table converter that exposes more than name/creation timestamp?
  45  		TableConvertor: rest.NewDefaultTableConvertor(rbac.Resource("clusterroles")),

pkg\registry\rbac\rest\storage_rbac.go:
  69  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  70: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  71  

pkg\registry\rbac\role\storage\storage.go:
  43  
  44: 		// TODO: define table converter that exposes more than name/creation timestamp?
  45  		TableConvertor: rest.NewDefaultTableConvertor(rbac.Resource("roles")),

pkg\registry\rbac\validation\rule.go:
  359  		}
  360: 		// TODO(ericchiang): need to implement label selectors?
  361  		roleBindingList = append(roleBindingList, roleBinding)

pkg\registry\registrytest\endpoint.go:
   42  func (e *EndpointRegistry) List(ctx context.Context, options *metainternalversion.ListOptions) (runtime.Object, error) {
   43: 	// TODO: support namespaces in this mock
   44  	e.lock.Lock()

   57  func (e *EndpointRegistry) Get(ctx context.Context, name string, options *metav1.GetOptions) (runtime.Object, error) {
   58: 	// TODO: support namespaces in this mock
   59  	e.lock.Lock()

   87  	endpoints := obj.(*api.Endpoints)
   88: 	// TODO: support namespaces in this mock
   89  	e.lock.Lock()

  114  func (e *EndpointRegistry) Delete(ctx context.Context, name string, deleteValidation rest.ValidateObjectFunc, options *metav1.DeleteOptions) (runtime.Object, bool, error) {
  115: 	// TODO: support namespaces in this mock
  116  	e.lock.Lock()

pkg\registry\storage\rest\storage_storage.go:
  41  	// If you add a version here, be sure to add an entry in `k8s.io/kubernetes/cmd/kube-apiserver/app/aggregator.go with specific priorities.
  42: 	// TODO refactor the plumbing to provide the information in the APIGroupInfo
  43  

pkg\scheduler\schedule_one.go:
  239  			// as the assumed Pod had occupied a certain amount of resources in scheduler cache.
  240: 			// TODO(#103853): de-duplicate the logic.
  241  			// Avoid moving the assumed Pod itself as it's always Unschedulable.

  274  			// as the assumed Pod had occupied a certain amount of resources in scheduler cache.
  275: 			// TODO(#103853): de-duplicate the logic.
  276  			if preBindStatus.IsUnschedulable() {

  305  			// as the assumed Pod had occupied a certain amount of resources in scheduler cache.
  306: 			// TODO(#103853): de-duplicate the logic.
  307  			if bindStatus.IsUnschedulable() {

  823  
  824: // TODO(#87159): Move this to a Plugin.
  825  func (sched *Scheduler) extendersBinding(pod *v1.Pod, node string) (bool, error) {

pkg\scheduler\apis\config\types.go:
  66  	// DebuggingConfiguration holds configuration for Debugging related features
  67: 	// TODO: We might wanna make this a substruct like Debugging componentbaseconfig.DebuggingConfiguration
  68  	componentbaseconfig.DebuggingConfiguration

pkg\scheduler\apis\config\validation\validation_pluginargs.go:
  250  	}
  251: 	// TODO: Add validation for requiredDuringSchedulingRequiredDuringExecution when it gets added to the API.
  252  	if terms := affinity.PreferredDuringSchedulingIgnoredDuringExecution; len(terms) != 0 {

pkg\scheduler\framework\types.go:
  334  		}
  335: 		// TODO: Uncomment this block when implement RequiredDuringSchedulingRequiredDuringExecution.
  336  		//if len(affinity.PodAffinity.RequiredDuringSchedulingRequiredDuringExecution) != 0 {

  347  		}
  348: 		// TODO: Uncomment this block when implement RequiredDuringSchedulingRequiredDuringExecution.
  349  		//if len(affinity.PodAntiAffinity.RequiredDuringSchedulingRequiredDuringExecution) != 0 {

pkg\scheduler\framework\plugins\imagelocality\image_locality.go:
  116  // normalizedImageName returns the CRI compliant name for a given image.
  117: // TODO: cover the corner cases of missed matches, e.g,
  118  // 1. Using Docker as runtime and docker.io/library/test:tag in pod spec, but only test:tag will present in node status

pkg\scheduler\framework\plugins\nodeaffinity\node_affinity_test.go:
  33  
  34: // TODO: Add test case for RequiredDuringSchedulingRequiredDuringExecution after it's implemented.
  35  func TestNodeAffinity(t *testing.T) {

pkg\scheduler\framework\plugins\nodeaffinity\node_affinity.go:
  257  		}
  258: 		// TODO: parse requiredDuringSchedulingRequiredDuringExecution when it gets added to the API.
  259  		if terms := args.AddedAffinity.PreferredDuringSchedulingIgnoredDuringExecution; len(terms) != 0 {

pkg\scheduler\framework\plugins\nodevolumelimits\csi.go:
   97  	if err != nil {
   98: 		// TODO: return the error once CSINode is created by default (2 releases)
   99  		klog.V(5).InfoS("Could not get a CSINode object for the node", "node", klog.KObj(node), "err", err)

  374  func getVolumeLimits(nodeInfo *framework.NodeInfo, csiNode *storagev1.CSINode) map[v1.ResourceName]int64 {
  375: 	// TODO: stop getting values from Node object in v1.18
  376  	nodeVolumeLimits := volumeLimits(nodeInfo)

  380  			if d.Allocatable != nil && d.Allocatable.Count != nil {
  381: 				// TODO: drop GetCSIAttachLimitKey once we don't get values from Node object (v1.18)
  382  				k := v1.ResourceName(volumeutil.GetCSIAttachLimitKey(d.Name))

pkg\scheduler\framework\plugins\nodevolumelimits\non_csi.go:
  49  	// Larger Azure VMs can actually have much more disks attached.
  50: 	// TODO We should determine the max based on VM size
  51  	defaultMaxAzureDiskVolumes = 16

pkg\scheduler\framework\plugins\podtopologyspread\filtering_test.go:
  2376  		{
  2377: 			// TODO(Huang-Wei): maybe document this to remind users that typos on node labels
  2378  			// can cause unexpected behavior

  2469  			// not a desired case, but it can happen
  2470: 			// TODO(Huang-Wei): document this "pod-not-match-itself" case
  2471  			// in this case, placement of the new pod doesn't change pod distribution of the cluster

pkg\scheduler\framework\plugins\selectorspread\selector_spread.go:
  52  	// When zone information is present, give 2/3 of the weighting to zone spreading, 1/3 to node spreading
  53: 	// TODO: Any way to justify this weighting?
  54  	zoneWeighting float64 = 2.0 / 3.0

pkg\scheduler\framework\plugins\volumebinding\binder_test.go:
   51  	// PVCs for manual binding
   52: 	// TODO: clean up all of these
   53  	unboundPVC          = makeTestPVC("unbound-pvc", "1G", "", pvcUnbound, "", "1", &waitClass)

  145  	reactor := pvtesting.NewVolumeReactor(client, nil, nil, nil)
  146: 	// TODO refactor all tests to use real watch mechanism, see #72327
  147  	client.AddWatchReactor("*", func(action k8stesting.Action) (handled bool, ret watch.Interface, err error) {

pkg\scheduler\framework\plugins\volumebinding\binder.go:
  392  		}
  393: 		// TODO: can we assume every time?
  394  		if dirty {

  503  		klog.V(5).InfoS("bindAPIUpdate: binding PV to PVC", "pod", klog.KObj(pod), "PV", klog.KObj(binding.pv), "PVC", klog.KObj(binding.pvc))
  504: 		// TODO: does it hurt if we make an api call and nothing needs to be updated?
  505  		klog.V(2).InfoS("Claim bound to volume", "PVC", klog.KObj(binding.pvc), "PV", klog.KObj(binding.pv))

  562  	if err != nil {
  563: 		// TODO: return the error once CSINode is created by default
  564  		klog.V(4).InfoS("Could not get a CSINode object for the node", "node", klog.KObj(node), "err", err)

  780  	if err != nil {
  781: 		// TODO: return the error once CSINode is created by default
  782  		klog.V(4).InfoS("Could not get a CSINode object for the node", "node", klog.KObj(node), "err", err)

  937  	// Look for a matching CSIStorageCapacity object(s).
  938: 	// TODO (for beta): benchmark this and potentially introduce some kind of lookup structure (https://github.com/kubernetes/enhancements/issues/1698#issuecomment-654356718).
  939  	capacities, err := b.csiStorageCapacityLister.List(labels.Everything())

  953  
  954: 	// TODO (?): this doesn't give any information about which pools where considered and why
  955  	// they had to be rejected. Log that above? But that might be a lot of log output...

pkg\scheduler\framework\plugins\volumerestrictions\volume_restrictions.go:
  129  // use a ReadWriteOncePod PVC, mark any other pods attempting to use this PVC as UnschedulableAndUnresolvable.
  130: // TODO(#103132): Mark pod as Unschedulable and add preemption logic.
  131  func (pl *VolumeRestrictions) isReadWriteOncePodAccessModeConflict(ctx context.Context, pod *v1.Pod) *framework.Status {

pkg\scheduler\metrics\resources\resources.go:
  191  		terminal = true
  192: 		// TODO: resolve https://github.com/kubernetes/kubernetes/issues/96515 and add a condition here
  193  		// for checking that terminal state

pkg\scheduler\testing\fake_extender.go:
  275  
  276: 	// TODO(harry): handle PDBs in the future.
  277  	numViolatingVictim := 0

pkg\security\apparmor\validate.go:
  82  		}
  83: 		// TODO(#64841): This would ideally be part of validation.ValidateAppArmorProfileFormat, but
  84  		// that is called for API validation, and this is tightening validation.

pkg\serviceaccount\jwt.go:
  274  
  275: 	// TODO: Pick the key that has the same key ID as `tok`, if one exists.
  276  	var (

pkg\serviceaccount\openidmetadata.go:
  103  
  104: 		// TODO(mtaufen): I think we can probably expect ExternalAddress is
  105  		// at most just host + port and skip the sanity check, but want to be

  148  	Issuer string `json:"issuer"` // REQUIRED in OIDC; meaningful to relying parties.
  149: 	// TODO(mtaufen): Since our goal is compatibility for relying parties that
  150  	// need to validate ID tokens, but do not need to initiate login flows,

pkg\util\bandwidth\linux.go:
  260  	}
  261: 	// TODO: actually check bandwidth limits here
  262  	return nil

pkg\util\conntrack\conntrack.go:
   51  	if err != nil && !strings.Contains(err.Error(), NoConnectionToDelete) {
   52: 		// TODO: Better handling for deletion failure. When failure occur, stale udp connection may not get flushed.
   53  		// These stale udp connection will keep black hole traffic. Making this a best effort operation for now, since it

  105  	if err != nil && !strings.Contains(err.Error(), NoConnectionToDelete) {
  106: 		// TODO: Better handling for deletion failure. When failure occur, stale udp connection may not get flushed.
  107  		// These stale udp connection will keep black hole traffic. Making this a best effort operation for now, since it

pkg\util\flag\flags.go:
  36  
  37: // TODO(mikedanese): remove these flag wrapper types when we remove command line flags
  38  

pkg\util\ipconfig\ipconfig.go:
  63  	//
  64: 	// TODO: this does not work when the label is localized
  65  	suffixList := []string{}

pkg\util\ipset\ipset_test.go:
  1391  			set: &IPSet{
  1392: 				// TODO: set name string with white space?
  1393  				Name: "negative-port-number",

  1458  				Name: "IPV6",
  1459: 				// TODO: check set's hash family
  1460  			},

  1576  				Name: "IPV6",
  1577: 				// TODO: check set's hash family
  1578  			},

pkg\util\ipset\testing\fake_test.go:
  157  
  158: // TODO: Test ignoreExistErr=false

pkg\util\iptables\iptables.go:
  529  
  530: 		// TODO: This misses reorderings e.g. "-x foo ! -y bar" will match "! -x foo -y bar"
  531  		if sets.NewString(fields...).IsSuperset(argset) {

pkg\util\ipvs\ipvs_linux.go:
  194  		dst, err := toRealServer(dst)
  195: 		// TODO: aggregate errors?
  196  		if err != nil {

pkg\util\labels\labels.go:
  78  
  79: 	// TODO(madhusudancs): Check if you can use deepCopy_extensions_LabelSelector here.
  80  	newSelector.MatchLabels = make(map[string]string)

pkg\util\netsh\netsh.go:
  40  	// Restore runs `netsh exec` to restore portproxy or addresses using a file.
  41: 	// TODO Check if this is required, most likely not
  42  	Restore(args []string) error

pkg\util\netsh\testing\fake.go:
  57  // Restore runs `netsh exec` to restore portproxy or addresses using a file.
  58: // TODO Check if this is required, most likely not
  59  func (*FakeNetsh) Restore(args []string) error {

pkg\util\oom\oom.go:
  20  // applying OOM score in tests.
  21: // TODO: make this an interface, and inject a mock ioutil struct for testing.
  22  type OOMAdjuster struct {

pkg\volume\metrics_block.go:
  56  
  57: 	// TODO: Windows does not yet support VolumeMode=Block
  58  	if runtime.GOOS == "windows" {

pkg\volume\metrics_du_test.go:
  66  
  67: 	// TODO(pwittroc): Figure out a way to test these values for correctness, maybe by formatting and mounting a file
  68  	// as a filesystem

pkg\volume\plugins_test.go:
  111  	vpm := VolumePluginMgr{}
  112: 	var prober DynamicPluginProber = nil // TODO (#51147) inject mock
  113  	vpm.InitPlugins(newTestPlugin(), prober, nil)

pkg\volume\plugins.go:
   69  	// The attributes below are required by volume.Provisioner
   70: 	// TODO: refactor all of this out of volumes when an admin can configure
   71  	// many kinds of provisioners.

  312  
  313: // TODO(#14217)
  314  // As part of the Volume Host refactor we are starting to create Volume Hosts

pkg\volume\awsebs\attacher_windows.go:
  36  // getDiskNumber gets the Windows disk number for a given volume ID. The disk number is needed for mounting.
  37: // TODO This only works for Nitro-based instances
  38: // TODO fallback to Get-Disk
  39  func (attacher *awsElasticBlockStoreAttacher) getDiskNumber(volumeID string) (string, error) {

pkg\volume\awsebs\aws_ebs_test.go:
   92  
   93: // TODO(jonesdl) To fully test this, we could create a loopback device
   94  // and mount that instead.

  394  
  395: 	// TODO: add test case for immediate bind volume when we have a good way to mock Cloud outside cloudprovider
  396  	tests := []struct {

pkg\volume\awsebs\aws_ebs.go:
  369  func (b *awsElasticBlockStoreMounter) SetUpAt(dir string, mounterArgs volume.MounterArgs) error {
  370: 	// TODO: handle failed mounts here.
  371  	notMnt, err := b.mounter.IsLikelyNotMountPoint(dir)

pkg\volume\awsebs\aws_util.go:
  104  
  105: 	// TODO: implement PVC.Selector parsing
  106  	if c.options.PVC.Spec.Selector != nil {

pkg\volume\azure_file\azure_provision.go:
  190  	}
  191: 	// TODO: implement c.options.ProvisionerSelector parsing
  192  	if a.options.PVC.Spec.Selector != nil {

pkg\volume\cephfs\cephfs.go:
  341  	if cephfsVolume.secret != "" {
  342: 		// TODO: cephfs fuse currently doesn't support secret option,
  343  		// remove keyring file create once secret option is supported.

pkg\volume\csi\csi_attacher_test.go:
  1218  			// this test won't fail on Windows due to permission denied errors.
  1219: 			// TODO: Remove the skip once Windows file permissions support is added.
  1220  			// https://github.com/kubernetes/kubernetes/pull/110921

pkg\volume\csi\csi_attacher.go:
  159  
  160: 	timer := time.NewTimer(timeout) // TODO (vladimirvivien) investigate making this configurable
  161  	defer timer.Stop()

pkg\volume\csi\csi_block_test.go:
  56  
  57: 	// TODO (vladimirvivien) specName with slashes will not work
  58  	testCases := []struct {

pkg\volume\csi\csi_mounter_test.go:
  67  
  68: 	// TODO (vladimirvivien) specName with slashes will not work
  69  	testCases := []struct {

pkg\volume\csi\csi_mounter.go:
  42  
  43: // TODO (vladimirvivien) move this in a central loc later
  44  var (

pkg\volume\csi\csi_plugin.go:
   58  	// CsiResyncPeriod is default resync period duration
   59: 	// TODO: increase to something useful
   60  	CsiResyncPeriod = time.Minute

   84  
   85: // TODO (verult) consider using a struct instead of global variables
   86  // csiDrivers map keep track of all registered CSI drivers on the node and their

  328  func (p *csiPlugin) CanSupport(spec *volume.Spec) bool {
  329: 	// TODO (vladimirvivien) CanSupport should also take into account
  330  	// the availability/registration of specified Driver in the volume source

  561  func (p *csiPlugin) SupportsMountOption() bool {
  562: 	// TODO (vladimirvivien) use CSI VolumeCapability.MountVolume.mount_flags
  563  	// to probe for the result for this method

pkg\volume\csi\nodeinfomanager\nodeinfomanager_test.go:
  979  		}
  980: 		err = nim.InstallCSIDriver(driverName, nodeID, 0 /* maxVolumeLimit */, nil) // TODO test maxVolumeLimit
  981  		if err != nil {

pkg\volume\downwardapi\downwardapi.go:
  140  	pod     *v1.Pod
  141: 	podUID  types.UID // TODO: remove this redundancy as soon NewUnmounter func will have *v1.POD and not only types.UID
  142  	plugin  *downwardAPIPlugin

  168  // The internal sync interval of kubelet will drive the refresh of data.
  169: // TODO: Add volume specific ticker and refresh loop
  170  func (b *downwardAPIVolumeMounter) SetUp(mounterArgs volume.MounterArgs) error {

  257  		if fileInfo.FieldRef != nil {
  258: 			// TODO: unify with Kubelet.podFieldSelectorRuntimeValue
  259  			if values, err := fieldpath.ExtractFieldPathAsString(pod, fileInfo.FieldRef.FieldPath); err != nil {

pkg\volume\emptydir\empty_dir_test.go:
  359  
  360: 	// TODO(pwittroc): Move this into a reusable testing utility
  361  	metrics, err := mounter.GetMetrics()

pkg\volume\emptydir\empty_dir.go:
  40  
  41: // TODO: in the near future, this will be changed to be more restrictive
  42  // and the group will be set to allow containers to use emptyDir volumes

pkg\volume\fc\fc_util.go:
  323  	} else {
  324: 		// TODO: FC plugin can't obtain the devicePath from kubelet because devicePath
  325  		// in volume object isn't updated when volume is attached to kubelet node.

pkg\volume\flexvolume\probe.go:
  82  func (prober *flexVolumeProber) probeMap() (events []volume.ProbeEvent, err error) {
  83: 	// TODO use a concurrent map to avoid Locking the entire map
  84  	prober.mutex.Lock()

pkg\volume\gcepd\attacher.go:
  185  func getDiskID(pdName string, exec utilexec.Interface) (string, error) {
  186: 	// TODO: replace Get-GcePdName with native windows support of Get-Disk, see issue #74674
  187  	cmd := `Get-GcePdName | select Name, DeviceId | ConvertTo-Json`

pkg\volume\gcepd\gce_pd.go:
  373  func (b *gcePersistentDiskMounter) SetUpAt(dir string, mounterArgs volume.MounterArgs) error {
  374: 	// TODO: handle failed mounts here.
  375  	notMnt, err := b.mounter.IsLikelyNotMountPoint(dir)

pkg\volume\gcepd\gce_util.go:
  142  
  143: 	// TODO: implement PVC.Selector parsing
  144  	if c.options.PVC.Spec.Selector != nil {

pkg\volume\iscsi\iscsi.go:
  373  		// The volume must have been mounted in MountDevice with -o context.
  374: 		// TODO: extract from mount table in GetAttributes() to be sure?
  375  		b.mountedWithSELinuxContext = mounterArgs.SELinuxLabel != ""

pkg\volume\local\local.go:
  198  
  199: // TODO: check if no path and no topology constraints are ok
  200  func (plugin *localVolumePlugin) ConstructVolumeSpec(volumeName, mountPath string) (*volume.Spec, error) {

pkg\volume\rbd\disk_manager.go:
  19  // rbd volume implements diskManager, calls diskSetup when creating a volume, and calls diskTearDown inside volume unmounter.
  20: // TODO: consolidate, refactor, and share diskManager among iSCSI, GCE PD, and RBD
  21  //

pkg\volume\testing\testing.go:
  271  func (plugin *FakeVolumePlugin) CanSupport(spec *volume.Spec) bool {
  272: 	// TODO: maybe pattern-match on spec.Name() to decide?
  273  	return true

pkg\volume\testing\volume_host.go:
  54  // fakeVolumeHost is useful for testing volume plugins.
  55: // TODO: Extract fields specific to fakeKubeletVolumeHost and fakeAttachDetachVolumeHost.
  56  type fakeVolumeHost struct {

pkg\volume\util\atomic_writer.go:
  255  func validatePath(targetPath string) error {
  256: 	// TODO: somehow unify this with the similar api validation,
  257  	// validateVolumeSourcePath; the error semantics are just different enough

pkg\volume\util\metrics.go:
  96  		if *c.Err != nil {
  97: 			// TODO: Establish well-known error codes to be able to distinguish
  98  			// user configuration errors from system errors.

pkg\volume\util\storageclass.go:
  34  	// betaIsDefaultStorageClassAnnotation is the beta version of IsDefaultStorageClassAnnotation.
  35: 	// TODO: remove Beta when no longer used
  36  	BetaIsDefaultStorageClassAnnotation = "storageclass.beta.kubernetes.io/is-default-class"

  65  // annotation is set
  66: // TODO: remove Beta when no longer needed
  67  func IsDefaultAnnotation(obj metav1.ObjectMeta) bool {

pkg\volume\util\util.go:
  363  func IsPodTerminated(pod *v1.Pod, podStatus v1.PodStatus) bool {
  364: 	// TODO: the guarantees provided by kubelet status are not sufficient to guarantee it's safe to ignore a deleted pod,
  365  	// even if everything is notRunning (kubelet does not guarantee that when pod status is waiting that it isn't trying

  636  // HasMountRefs checks if the given mountPath has mountRefs.
  637: // TODO: this is a workaround for the unmount device issue caused by gci mounter.
  638  // In GCI cluster, if gci mounter is used for mounting, the container started by mounter

pkg\volume\util\hostutil\fake_hostutil.go:
  36  // for testing
  37: // TODO: no callers were initializing the struct with any MountPoints. Check
  38  // if those are still being used by any callers and if MountPoints still need

pkg\volume\util\hostutil\hostutil_linux.go:
  156  // EvalHostSymlinks returns the path name after evaluating symlinks.
  157: // TODO once the nsenter implementation is removed, this method can be removed
  158  // from the interface and filepath.EvalSymlinks used directly

pkg\volume\util\operationexecutor\operation_executor.go:
  244  	//
  245: 	// TODO: in the future, we should be able to remove the volumeName
  246  	// argument to this method -- since it is used only for attachable

  958  
  959: 	// TODO: remove this -- not necessary
  960  	if !volumeToMount.PluginIsAttachable && !volumeToMount.PluginIsDeviceMountable {

  965  
  966: 	// TODO mount_device
  967  	return oe.pendingOperations.Run(

pkg\volume\util\operationexecutor\operation_generator.go:
  1196  		// Update actual state of world with the devicePath again, if devicePath has changed from markedDevicePath
  1197: 		// TODO: This can be improved after #82492 is merged and ASW has state.
  1198  		if markedDevicePath != devicePath {

  2181  // recovery from volume expansion failure
  2182: // TODO: Removing this code when RecoverVolumeExpansionFailure feature goes GA.
  2183  func (og *operationGenerator) legacyCallNodeExpandOnPlugin(resizeOp nodeResizeOperationOpts) (bool, error) {

pkg\volume\util\subpath\subpath_linux.go:
  37  	// place for subpath mounts
  38: 	// TODO: pass in directory using kubelet_getters instead
  39  	containerSubPathDirectoryName = "volume-subpaths"

pkg\volume\util\volumepathhandler\volume_path_handler.go:
  130  		// Check if device file
  131: 		// TODO: Need to check if this device file is actually the expected bind mount
  132  		if file.Mode()&os.ModeDevice == os.ModeDevice {

  290  		filename := file.Name()
  291: 		// TODO: Might need to check if the file is actually linked to devPath
  292  		refs = append(refs, filepath.Join(mapPath, filename))

pkg\volume\vsphere_volume\vsphere_volume_util.go:
  152  	klog.V(4).Infof("VSANStorageProfileData in vsphere volume %q", volumeOptions.VSANStorageProfileData)
  153: 	// TODO: implement PVC.Selector parsing
  154  	if v.options.PVC.Spec.Selector != nil {

pkg\volume\vsphere_volume\vsphere_volume.go:
  227  
  228: 	// TODO: handle failed mounts here.
  229  	notmnt, err := b.mounter.IsLikelyNotMountPoint(dir)

plugin\pkg\admission\antiaffinity\admission_test.go:
  30  // ensures the hard PodAntiAffinity is denied if it defines TopologyKey other than kubernetes.io/hostname.
  31: // TODO: Add test case "invalid topologyKey in requiredDuringSchedulingRequiredDuringExecution then admission fails"
  32  // after RequiredDuringSchedulingRequiredDuringExecution is implemented.

plugin\pkg\admission\antiaffinity\admission.go:
  70  		}
  71: 		// TODO: Uncomment this block when implement RequiredDuringSchedulingRequiredDuringExecution.
  72  		//if len(affinity.PodAntiAffinity.RequiredDuringSchedulingRequiredDuringExecution) != 0 {

plugin\pkg\admission\eventratelimit\apis\eventratelimit\register.go:
  47  func addKnownTypes(scheme *runtime.Scheme) error {
  48: 	// TODO this will get cleaned up with the scheme types are fixed
  49  	scheme.AddKnownTypes(SchemeGroupVersion,

plugin\pkg\admission\eventratelimit\apis\eventratelimit\v1alpha1\register.go:
  30  var (
  31: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  32  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

plugin\pkg\admission\imagepolicy\admission.go:
  115  			attributes.AddAnnotation(AuditKeyPrefix+ImagePolicyFailedOpenKeySuffix, "true")
  116: 			// TODO(wteiken): Remove the annotation code for the 1.13 release
  117  			annotations := pod.GetAnnotations()

  250  
  251: 	// TODO: move this to a versioned configuration file format
  252  	var config AdmissionConfig

plugin\pkg\admission\limitranger\admission.go:
  163  		if !ok || lruItemObj.(liveLookupEntry).expiry.Before(time.Now()) {
  164: 			// TODO: If there are multiple operations at the same time and cache has just expired,
  165  			// this may cause multiple List operations being issued at the same time.

plugin\pkg\admission\noderestriction\admission.go:
  130  
  131: 	// TODO: if node doesn't exist and this isn't a create node request, then reject.
  132  

  369  
  370: 		// TODO(apelisse): We don't have a good mechanism to
  371  		// verify that only the things that should have changed

  497  		if isKubernetesLabel(label) && !kubeletapis.IsKubeletLabel(label) {
  498: 			// TODO: defer to label policy once available
  499  			forbiddenLabels.Insert(label)

plugin\pkg\admission\podnodeselector\admission.go:
  50  	plugins.Register(PluginName, func(config io.Reader) (admission.Interface, error) {
  51: 		// TODO move this to a versioned configuration file format.
  52  		pluginConfig := readConfig(config)

plugin\pkg\admission\podtolerationrestriction\apis\podtolerationrestriction\v1alpha1\register.go:
  30  var (
  31: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  32  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

plugin\pkg\admission\serviceaccount\admission.go:
  102  		Handler: admission.NewHandler(admission.Create),
  103: 		// TODO: enable this once we've swept secret usage to account for adding secret references to service accounts
  104  		LimitSecretReferences: false,

plugin\pkg\admission\storage\persistentvolume\label\admission.go:
  177  	// If they don't have GA labels we should check for failuredomain beta labels
  178: 	// TODO: remove this once all the cloud provider change to GA topology labels
  179  	if !domainOK || !regionOK {

plugin\pkg\auth\authenticator\token\bootstrap\bootstrap.go:
  39  
  40: // TODO: A few methods in this package is copied from other sources. Either
  41  // because the existing functionality isn't exported or because it is in a

plugin\pkg\auth\authorizer\node\graph_populator.go:
  191  	pv := obj.(*corev1.PersistentVolume)
  192: 	// TODO: skip add if uid, pvc, and secrets are all identical between old and new
  193  	g.graph.AddPV(pv)

plugin\pkg\auth\authorizer\node\graph.go:
  355  
  356: 	// TODO(mikedanese): If the pod doesn't mount the service account secrets,
  357  	// should the node still get access to the service account?

  490  
  491: 	// TODO(mtaufen): ensure len(nodeName) > 0 in all cases (would sure be nice to have a dependently-typed language here...)
  492  

plugin\pkg\auth\authorizer\rbac\bootstrappolicy\controller_policy.go:
  120  			rbacv1helpers.NewRule("get", "list", "watch", "create", "update", "patch", "delete").Groups(appsGroup, extensionsGroup).Resources("replicasets").RuleOrDie(),
  121: 			// TODO: remove "update" once
  122  			// https://github.com/kubernetes/kubernetes/issues/36897 is resolved.

  216  			rbacv1helpers.NewRule("list").Groups(legacyGroup).Resources("pods").RuleOrDie(),
  217: 			// TODO: restrict this to the appropriate namespace
  218  			rbacv1helpers.NewRule("get").Groups(legacyGroup).Resources("services/proxy").Names("https:heapster:", "http:heapster:").RuleOrDie(),

plugin\pkg\auth\authorizer\rbac\bootstrappolicy\namespace_policy.go:
  105  	})
  106: 	// TODO: Create util on Role+Binding for leader locking if more cases evolve.
  107  	addNamespaceRole(metav1.NamespaceSystem, rbacv1.Role{

plugin\pkg\auth\authorizer\rbac\bootstrappolicy\policy.go:
  121  
  122: 		// TODO: restrict to the bound node as creator in the NodeRestrictions admission plugin
  123  		rbacv1helpers.NewRule("create", "update", "patch").Groups(legacyGroup).Resources("events").RuleOrDie(),
  124  
  125: 		// TODO: restrict to pods scheduled on the bound node once field selectors are supported by list/watch authorization
  126  		rbacv1helpers.NewRule(Read...).Groups(legacyGroup).Resources("pods").RuleOrDie(),

  145  
  146: 		// TODO: add to the Node authorizer and restrict to endpoints referenced by pods or PVs bound to the node
  147  		// Needed for glusterfs volumes

  423  				rbacv1helpers.NewRule("get", "update").Groups(coordinationGroup).Resources("leases").Names("kube-controller-manager").RuleOrDie(),
  424: 				// TODO: Remove once we fully migrate to lease in leader-election.
  425  				rbacv1helpers.NewRule("create").Groups(legacyGroup).Resources("endpoints").RuleOrDie(),

  536  		// This is for leaderlease access
  537: 		// TODO: scope this to the kube-system namespace
  538  		rbacv1helpers.NewRule("create").Groups(coordinationGroup).Resources("leases").RuleOrDie(),
  539  		rbacv1helpers.NewRule("get", "update").Groups(coordinationGroup).Resources("leases").Names("kube-scheduler").RuleOrDie(),
  540: 		// TODO: Remove once we fully migrate to lease in leader-election.
  541  		rbacv1helpers.NewRule("create").Groups(legacyGroup).Resources("endpoints").RuleOrDie(),

staging\src\k8s.io\api\admission\v1\register.go:
  35  
  36: // TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  37  // localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\admission\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\admission\v1beta1\register.go:
  35  
  36: // TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  37  // localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\admission\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\admissionregistration\v1\register.go:
  35  
  36: // TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  37  // localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\admissionregistration\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\admissionregistration\v1beta1\register.go:
  35  
  36: // TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  37  // localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\admissionregistration\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\apiserverinternal\v1alpha1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\apps\v1\generated.proto:
  212    // ---
  213:   // TODO: Update this to follow our convention for oneOf, whatever we decide it
  214    // to be. Same as Deployment `strategy.rollingUpdate`.

  359    // ---
  360:   // TODO: Update this to follow our convention for oneOf, whatever we decide it
  361    // to be.

  647    // If unspecified, defaults to 1.
  648:   // TODO: Consider a rename of this field.
  649    // +optional

  668    // any volumes in the template, with the same name.
  669:   // TODO: Define the behavior if a claim already exists with the same name.
  670    // +optional

staging\src\k8s.io\api\apps\v1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\apps\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\apps\v1\types.go:
  171  	// If unspecified, defaults to 1.
  172: 	// TODO: Consider a rename of this field.
  173  	// +optional

  192  	// any volumes in the template, with the same name.
  193: 	// TODO: Define the behavior if a claim already exists with the same name.
  194  	// +optional

  403  	//---
  404: 	// TODO: Update this to follow our convention for oneOf, whatever we decide it
  405  	// to be.

  544  	//---
  545: 	// TODO: Update this to follow our convention for oneOf, whatever we decide it
  546  	// to be. Same as Deployment `strategy.rollingUpdate`.

  692  
  693: // TODO: Add valid condition types of a DaemonSet.
  694  

staging\src\k8s.io\api\apps\v1beta1\generated.proto:
  227    // ---
  228:   // TODO: Update this to follow our convention for oneOf, whatever we decide it
  229    // to be.

  405    // If unspecified, defaults to 1.
  406:   // TODO: Consider a rename of this field.
  407    // +optional

  427    // any volumes in the template, with the same name.
  428:   // TODO: Define the behavior if a claim already exists with the same name.
  429    // +optional

staging\src\k8s.io\api\apps\v1beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\apps\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\apps\v1beta1\types.go:
  212  	// If unspecified, defaults to 1.
  213: 	// TODO: Consider a rename of this field.
  214  	// +optional

  234  	// any volumes in the template, with the same name.
  235: 	// TODO: Define the behavior if a claim already exists with the same name.
  236  	// +optional

  476  	//---
  477: 	// TODO: Update this to follow our convention for oneOf, whatever we decide it
  478  	// to be.

staging\src\k8s.io\api\apps\v1beta2\generated.proto:
  216    // ---
  217:   // TODO: Update this to follow our convention for oneOf, whatever we decide it
  218    // to be. Same as Deployment `strategy.rollingUpdate`.

  364    // ---
  365:   // TODO: Update this to follow our convention for oneOf, whatever we decide it
  366    // to be.

  692    // If unspecified, defaults to 1.
  693:   // TODO: Consider a rename of this field.
  694    // +optional

  713    // any volumes in the template, with the same name.
  714:   // TODO: Define the behavior if a claim already exists with the same name.
  715    // +optional

staging\src\k8s.io\api\apps\v1beta2\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\apps\v1beta2\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\apps\v1beta2\types.go:
  222  	// If unspecified, defaults to 1.
  223: 	// TODO: Consider a rename of this field.
  224  	// +optional

  243  	// any volumes in the template, with the same name.
  244: 	// TODO: Define the behavior if a claim already exists with the same name.
  245  	// +optional

  453  	//---
  454: 	// TODO: Update this to follow our convention for oneOf, whatever we decide it
  455  	// to be.

  597  	//---
  598: 	// TODO: Update this to follow our convention for oneOf, whatever we decide it
  599  	// to be. Same as Deployment `strategy.rollingUpdate`.

  744  
  745: // TODO: Add valid condition types of a DaemonSet.
  746  

staging\src\k8s.io\api\authentication\v1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\authentication\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\authentication\v1alpha1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\authentication\v1alpha1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\authentication\v1beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\authentication\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\authorization\v1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\authorization\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\authorization\v1beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\authorization\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\autoscaling\v1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\autoscaling\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\autoscaling\v2\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\autoscaling\v2beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\autoscaling\v2beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\autoscaling\v2beta2\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\batch\v1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\batch\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\batch\v1\types.go:
  249  
  250: 	// TODO enabled it when https://github.com/kubernetes/kubernetes/issues/28486 has been fixed
  251  	// Optional number of failed pods to retain.

staging\src\k8s.io\api\batch\v1beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\batch\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\certificates\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\certificates\v1beta1\register.go:
  41  var (
  42: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  43  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\certificates\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\coordination\v1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\coordination\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\coordination\v1beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\coordination\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\core\v1\generated.proto:
    47    // More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    48:   // TODO: how do we prevent errors in the filesystem from compromising the machine
    49    // +optional

  1025    // kubernetes components, like kube-proxy, are not IPv6 ready.
  1026:   // TODO: This should allow hostname or IP, See #4447.
  1027    optional string ip = 1;

  1422    // for the transition into the object's current status.
  1423:   // TODO: provide exact specification for format.
  1424    // +optional

  1427    // A human-readable description of the status of this operation.
  1428:   // TODO: decide on maximum length.
  1429    // +optional

  1534    // Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  1535:   // TODO: how do we prevent errors in the filesystem from compromising the machine
  1536    // +optional

  1638    // More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  1639:   // TODO: how do we prevent errors in the filesystem from compromising the machine
  1640    // +optional

  1818    // More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
  1819:   // TODO: how do we prevent errors in the filesystem from compromising the machine
  1820    // +optional

  1874    // More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
  1875:   // TODO: how do we prevent errors in the filesystem from compromising the machine
  1876    // +optional

  2072    // More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  2073:   // TODO: Add other useful fields. apiVersion, kind, uid?
  2074    // +optional

  2590    // referencing a part of an object.
  2591:   // TODO: this design is not final and this field is subject to change in the future.
  2592    // +optional

  3122  // ---
  3123: // TODO: merge w/ PodExecOptions below for stdin, stdout, etc
  3124  // and also when we cut V2, we should export a "StreamOptions" or somesuch that contains Stdin, Stdout, Stder and TTY

  3215  // ---
  3216: // TODO: This is largely identical to PodAttachOptions above, make sure they stay in sync and see about merging
  3217  // and also when we cut V2, we should export a "StreamOptions" or somesuch that contains Stdin, Stdout, Stder and TTY

  4105    // More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
  4106:   // TODO: how do we prevent errors in the filesystem from compromising the machine
  4107    // +optional

  4156    // More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
  4157:   // TODO: how do we prevent errors in the filesystem from compromising the machine
  4158    // +optional

  5635    // ---
  5636:   // TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
  5637    // mount host directories as read/write.

staging\src\k8s.io\api\core\v1\toleration.go:
  20  // if the two tolerations have same <key,effect,operator,value> combination, regard as they match.
  21: // TODO: uniqueness check for tolerations in api validations.
  22  func (t *Toleration) MatchToleration(tolerationToMatch *Toleration) bool {

  48  
  49: 	// TODO: Use proper defaulting when Toleration becomes a field of PodSpec
  50  	switch t.Operator {

staging\src\k8s.io\api\core\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\core\v1\types.go:
    55  	// ---
    56: 	// TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
    57  	// mount host directories as read/write.

   772  	// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
   773: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
   774  	// +optional

   816  	// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
   817: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
   818  	// +optional

  1015  	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  1016: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
  1017  	// +optional

  1130  	// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  1131: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
  1132  	// +optional

  1262  	// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
  1263: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
  1264  	// +optional

  1308  	// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
  1309: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
  1310  	// +optional

  1348  	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  1349: 	// TODO: how do we prevent errors in the filesystem from compromising the machine
  1350  	// +optional

  4820  	// kubernetes components, like kube-proxy, are not IPv6 ready.
  4821: 	// TODO: This should allow hostname or IP, See #4447.
  4822  	IP string `json:"ip" protobuf:"bytes,1,opt,name=ip"`

  5528  // ---
  5529: // TODO: merge w/ PodExecOptions below for stdin, stdout, etc
  5530  // and also when we cut V2, we should export a "StreamOptions" or somesuch that contains Stdin, Stdout, Stder and TTY

  5566  // ---
  5567: // TODO: This is largely identical to PodAttachOptions above, make sure they stay in sync and see about merging
  5568  // and also when we cut V2, we should export a "StreamOptions" or somesuch that contains Stdin, Stdout, Stder and TTY

  5706  	// referencing a part of an object.
  5707: 	// TODO: this design is not final and this field is subject to change in the future.
  5708  	// +optional

  5717  	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  5718: 	// TODO: Add other useful fields. apiVersion, kind, uid?
  5719  	// +optional

  5785  	// for the transition into the object's current status.
  5786: 	// TODO: provide exact specification for format.
  5787  	// +optional

  5790  	// A human-readable description of the status of this operation.
  5791: 	// TODO: decide on maximum length.
  5792  	// +optional

  6221  	//   Secret.Data["tls.crt"] - TLS certificate.
  6222: 	// TODO: Consider supporting different formats, specifying CA/destinationCA.
  6223  	SecretTypeTLS SecretType = "kubernetes.io/tls"

staging\src\k8s.io\api\discovery\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\discovery\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\events\v1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\events\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\events\v1beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\events\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\extensions\v1beta1\generated.proto:
  223    // ---
  224:   // TODO: Update this to follow our convention for oneOf, whatever we decide it
  225    // to be. Same as Deployment `strategy.rollingUpdate`.

  394    // ---
  395:   // TODO: Update this to follow our convention for oneOf, whatever we decide it
  396    // to be.

staging\src\k8s.io\api\extensions\v1beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\extensions\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\extensions\v1beta1\types.go:
  195  	//---
  196: 	// TODO: Update this to follow our convention for oneOf, whatever we decide it
  197  	// to be.

  342  	//---
  343: 	// TODO: Update this to follow our convention for oneOf, whatever we decide it
  344  	// to be. Same as Deployment `strategy.rollingUpdate`.

  497  
  498: // TODO: Add valid condition types of a DaemonSet.
  499  

  660  	Rules []IngressRule `json:"rules,omitempty" protobuf:"bytes,3,rep,name=rules"`
  661: 	// TODO: Add the ability to specify load-balancer IP through claims
  662  }

  678  	SecretName string `json:"secretName,omitempty" protobuf:"bytes,2,opt,name=secretName"`
  679: 	// TODO: Consider specifying different modes of termination, protocols etc.
  680  }

  753  	Paths []HTTPIngressPath `json:"paths" protobuf:"bytes,1,rep,name=paths"`
  754: 	// TODO: Consider adding fields for ingress-type specific global
  755  	// options usable by a loadbalancer, like http keep-alive.

staging\src\k8s.io\api\flowcontrol\v1alpha1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\flowcontrol\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\flowcontrol\v1beta2\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\flowcontrol\v1beta3\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\imagepolicy\v1alpha1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\imagepolicy\v1alpha1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\networking\v1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\networking\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\networking\v1alpha1\register.go:
  37  	// SchemeBuilder holds functions that add things to a scheme.
  38: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  39  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\networking\v1alpha1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\networking\v1beta1\register.go:
  37  	// SchemeBuilder holds functions that add things to a scheme
  38: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  39  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\networking\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\networking\v1beta1\types.go:
  103  	Rules []IngressRule `json:"rules,omitempty" protobuf:"bytes,3,rep,name=rules"`
  104: 	// TODO: Add the ability to specify load-balancer IP through claims
  105  }

  121  	SecretName string `json:"secretName,omitempty" protobuf:"bytes,2,opt,name=secretName"`
  122: 	// TODO: Consider specifying different modes of termination, protocols etc.
  123  }

  191  	Paths []HTTPIngressPath `json:"paths" protobuf:"bytes,1,rep,name=paths"`
  192: 	// TODO: Consider adding fields for ingress-type specific global
  193  	// options usable by a loadbalancer, like http keep-alive.

staging\src\k8s.io\api\node\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\node\v1alpha1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\node\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\policy\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\policy\v1beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\policy\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\rbac\v1\register.go:
  35  var (
  36: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  37  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\rbac\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\rbac\v1alpha1\register.go:
  35  var (
  36: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  37  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\rbac\v1alpha1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\rbac\v1beta1\register.go:
  35  var (
  36: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  37  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\rbac\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\scheduling\v1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\scheduling\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\scheduling\v1alpha1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\scheduling\v1alpha1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\scheduling\v1beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\scheduling\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\storage\v1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\storage\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\storage\v1alpha1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\api\storage\v1beta1\register.go:
  36  var (
  37: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  38  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\api\storage\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\apiextensions-apiserver\examples\client-go\pkg\client\informers\externalversions\generic.go:
  51  // ForResource gives generic access to a shared informer of the matching type
  52: // TODO extend this to unknown resources with a client pool
  53  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

staging\src\k8s.io\apiextensions-apiserver\pkg\apis\apiextensions\deepcopy.go:
  20  
  21: // TODO: Update this after a tag is created for interface fields in DeepCopy
  22  func (in *JSONSchemaProps) DeepCopy() *JSONSchemaProps {

staging\src\k8s.io\apiextensions-apiserver\pkg\apis\apiextensions\v1\deepcopy.go:
  18  
  19: // TODO: Update this after a tag is created for interface fields in DeepCopy
  20  func (in *JSONSchemaProps) DeepCopy() *JSONSchemaProps {

staging\src\k8s.io\apiextensions-apiserver\pkg\apis\apiextensions\v1\types_jsonschema.go:
  250  func (_ JSON) OpenAPISchemaType() []string {
  251: 	// TODO: return actual types when anyOf is supported
  252  	return nil

  273  func (_ JSONSchemaPropsOrArray) OpenAPISchemaType() []string {
  274: 	// TODO: return actual types when anyOf is supported
  275  	return nil

  293  func (_ JSONSchemaPropsOrBool) OpenAPISchemaType() []string {
  294: 	// TODO: return actual types when anyOf is supported
  295  	return nil

  315  func (_ JSONSchemaPropsOrStringArray) OpenAPISchemaType() []string {
  316: 	// TODO: return actual types when anyOf is supported
  317  	return nil

staging\src\k8s.io\apiextensions-apiserver\pkg\apis\apiextensions\v1beta1\deepcopy.go:
  18  
  19: // TODO: Update this after a tag is created for interface fields in DeepCopy
  20  func (in *JSONSchemaProps) DeepCopy() *JSONSchemaProps {

staging\src\k8s.io\apiextensions-apiserver\pkg\apis\apiextensions\v1beta1\types_jsonschema.go:
  250  func (_ JSON) OpenAPISchemaType() []string {
  251: 	// TODO: return actual types when anyOf is supported
  252  	return nil

  273  func (_ JSONSchemaPropsOrArray) OpenAPISchemaType() []string {
  274: 	// TODO: return actual types when anyOf is supported
  275  	return nil

  293  func (_ JSONSchemaPropsOrBool) OpenAPISchemaType() []string {
  294: 	// TODO: return actual types when anyOf is supported
  295  	return nil

  315  func (_ JSONSchemaPropsOrStringArray) OpenAPISchemaType() []string {
  316: 	// TODO: return actual types when anyOf is supported
  317  	return nil

staging\src\k8s.io\apiextensions-apiserver\pkg\apis\apiextensions\validation\validation_test.go:
  2166  		{
  2167: 			// TODO: remove in a follow-up. This blocks is here for easy review.
  2168  			name: "v1.15 era tests for metadata defaults",

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\customresource_discovery.go:
  28  type versionDiscoveryHandler struct {
  29: 	// TODO, writing is infrequent, optimize this
  30  	discoveryLock sync.RWMutex

  74  type groupDiscoveryHandler struct {
  75: 	// TODO, writing is infrequent, optimize this
  76  	discoveryLock sync.RWMutex

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\customresource_handler.go:
   482  	// so we want to be sure that CRD is Installing at least for 5 seconds before Establishing it.
   483: 	// TODO: find a real HA safe checkpointing mechanism instead of an arbitrary wait.
   484  	if !apiextensionshelpers.IsCRDConditionTrue(newCRD, apiextensionsv1.Established) &&

  1344  		if !v.preserveUnknownFields {
  1345: 			// TODO: switch over pruning and coercing at the root to schemaobjectmeta.Coerce too
  1346  			pruneOpts := structuralschema.UnknownFieldPathOptions{}

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\conversion\converter.go:
  164  	if !ok {
  165: 		// TODO: should this be a typed error?
  166  		return nil, fmt.Errorf("%v is unstructured and is not suitable for converting to %q", fromGVK.String(), target)

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\conversion\webhook_converter.go:
  196  		if response.Response.Result.Status != metav1.StatusSuccess {
  197: 			// TODO: Return a webhook specific error to be able to convert it to meta.Status
  198  			if len(response.Response.Result.Message) > 0 {

  213  		if response.Response.Result.Status != metav1.StatusSuccess {
  214: 			// TODO: Return a webhook specific error to be able to convert it to meta.Status
  215  			if len(response.Response.Result.Message) > 0 {

  270  
  271: 	// TODO: Figure out if adding one second timeout make sense here.
  272  	ctx := context.TODO()

  274  	if err := r.Into(response); err != nil {
  275: 		// TODO: Return a webhook specific error to be able to convert it to meta.Status
  276  		return nil, fmt.Errorf("conversion webhook for %v failed: %v", in.GetObjectKind().GroupVersionKind(), err)

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\schema\validation.go:
  181  		if !reflect.DeepEqual(*s, Structural{ValueValidation: &ValueValidation{}}) {
  182: 			// TODO: this is actually a field.Invalid error, but we cannot do JSON serialization of metadata here to get a proper message
  183  			allErrs = append(allErrs, field.Forbidden(fldPath, "must not specify anything other than name and generateName, but metadata is implicitly specified"))

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\schema\cel\compilation.go:
  181  
  182: 	// TODO: Ideally we could configure the per expression limit at validation time and set it to the remaining overall budget, but we would either need a way to pass in a limit at evaluation time or move program creation to validation time
  183  	prog, err := env.Program(ast,

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\schema\cel\validation_test.go:
  1134  			errors: map[string]string{
  1135: 				// TODO(jpbetz): Type checker does not support unions of (<type>, Null).
  1136  				// This will be available when "heterogeneous type" supported is added to cel-go.

  1460  				"self.nullable[0] == 'x'": "invalid data, got null for schema with nullable=false",
  1461: 				// TODO: also find a way to test the errors returned for: array with no items, object with no properties or additionalProperties, invalid listType and invalid type.
  1462  			},

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\schema\cel\library\cost.go:
  244  func traversalCost(v ref.Val) uint64 {
  245: 	// TODO: This could potentially be optimized by sampling maps and lists instead of traversing.
  246  	switch vt := v.(type) {

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\schema\cel\metrics\metrics.go:
  25  
  26: // TODO(jiahuif) CEL is to be used in multiple components, revise naming when that happens.
  27  const (

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\schema\cel\model\schemas.go:
  29  	// the largest request that will be accepted is 3MB
  30: 	// TODO(DangerOnTheRanger): wire in MaxRequestBodyBytes from apiserver/pkg/server/options/server_run_options.go to make this configurable
  31  	maxRequestSizeBytes = int64(3 * 1024 * 1024)

staging\src\k8s.io\apiextensions-apiserver\pkg\apiserver\validation\validation.go:
  36  	if customResourceValidation != nil {
  37: 		// TODO: replace with NewStructural(...).ToGoOpenAPI
  38  		if err := ConvertJSONSchemaPropsWithPostProcess(customResourceValidation.OpenAPIV3Schema, openapiSchema, StripUnsupportedFormatsPostProcess); err != nil {

staging\src\k8s.io\apiextensions-apiserver\pkg\client\informers\externalversions\generic.go:
  52  // ForResource gives generic access to a shared informer of the matching type
  53: // TODO extend this to unknown resources with a client pool
  54  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

staging\src\k8s.io\apiextensions-apiserver\pkg\cmd\server\options\options.go:
  93  func (o CustomResourceDefinitionsServerOptions) Config() (*apiserver.Config, error) {
  94: 	// TODO have a "real" external address
  95  	if err := o.RecommendedOptions.SecureServing.MaybeDefaultWithSelfSignedCerts("localhost", nil, []net.IP{netutils.ParseIPSloppy("127.0.0.1")}); err != nil {

staging\src\k8s.io\apiextensions-apiserver\pkg\controller\finalizer\crd_finalizer.go:
  232  	// now we need to wait until all the resources are deleted.  Start with a simple poll before we do anything fancy.
  233: 	// TODO not all servers are synchronized on caches.  It is possible for a stale one to still be creating things.
  234  	// Once we have a mechanism for servers to indicate their states, we should check that for concurrence.

staging\src\k8s.io\apiextensions-apiserver\pkg\controller\openapi\builder\builder_test.go:
  647  
  648: 			// TODO: mostly copied from the test above. reuse code to cleanup
  649  			got, err := BuildOpenAPIV2(&apiextensionsv1.CustomResourceDefinition{

staging\src\k8s.io\apiextensions-apiserver\pkg\controller\openapi\builder\builder.go:
  139  
  140: 	// TODO(roycaihw): remove the WebService templating below. The following logic
  141  	// comes from function registerResourceHandlers() in k8s.io/apiserver.

  356  	case "get":
  357: 		// TODO: CRD support for export is still under consideration
  358  		endpoints.AddObjectParams(b.ws, route, &metav1.GetOptions{})

  361  	case "put", "patch":
  362: 		// TODO: PatchOption added in feature branch but not in master yet
  363  		endpoints.AddObjectParams(b.ws, route, &metav1.UpdateOptions{}, disabledParams...)

  390  	// adding additionalProperties=true support to explicitly allow additional fields.
  391: 	// TODO: fix kubectl to understand additionalProperties=true
  392  	if schema == nil || ((opts.V2 && !opts.SkipFilterSchemaForKubectlOpenAPIV2Validation) && (schema.XPreserveUnknownFields || crdPreserveUnknownFields)) {

staging\src\k8s.io\apiextensions-apiserver\pkg\controller\status\naming_controller.go:
  54  	// write/lookup cycles.  It's got 100 slots by default, so it unlikely to overrun
  55: 	// TODO to revisit this if naming conflicts are found to occur in the wild
  56  	crdMutationCache cache.MutationCache

staging\src\k8s.io\apiextensions-apiserver\pkg\crdserverscheme\unstructured.go:
  34  // check, only ObjectKinds.
  35: // TODO this only works for the apiextensions server and doesn't recognize any types.  Move to point of use.
  36  func NewUnstructuredObjectTyper() *UnstructuredObjectTyper {

staging\src\k8s.io\apiextensions-apiserver\pkg\registry\customresource\etcd.go:
  70  	if err := store.CompleteWithOptions(options); err != nil {
  71: 		panic(err) // TODO: Propagate error up
  72  	}

staging\src\k8s.io\apiextensions-apiserver\pkg\registry\customresource\tableconvertor\tableconvertor_test.go:
  254  							`["bar","baz"]`,
  255: 							`["foo"]`, // TODO: TableConverter should be changed so that the response is this: `["foo"] ["bar","baz"]`,
  256  						},

  327  							"[2,3]",
  328: 							"[1]", // TODO: TableConverter should be changed so that the response is this: `[1] [2,3]`,
  329  						},

  398  							int64(1),
  399: 							nil, // TODO: Seems like this should either return some data or return an error, not just be nil
  400: 							nil, // TODO: Seems like this should either return some data or return an error, not just be nil
  401: 							nil, // TODO: Seems like this should either return some data or return an error, not just be nil
  402  						},

staging\src\k8s.io\apiextensions-apiserver\pkg\registry\customresourcedefinition\etcd.go:
  55  
  56: 		// TODO: define table converter that exposes more than name/creation timestamp
  57  		TableConvertor: rest.NewDefaultTableConvertor(apiextensions.Resource("customresourcedefinitions")),

staging\src\k8s.io\apiextensions-apiserver\test\integration\registration_test.go:
  426  func getFromEtcd(keys clientv3.KV, prefix, localPath string) (*metaObject, error) {
  427: 	internalPath := path.Join("/", prefix, localPath) // TODO: Double check, should we concatenate two prefixes?
  428  	response, err := keys.Get(context.Background(), internalPath)

staging\src\k8s.io\apiextensions-apiserver\test\integration\versioning_test.go:
   97  				// work around "grpc: the client connection is closing" error
   98: 				// TODO: fix the grpc error
   99  				if err, ok := err.(*errors.StatusError); ok && err.Status().Code == http.StatusInternalServerError {

  121  			// work around "grpc: the client connection is closing" error
  122: 			// TODO: fix the grpc error
  123  			if err, ok := err.(*errors.StatusError); ok && err.Status().Code == http.StatusInternalServerError {

staging\src\k8s.io\apiextensions-apiserver\test\integration\conversion\conversion_test.go:
  158  
  159: 	// TODO: Added for integration testing of conversion webhooks, where decode errors due to conversion webhook failures need to be tested.
  160  	// Maybe we should identify conversion webhook related errors in decoding to avoid triggering this? Or maybe having this special casing

staging\src\k8s.io\apimachinery\pkg\api\apitesting\codec.go:
  57  		// etcd2 only supports string data - we must wrap any result before returning
  58: 		// TODO: remove for etcd3 / make parameterizable
  59  		serializer := serializerInfo.Serializer

staging\src\k8s.io\apimachinery\pkg\api\apitesting\fuzzer\valuefuzz.go:
  36  		if obj.IsNil() {
  37: 			// TODO: set non-nil value
  38  		} else {

  44  		if obj.IsNil() {
  45: 			// TODO: set non-nil value
  46  		} else {

  54  		if obj.IsNil() {
  55: 			// TODO: set non-nil value
  56  		} else {

  64  			}
  65: 			// TODO: set some new value
  66  		}

staging\src\k8s.io\apimachinery\pkg\api\apitesting\roundtrip\construct.go:
  36  		// generate a raw object in normalized form
  37: 		// TODO: test non-normalized round-tripping... YAMLToJSON normalizes and makes exact comparisons fail
  38  		obj.(*runtime.RawExtension).Raw = []byte(`{"apiVersion":"example.com/v1","kind":"CustomType","spec":{"replicas":1},"status":{"available":1}}`)

staging\src\k8s.io\apimachinery\pkg\api\apitesting\roundtrip\roundtrip.go:
  241  	// find all potential serializations in the scheme.
  242: 	// TODO fix this up to handle kinds that cross registered with different names.
  243  	for externalGVK, externalGoType := range scheme.AllKnownTypes() {

  257  
  258: 		// TODO remove this hack after we're past the intermediate steps
  259  		if !skipProtobuf && externalGVK.Group != "kubeadm.k8s.io" {

  283  
  284: 	// TODO remove this hack after we're past the intermediate steps
  285  	if !skipProtobuf {

  327  	// copy or conversion should alter the object
  328: 	// TODO eliminate this global
  329  	if !apiequality.Semantic.DeepEqual(original, object) {

staging\src\k8s.io\apimachinery\pkg\api\equality\semantic.go:
  31  		// Ignore formatting, only care that numeric value stayed the same.
  32: 		// TODO: if we decide it's important, it should be safe to start comparing the format.
  33  		//

staging\src\k8s.io\apimachinery\pkg\api\errors\errors.go:
  251  		Details: &metav1.StatusDetails{
  252: 			// TODO: Get obj details here?
  253  			Causes: causes,

staging\src\k8s.io\apimachinery\pkg\api\meta\help.go:
   31  	// which is used by IsListType.
   32: 	// TODO: remove and replace with an interface check
   33  	isListCache = struct {

   41  // IsListType returns true if the provided Object has a slice called Items.
   42: // TODO: Replace the code in this check with an interface comparison by
   43  //

   79  // This function will either return a pointer to a slice, or an error, but not both.
   80: // TODO: this will be replaced with an interface in the future
   81  func GetItemsPtr(list runtime.Object) (interface{}, error) {

  119  	}
  120: 	// TODO: Change to an interface call?
  121  	itemsPtr, err := GetItemsPtr(obj)

  187  			case item.Raw != nil:
  188: 				// TODO: Set ContentEncoding and ContentType correctly.
  189  				list[i] = &runtime.Unknown{Raw: item.Raw}

staging\src\k8s.io\apimachinery\pkg\api\meta\interfaces.go:
  111  //
  112: // TODO: split into sub-interfaces
  113  type RESTMapper interface {

staging\src\k8s.io\apimachinery\pkg\api\meta\meta.go:
  110  // AsPartialObjectMetadata takes the metav1 interface and returns a partial object.
  111: // TODO: consider making this solely a conversion action.
  112  func AsPartialObjectMetadata(m metav1.Object) *metav1.PartialObjectMetadata {

  140  // and Kind of an in-memory internal object.
  141: // TODO: this interface is used to test code that does not have ObjectMeta or ListMeta
  142  // in round tripping (objects which can use apiVersion/kind, but do not fit the Kube

staging\src\k8s.io\apimachinery\pkg\api\meta\restmapper_test.go:
  479  		{Kind: "lowercase", Plural: "lowercases", Singular: "lowercase"},
  480: 		// TODO this test is broken.  This updates to reflect actual behavior.  Kinds are expected to be singular
  481  		// old (incorrect), comment: Don't add extra s if the original object is already plural

  526  
  527: 		// TODO: add test for a resource that exists in one version but not another
  528  	}

staging\src\k8s.io\apimachinery\pkg\api\meta\restmapper.go:
   16  
   17: // TODO: move everything in this file to pkg/api/rest
   18  package meta

   54  //
   55: // TODO: Only accept plural for some operations for increased control?
   56  // (`get pod bar` vs `get pods bar`)

   86  	pluralToSingular := make(map[schema.GroupVersionResource]schema.GroupVersionResource)
   87: 	// TODO: verify name mappings work correctly when versions differ
   88  

  116  // This is only is only necessary because some bits of code are lazy and don't actually use the RESTMapper like they should.
  117: // TODO eliminate this so that different callers can correctly map to resources.  This probably means updating all
  118  // callers to use the RESTMapper they mean.

staging\src\k8s.io\apimachinery\pkg\api\meta\testrestmapper\test_restmapper.go:
  30  //
  31: // TODO callers of this method should be updated to build their own specific restmapper based on their scheme for their tests
  32: // TODO the things being tested are related to whether various cases are handled, not tied to the particular types being checked.
  33  func TestOnlyStaticRESTMapper(scheme *runtime.Scheme, versionPatterns ...schema.GroupVersion) meta.RESTMapper {

staging\src\k8s.io\apimachinery\pkg\api\resource\amount.go:
  82  	if a.scale < 0 {
  83: 		// TODO: attempt to reduce factors, although it is assumed that factors are reduced prior
  84  		// to the int64Amount being created.

staging\src\k8s.io\apimachinery\pkg\api\resource\quantity.go:
  229  		}
  230: 		// TODO: we currently allow 1.G, but we may not want to in the future.
  231  		// if len(denom) == 0 {

  374  	// The max is just a simple cap.
  375: 	// TODO: this prevents accumulating quantities greater than int64, for instance quota across a cluster
  376  	if format == BinarySI && amount.Cmp(maxAllowed.Dec) > 0 {

  445  
  446: 	// TODO: If BinarySI formatting is requested but would cause rounding, upgrade to
  447  	// one of the other formats.

  681  // UnmarshalJSON implements the json.Unmarshaller interface.
  682: // TODO: Remove support for leading/trailing whitespace
  683  func (q *Quantity) UnmarshalJSON(value []byte) error {

staging\src\k8s.io\apimachinery\pkg\api\resource\scale_int.go:
  81  	// divisor = 10^(dif)
  82: 	// TODO: create loop up table if exp costs too much.
  83  	divisor.Exp(bigTen, exp.SetInt64(int64(dif)), nil)

staging\src\k8s.io\apimachinery\pkg\apis\meta\fuzzer\fuzzer.go:
  60  		func(j *runtime.Object, c fuzz.Continue) {
  61: 			// TODO: uncomment when round trip starts from a versioned object
  62  			if true { //c.RandBool() {

staging\src\k8s.io\apimachinery\pkg\apis\meta\internalversion\register.go:
  29  var (
  30: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  31  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apimachinery\pkg\apis\meta\v1\meta.go:
  23  
  24: // TODO: move this, Object, List, and Type to a different package
  25  type ObjectMetaAccessor interface {

  73  // not support that field will be a no-op and return a default value.
  74: // TODO: move this, and TypeMeta and ListMeta, to a different package
  75  type Common interface {

  84  // not support that field will be a no-op and return a default value.
  85: // TODO: move this, and TypeMeta and ListMeta, to a different package
  86  type ListInterface interface {

  97  // Type exposes the type and APIVersion of versioned or internal API objects.
  98: // TODO: move this, and TypeMeta and ListMeta, to a different package
  99  type Type interface {

staging\src\k8s.io\apimachinery\pkg\apis\meta\v1\register.go:
  38  // Unversioned is group version for unversioned API objects
  39: // TODO: this should be v1 probably
  40  var Unversioned = schema.GroupVersion{Group: "", Version: "v1"}

staging\src\k8s.io\apimachinery\pkg\apis\meta\v1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\apimachinery\pkg\apis\meta\v1\types.go:
   786  // to the same HTTP status code.
   787: // TODO: move to apiserver
   788  type StatusReason string

  1145  
  1146: // TODO: remove me when watch is refactored
  1147  func LabelSelectorQueryParam(version string) string {

  1150  
  1151: // TODO: remove me when watch is refactored
  1152  func FieldSelectorQueryParam(version string) string {

  1286  
  1287: // TODO: Table does not generate to protobuf because of the interface{} - fix protobuf
  1288  //   generation to support a meta type that can accept any valid JSON. This can be introduced

staging\src\k8s.io\apimachinery\pkg\apis\meta\v1\watch.go:
  45  	case *runtime.Unknown:
  46: 		// TODO: handle other fields on Unknown and detect type
  47  		out.Object.Raw = t.Raw

  63  	} else if in.Object.Raw != nil {
  64: 		// TODO: handle other fields on Unknown and detect type
  65  		out.Object = &runtime.Unknown{

staging\src\k8s.io\apimachinery\pkg\apis\meta\v1\unstructured\helpers.go:
  319  // type, which can be used for generic access to objects without a predefined scheme.
  320: // TODO: move into serializer/json.
  321  var UnstructuredJSONScheme runtime.Codec = unstructuredJSONScheme{}

  342  	}
  343: 	// TODO(109023): require apiVersion here as well
  344  

  370  	case *runtime.Unknown:
  371: 		// TODO: Unstructured needs to deal with ContentType.
  372  		_, err := w.Write(t.Raw)

staging\src\k8s.io\apimachinery\pkg\apis\meta\v1\unstructured\unstructured.go:
  37  //
  38: // TODO: make the serialization part of this type distinct from the field accessors.
  39  // +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

staging\src\k8s.io\apimachinery\pkg\apis\meta\v1beta1\types_swagger_doc_generated.go:
  22  //
  23: // TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
  24  // they are on one line! For multiple line or blocks that you want to ignore use ---.

staging\src\k8s.io\apimachinery\pkg\apis\testapigroup\fuzzer\fuzzer.go:
  36  		func(j *runtime.Object, c fuzz.Continue) {
  37: 			// TODO: uncomment when round trip starts from a versioned object
  38  			if true { //c.RandBool() {

staging\src\k8s.io\apimachinery\pkg\apis\testapigroup\v1\register.go:
  41  var (
  42: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  43  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apimachinery\pkg\labels\labels_test.go:
  33  
  34: 	// TODO: Make our label representation robust enough to handle labels
  35  	// with ",=!" characters in their names.

staging\src\k8s.io\apimachinery\pkg\labels\selector.go:
  961  // See the documentation for Parse() function for more details.
  962: // TODO: Consider exporting the internalSelector type instead.
  963  func ParseToRequirements(selector string, opts ...field.PathOption) ([]Requirement, error) {

staging\src\k8s.io\apimachinery\pkg\runtime\codec_check.go:
  29  // object. (Will modify internalObject.) (Assumes JSON serialization.)
  30: // TODO: verify that the correct external version is chosen on encode...
  31  func CheckCodec(c Codec, internalType Object, externalTypes ...schema.GroupVersionKind) error {

staging\src\k8s.io\apimachinery\pkg\runtime\codec.go:
  47  func Encode(e Encoder, obj Object) ([]byte, error) {
  48: 	// TODO: reuse buffer
  49  	buf := &bytes.Buffer{}

staging\src\k8s.io\apimachinery\pkg\runtime\converter_test.go:
  200  
  201: 	// TODO: should be using mismatch detection but fails due to another error
  202  	newUnstr, err := runtime.DefaultUnstructuredConverter.ToUnstructured(item)

staging\src\k8s.io\apimachinery\pkg\runtime\converter.go:
  459  			}
  460: 			// TODO: Is this Unmarshal needed?
  461  			var data []byte

  566  func interfaceFromUnstructured(sv, dv reflect.Value) error {
  567: 	// TODO: Is this conversion safe?
  568  	dv.Set(sv)

  790  	case reflect.Map, reflect.Slice:
  791: 		// TODO: It seems that 0-len maps are ignored in it.
  792  		return v.IsNil() || v.Len() == 0

staging\src\k8s.io\apimachinery\pkg\runtime\embedded_test.go:
  88  		&runtimetesting.EmbeddedTest{ID: "bar"},
  89: 		// TODO: until YAML is removed, this JSON must be in ascending key order to ensure consistent roundtrip serialization
  90  		&runtime.Unknown{

staging\src\k8s.io\apimachinery\pkg\runtime\embedded.go:
  129  		Raw: data,
  130: 		// TODO: Set ContentEncoding and ContentType appropriately.
  131  		// Currently we set ContentTypeJSON to make tests passing.

staging\src\k8s.io\apimachinery\pkg\runtime\extension.go:
  38  	if re.Raw == nil {
  39: 		// TODO: this is to support legacy behavior of JSONPrinter and YAMLPrinter, which
  40  		// expect to call json.Marshal on arbitrary versioned objects (even those not in

  48  	}
  49: 	// TODO: Check whether ContentType is actually JSON before returning it.
  50  	return re.Raw, nil

staging\src\k8s.io\apimachinery\pkg\runtime\generated.proto:
   79    //
   80:   // TODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.
   81    optional bytes raw = 1;

  110  // TypeMeta features-- kind, version, etc.
  111: // TODO: Make this object have easy access to field based accessors and settors for
  112  // metadata and field mutatation.

staging\src\k8s.io\apimachinery\pkg\runtime\helper.go:
  114  // EncodeList ensures that each object in an array is converted to a Unknown{} in serialized form.
  115: // TODO: accept a content type.
  116  func EncodeList(e Encoder, objects []Object) error {

  123  		}
  124: 		// TODO: Set ContentEncoding and ContentType.
  125  		objects[i] = &Unknown{Raw: data}

  131  	for _, decoder := range decoders {
  132: 		// TODO: Decode based on ContentType.
  133  		obj, err := Decode(decoder, obj.Raw)

staging\src\k8s.io\apimachinery\pkg\runtime\negotiate.go:
  44  func (n *clientNegotiator) Encoder(contentType string, params map[string]string) (Encoder, error) {
  45: 	// TODO: `pretty=1` is handled in NegotiateOutputMediaType, consider moving it to this method
  46  	// if client negotiators truly need to use it

staging\src\k8s.io\apimachinery\pkg\runtime\scheme.go:
   59  	// or version
   60: 	// TODO: resolve the status of unversioned types.
   61  	unversionedKinds map[string]reflect.Type

  119  //
  120: // TODO: there is discussion about removing unversioned and replacing it with objects that are manifest into
  121  //

  482  		// try to see if this type is listed as unversioned (for legacy support)
  483: 		// TODO: when we move to server API versions, we should completely remove the unversioned concept
  484  		if unversionedKind, ok := s.unversionedTypes[t]; ok {

  563  		// internal is a special case
  564: 		// TODO: look at removing the need to special case this
  565  		obj.GetObjectKind().SetGroupVersionKind(schema.GroupVersionKind{})

staging\src\k8s.io\apimachinery\pkg\runtime\types.go:
  103  	//
  104: 	// TODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data.
  105  	Raw []byte `json:"-" protobuf:"bytes,1,opt,name=raw"`

  113  // TypeMeta features-- kind, version, etc.
  114: // TODO: Make this object have easy access to field based accessors and settors for
  115  // metadata and field mutatation.

staging\src\k8s.io\apimachinery\pkg\runtime\schema\group_version.go:
  191  // if none of the options match the group. It prefers a match to group and version over just group.
  192: // TODO: Move GroupVersion to a package under pkg/runtime, since it's used by scheme.
  193: // TODO: Introduce an adapter type between GroupVersion and runtime.GroupVersioner, and use LegacyCodec(GroupVersion)
  194  //

  213  	// this can be the internal version for the legacy kube types
  214: 	// TODO once we've cleared the last uses as strings, this special case should be removed.
  215  	if (len(gv) == 0) || (gv == "/") {

  240  // GroupVersions can be used to represent a set of desired group versions.
  241: // TODO: Move GroupVersions to a package under pkg/runtime, since it's used by scheme.
  242: // TODO: Introduce an adapter type between GroupVersions and runtime.GroupVersioner, and use LegacyCodec(GroupVersion)
  243  //

  300  // that have a distinct group and kind.
  301: // TODO: further reduce usage of this method.
  302  func FromAPIVersionAndKind(apiVersion, kind string) GroupVersionKind {

staging\src\k8s.io\apimachinery\pkg\runtime\serializer\codec_factory.go:
  173  //
  174: // TODO: allow other codecs to be compiled in?
  175: // TODO: accept a scheme interface
  176  func NewCodecFactory(scheme *runtime.Scheme, mutators ...CodecFactoryOptionsMutator) CodecFactory {

  260  //
  261: // TODO: make this call exist only in pkg/api, and initialize it with the set of default versions.
  262  //

  280  //
  281: // TODO: the decoder will eventually be removed in favor of dealing with objects in their versioned form
  282: // TODO: only accept a group versioner
  283  func (f CodecFactory) UniversalDecoder(versions ...schema.GroupVersion) runtime.Decoder {

  296  func (f CodecFactory) CodecForVersions(encoder runtime.Encoder, decoder runtime.Decoder, encode runtime.GroupVersioner, decode runtime.GroupVersioner) runtime.Codec {
  297: 	// TODO: these are for backcompat, remove them in the future
  298  	if encode == nil {

staging\src\k8s.io\apimachinery\pkg\runtime\serializer\negotiated_codec.go:
  22  
  23: // TODO: We should split negotiated serializers that we can change versions on from those we can change
  24  // serialization formats on

staging\src\k8s.io\apimachinery\pkg\runtime\serializer\json\json_test.go:
  216  			expectedObject: &unstructured.Unstructured{Object: map[string]interface{}{"kind": "Foo"}},
  217: 			// TODO(109023): expect this to error; unstructured decoding currently only requires kind to be set, not apiVersion
  218  		},

  226  			strict:         true,
  227: 			// TODO(109023): expect this to error; unstructured decoding currently only requires kind to be set, not apiVersion
  228  		},

  291  			expectedObject: &unstructured.Unstructured{Object: map[string]interface{}{"kind": "Foo"}},
  292: 			// TODO(109023): expect this to error; unstructured decoding currently only requires kind to be set, not apiVersion
  293  		},

  301  			strict:         true,
  302: 			// TODO(109023): expect this to error; unstructured decoding currently only requires kind to be set, not apiVersion
  303  		},

staging\src\k8s.io\apimachinery\pkg\runtime\serializer\json\json.go:
  178  				}
  179: 				// TODO(109023): require apiVersion here as well once unstructuredJSONScheme#Decode does
  180  			}

  266  		// This is done to catch duplicate fields in YAML that would have been dropped in the original YAMLToJSON conversion.
  267: 		// TODO: rework YAMLToJSONStrict to return warnings about duplicate fields without terminating so we don't have to do this twice.
  268  		_, err := yaml.YAMLToJSONStrict(originalData)

staging\src\k8s.io\apimachinery\pkg\runtime\serializer\protobuf\protobuf.go:
  104  	case len(originalData) == 0:
  105: 		// TODO: treat like decoding {} from JSON with defaulting
  106  		return nil, nil, fmt.Errorf("empty data")

  109  	case len(originalData) == prefixLen:
  110: 		// TODO: treat like decoding {} from JSON with defaulting
  111  		return nil, nil, fmt.Errorf("empty body")

  252  	default:
  253: 		// TODO: marshal with a different content type and serializer (JSON for third party objects)
  254  		return errNotMarshalable{reflect.TypeOf(obj)}

  341  	if len(originalData) == 0 {
  342: 		// TODO: treat like decoding {} from JSON with defaulting
  343  		return nil, nil, fmt.Errorf("empty data")

staging\src\k8s.io\apimachinery\pkg\runtime\serializer\versioning\versioning.go:
  32  func NewDefaultingCodecForScheme(
  33: 	// TODO: I should be a scheme interface?
  34  	scheme *runtime.Scheme,

staging\src\k8s.io\apimachinery\pkg\test\apis_meta_v1_unstructed_unstructure_test.go:
  517  		{accessor: "SelfLink", val: "/foo"},
  518: 		// TODO: Handle timestamps, which are being marshalled as UTC and
  519  		// unmarshalled as Local.

staging\src\k8s.io\apimachinery\pkg\test\runtime_unversioned_test.go:
  23  
  24: 	// TODO: Ideally we should create the necessary package structure in e.g.,
  25  	// pkg/conversion/test/... instead of importing pkg/api here.

staging\src\k8s.io\apimachinery\pkg\util\httpstream\spdy\roundtripper.go:
  339  		} else {
  340: 			// TODO: I don't belong here, I should be abstracted from this class
  341  			if obj, _, err := statusCodecs.UniversalDecoder().Decode(responseErrorBytes, nil, &metav1.Status{}); err == nil {

staging\src\k8s.io\apimachinery\pkg\util\intstr\generated.proto:
  30  // accept a name or number.
  31: // TODO: Rename to Int32OrString
  32  //

staging\src\k8s.io\apimachinery\pkg\util\intstr\intstr.go:
  34  // accept a name or number.
  35: // TODO: Rename to Int32OrString
  36  //

  56  // than int32.
  57: // TODO: convert to (val int32)
  58  func FromInt(val int) IntOrString {

staging\src\k8s.io\apimachinery\pkg\util\naming\from_stack.go:
  80  // if the creator cannot be located.
  81: // TODO: Go does not expose this via runtime https://github.com/golang/go/issues/11440
  82  func extractStackCreator() (string, int, bool) {

staging\src\k8s.io\apimachinery\pkg\util\net\interface.go:
  347  				}
  348: 				// TODO: Decide if should open up to allow IPv6 LLAs in future.
  349  				if !ip.IsGlobalUnicast() {

staging\src\k8s.io\apimachinery\pkg\util\proxy\transport.go:
   70  
   71: 	// TODO: css URLs hidden in style elements.
   72  }

  267  	// Update header node with new content-length
  268: 	// TODO: Remove any hash/signature headers here?
  269  	resp.Header.Del("Content-Length")

staging\src\k8s.io\apimachinery\pkg\util\runtime\runtime.go:
   84  // error occurs.
   85: // TODO(lavalamp): for testability, this and the below HandleError function
   86  // should be packaged up into a testable and reusable object.

  119  	minPeriod time.Duration // immutable
  120: 	// TODO(lavalamp): use the clock for testability. Need to move that
  121  	// package for that to be accessible here.

staging\src\k8s.io\apimachinery\pkg\util\strategicpatch\patch.go:
  190  		// The patch may have a patch directive
  191: 		// TODO: figure out if we need this. This shouldn't be needed by apply. When would the original map have patch directives in it?
  192  		foundDirectiveMarker, err := handleDirectiveMarker(key, originalValue, modifiedValue, patch)

staging\src\k8s.io\apimachinery\pkg\util\validation\validation.go:
   76  // 2 and does not accept a trailing . as valid.
   77: // TODO: This function is deprecated and preserved until all callers migrate to
   78  // IsFullyQualifiedDomainName; please don't add new callers.

  293  // Now in libcontainer UID/GID limits is 0 ~ 1<<31 - 1
  294: // TODO: once we have a type for UID/GID we should make these that type.
  295  const (

staging\src\k8s.io\apimachinery\pkg\util\validation\field\errors.go:
   86  			// fallback to raw struct
   87: 			// TODO: internal types have panic guards against json.Marshalling to prevent
   88  			// accidental use of internal types in external serialized form.  For now, use

  103  
  104: // TODO: These values are duplicated in api/types.go, but there's a circular dep.  Fix it.
  105  const (

staging\src\k8s.io\apimachinery\pkg\util\yaml\decoder.go:
  164  // the next chunk.
  165: // TODO: switch to readline approach.
  166  func (d *YAMLDecoder) Read(data []byte) (n int, err error) {

staging\src\k8s.io\apimachinery\pkg\version\types.go:
  19  // Info contains versioning information.
  20: // TODO: Add []string of api versions supported? It's still unclear
  21  // how we'll want to distribute that information.

staging\src\k8s.io\apimachinery\third_party\forked\golang\json\fields.go:
  27  // It returns field type, a slice of patch strategies, merge key and error.
  28: // TODO: fix the returned errors to be introspectable.
  29  func LookupPatchMetadataForStruct(t reflect.Type, jsonField string) (

staging\src\k8s.io\apiserver\pkg\admission\plugin\resourcequota\controller.go:
  59  
  60: 	// TODO these are used together to bucket items by namespace and then batch them up for processing.
  61  	// The technique is valuable for rollup activities to avoid fanout and reduce resource contention.

staging\src\k8s.io\apiserver\pkg\admission\plugin\resourcequota\resource_access.go:
  116  		if !ok || lruItemObj.(liveLookupEntry).expiry.Before(time.Now()) {
  117: 			// TODO: If there are multiple operations at the same time and cache has just expired,
  118  			// this may cause multiple List operations being issued at the same time.

staging\src\k8s.io\apiserver\pkg\admission\plugin\resourcequota\apis\resourcequota\v1\register.go:
  30  var (
  31: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  32  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apiserver\pkg\admission\plugin\resourcequota\apis\resourcequota\v1alpha1\register.go:
  30  var (
  31: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  32  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apiserver\pkg\admission\plugin\resourcequota\apis\resourcequota\v1beta1\register.go:
  30  var (
  31: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  32  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apiserver\pkg\admission\plugin\webhook\config\apis\webhookadmission\v1\register.go:
  30  var (
  31: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  32  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apiserver\pkg\admission\plugin\webhook\config\apis\webhookadmission\v1alpha1\register.go:
  30  var (
  31: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  32  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apiserver\pkg\admission\plugin\webhook\generic\webhook.go:
   99  // AuthenticationInfoResolverWrapper.
  100: // TODO find a better way wire this, but keep this pull small for now.
  101  func (a *Webhook) SetAuthenticationInfoResolverWrapper(wrapper webhookutil.AuthenticationInfoResolverWrapper) {

staging\src\k8s.io\apiserver\pkg\admission\plugin\webhook\mutating\dispatcher.go:
  348  
  349: 	// TODO: if we have multiple mutating webhooks, we can remember the json
  350  	// instead of encoding and decoding for each one.

staging\src\k8s.io\apiserver\pkg\admission\plugin\webhook\namespace\matcher.go:
  94  		// namespace, it is never exempted.
  95: 		// TODO: figure out a way selective exempt cluster scoped resources.
  96  		// Also update the comment in types.go

staging\src\k8s.io\apiserver\pkg\admission\plugin\webhook\validating\dispatcher.go:
  208  		for i := 1; i < len(errs); i++ {
  209: 			// TODO: merge status errors; until then, just return the first one.
  210  			utilruntime.HandleError(errs[i])

staging\src\k8s.io\apiserver\pkg\apis\apiserver\v1\register.go:
  30  var (
  31: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  32  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apiserver\pkg\apis\apiserver\v1alpha1\register.go:
  34  var (
  35: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  36  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apiserver\pkg\apis\apiserver\v1beta1\register.go:
  30  var (
  31: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  32  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apiserver\pkg\apis\config\register.go:
  47  func addKnownTypes(scheme *runtime.Scheme) error {
  48: 	// TODO this will get cleaned up with the scheme types are fixed
  49  	scheme.AddKnownTypes(SchemeGroupVersion,

staging\src\k8s.io\apiserver\pkg\apis\example\fuzzer\fuzzer.go:
  36  		func(j *runtime.Object, c fuzz.Continue) {
  37: 			// TODO: uncomment when round trip starts from a versioned object
  38  			if true { //c.RandBool() {

staging\src\k8s.io\apiserver\pkg\apis\example\v1\register.go:
  41  var (
  42: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  43  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apiserver\pkg\apis\example2\v1\register.go:
  41  var (
  42: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  43  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\apiserver\pkg\apis\flowcontrol\bootstrap\default.go:
  304  	//
  305: 	// TODO(#80289): Get rid of this rule once we get rid of support for
  306  	//   using endpoints and configmaps objects for leader election.

  323  	)
  324: 	// TODO(#80289): Get rid of this rule once we get rid of support for
  325  	//   using endpoints and configmaps objects for leader election.

staging\src\k8s.io\apiserver\pkg\audit\context.go:
  32  	// auditAnnotationsKey is the context key for the audit annotations.
  33: 	// TODO: consolidate all audit info under the AuditContext, rather than storing 3 separate keys.
  34  	auditAnnotationsKey key = iota

staging\src\k8s.io\apiserver\pkg\audit\request.go:
  163  
  164: 	// TODO(audit): hook into the serializer to avoid double conversion
  165  	var err error

  167  	if err != nil {
  168: 		// TODO(audit): add error slice to audit event struct
  169  		klog.Warningf("Auditing failed of %v request: %v", reflect.TypeOf(obj).Name(), err)

  218  
  219: 	// TODO(audit): hook into the serializer to avoid double conversion
  220  	var err error

  273  
  274: 	// TODO a deep copy isn't really needed here, figure out how we can reliably
  275  	//  use shallow copy here to omit the manageFields.

staging\src\k8s.io\apiserver\pkg\audit\scheme.go:
  16  
  17: // TODO: Delete this file if we generate a clientset.
  18  package audit

staging\src\k8s.io\apiserver\pkg\endpoints\apiserver_test.go:
   757  		"GET root": {"GET", "/" + prefix + "/" + testGroupVersion.Group + "/" + testGroupVersion.Version + "/simpleroots", http.StatusOK},
   758: 		// TODO: JTL: "GET root item":       {"GET", "/" + prefix + "/" + testGroupVersion.Group + "/" + testGroupVersion.Version + "/simpleroots/bar", http.StatusOK},
   759  		"GET namespaced": {"GET", "/" + prefix + "/" + testGroupVersion.Group + "/" + testGroupVersion.Version + "/namespaces/ns/simples", http.StatusOK},
   760: 		// TODO: JTL: "GET namespaced item": {"GET", "/" + prefix + "/" + testGroupVersion.Group + "/" + testGroupVersion.Version + "/namespaces/ns/simples/bar", http.StatusOK},
   761  

   766  		"root GET with extra segment": {"GET", "/" + prefix + "/" + testGroupVersion.Group + "/" + testGroupVersion.Version + "/simpleroots/bar/baz", http.StatusNotFound},
   767: 		// TODO: JTL: "root POST with extra segment":      {"POST", "/" + prefix + "/" + testGroupVersion.Group + "/" + testGroupVersion.Version + "/simpleroots/bar", http.StatusMethodNotAllowed},
   768  		"root DELETE without extra segment": {"DELETE", "/" + prefix + "/" + testGroupVersion.Group + "/" + testGroupVersion.Version + "/simpleroots", http.StatusMethodNotAllowed},

   772  		"root watch missing storage":        {"GET", "/" + prefix + "/" + testGroupVersion.Group + "/" + testGroupVersion.Version + "/watch/", http.StatusInternalServerError},
   773: 		// TODO: JTL: "root watch with bad method":        {"POST", "/" + prefix + "/" + testGroupVersion.Group + "/" + testGroupVersion.Version + "/watch/simpleroot/bar", http.StatusMethodNotAllowed},
   774  

   828  // a verb.  Now we literally do not register a storage if it does not implement anything.
   829: // TODO: in future, we should update proxy/redirect
   830  func TestUnimplementedRESTStorage(t *testing.T) {

  2901  func TestDeleteInvokesAdmissionControl(t *testing.T) {
  2902: 	// TODO: remove mutating deny when we removed it from the endpoint implementation and ported all plugins
  2903  	for _, admit := range []admission.Interface{alwaysMutatingDeny{}, alwaysValidatingDeny{}} {

staging\src\k8s.io\apiserver\pkg\endpoints\installer.go:
   500  		// For ex: LIST all pods in all namespaces by sending a LIST request at /api/apiVersion/pods.
   501: 		// TODO: more strongly type whether a resource allows these actions on "all namespaces" (bulk delete)
   502  		if !isSubresource {

   544  	// Create Routes for the actions.
   545: 	// TODO: Add status documentation using Returns()
   546  	// Errors (see api/errors/errors.go as well as go-restful router):

   582  
   583: 		// TODO: Check for the interface on storage
   584  		TableConvertor: tableProvider,
   585  
   586: 		// TODO: This seems wrong for cross-group subresources. It makes an assumption that a subresource and its parent are in the same group version. Revisit this.
   587  		Resource:    a.group.GroupVersion.WithResource(resource),

   768  				Returns(http.StatusOK, "OK", producedObject).
   769: 				// TODO: in some cases, the API may return a v1.Status instead of the versioned object
   770  				// but currently go-restful can't handle multiple different objects being returned.

   827  				Returns(http.StatusOK, "OK", producedObject).
   828: 				// TODO: in some cases, the API may return a v1.Status instead of the versioned object
   829  				// but currently go-restful can't handle multiple different objects being returned.

  1051  			case reflect.Pointer:
  1052: 				// TODO: This is a hack to let metav1.Time through. This needs to be fixed in a more generic way eventually. bug #36191
  1053  				if (sf.Type.Elem().Kind() == reflect.Interface || sf.Type.Elem().Kind() == reflect.Struct) && strings.TrimPrefix(sf.Type.String(), "*") != "metav1.Time" {

  1079  
  1080: // TODO: this is incomplete, expand as needed.
  1081  // Convert the name of a golang type to the name of a JSON type

  1100  
  1101: 	// TODO: Fix these when go-restful supports a way to specify an array query param:
  1102  	// https://github.com/emicklei/go-restful/issues/225

  1136  	default:
  1137: 		// TODO: support deeper paths
  1138  		return "", "", fmt.Errorf("api_installer allows only one or two segment paths (resource or resource/subresource)")

staging\src\k8s.io\apiserver\pkg\endpoints\watch_test.go:
  319  		},
  320: 		// TODO: yaml stream serialization requires that RawExtension.MarshalJSON
  321  		// be able to understand nested encoding (since yaml calls json.Marshal

  434  
  435: 	// TODO: once this is fixed, this test will change
  436  	if response.StatusCode != http.StatusNotAcceptable {

staging\src\k8s.io\apiserver\pkg\endpoints\filters\authorization_test.go:
  176  		handler := WithAuthorization(&fakeHTTPHandler{}, tc.authorizer, negotiatedSerializer)
  177: 		// TODO: fake audit injector
  178  

staging\src\k8s.io\apiserver\pkg\endpoints\filters\impersonation.go:
  234  					// ObjectReference doesn't have a subresource field.  FieldPath is close and available, so we'll use that
  235: 					// TODO fight the good fight for ObjectReference to refer to resources and subresources
  236  					FieldPath: extraKey,

staging\src\k8s.io\apiserver\pkg\endpoints\filters\storageversion.go:
  45  	if svm == nil {
  46: 		// TODO(roycaihw): switch to warning after the feature graduate to beta/GA
  47  		klog.V(2).Infof("Storage Version barrier is disabled")

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\delete.go:
   44  // DeleteResource returns a function that will handle a resource deletion
   45: // TODO admission here becomes solely validating admission
   46  func DeleteResource(r rest.GracefulDeleter, allowsOptions bool, scope *RequestScope, admit admission.Interface) http.HandlerFunc {

  201  		// transform fields
  202: 		// TODO: DecodeParametersInto should do this.
  203  		if listOptions.FieldSelector != nil {

  207  			if listOptions.FieldSelector, err = listOptions.FieldSelector.Transform(fn); err != nil {
  208: 				// TODO: allow bad request to set field causes based on query parameters
  209  				err = errors.NewBadRequest(err.Error())

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\get.go:
  210  		// transform fields
  211: 		// TODO: DecodeParametersInto should do this.
  212  		if opts.FieldSelector != nil {

  216  			if opts.FieldSelector, err = opts.FieldSelector.Transform(fn); err != nil {
  217: 				// TODO: allow bad request to set field causes based on query parameters
  218  				err = errors.NewBadRequest(err.Error())

  251  			}
  252: 			// TODO: Currently we explicitly ignore ?timeout= and use only ?timeoutSeconds=.
  253  			timeout := time.Duration(0)

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\patch.go:
   68  		// Do this first, otherwise name extraction can fail for unrecognized content types
   69: 		// TODO: handle this in negotiation
   70  		contentType := req.Header.Get("Content-Type")

  247  // pieces of functionality.
  248: // TODO: Use builder pattern to construct this object?
  249: // TODO: As part of that effort, some aspects of PatchResource above could be
  250  // moved into this type.

  482  
  483: 	// TODO: spawn something to track deciding whether a fieldValidation=Strict
  484  	// fatal error should return before an error from the apply operation

  543  // and is given the currently persisted object as input.
  544: // TODO: rename this function because the name implies it is related to applyPatcher
  545  func (p *patcher) applyPatch(ctx context.Context, _, currentObject runtime.Object) (objToUpdate runtime.Object, patchErr error) {

  593  // and is given the currently persisted object and the patched object as input.
  594: // TODO: rename this function because the name implies it is related to applyPatcher
  595  func (p *patcher) applyAdmission(ctx context.Context, patchedObject runtime.Object, currentObject runtime.Object) (runtime.Object, error) {

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\response.go:
   50  			//
   51: 			// TODO: Long-term, transformObject should be changed so that it
   52  			// implements runtime.Encoder interface.

  196  			}
  197: 		// TODO: rely on defaulting for the value here?
  198  		case metav1.IncludeMetadata, "":

  202  			}
  203: 			// TODO: turn this into an internal type and do conversion in order to get object kind automatically set?
  204  			partial := meta.AsPartialObjectMetadata(m)

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\rest_test.go:
  509  			if len(patch) == 0 {
  510: 				// TODO SUPPORT THIS!
  511  				continue

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\rest.go:
  143  
  144: 	// TODO: this is temporary, replace with an abstraction calculated at endpoint installation time
  145  	if gvk.GroupVersion() == metav1beta1.SchemeGroupVersion || gvk.GroupVersion() == metav1.SchemeGroupVersion {

  151  		case "PartialObjectMetadata", "PartialObjectMetadataList":
  152: 			// TODO: should delineate between lists and non-list endpoints
  153  			return true

  203  			userInfo, _ := request.UserFrom(ctx)
  204: 			// TODO: remove the mutating admission here as soon as we have ported all plugin that handle CONNECT
  205  			if mutatingAdmission, ok := admit.(admission.MutationInterface); ok {

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\watch.go:
  63  // serveWatch will serve a watch response.
  64: // TODO: the functionality in this method and in WatchServer.Serve is not cleanly decoupled.
  65  func serveWatch(watcher watch.Interface, scope *RequestScope, mediaTypeOptions negotiation.MediaTypeOptions, req *http.Request, w http.ResponseWriter, timeout time.Duration) {

  87  	}
  88: 	// TODO: next step, get back mediaTypeOptions from negotiate and return the exact value here
  89  	mediaType := serializer.MediaType

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\fieldmanager\fieldmanager.go:
  35  // if the number of update managers exceeds this, the oldest entries will be merged until the number is below the maximum.
  36: // TODO(jennybuckley): Determine if this is really the best value. Ideally we wouldn't unnecessarily merge too many entries.
  37  const DefaultMaxUpdateManagers int = 10

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\fieldmanager\lastappliedmanager.go:
  154  
  155: // TODO: replace with merge.Conflicts.ToSet()
  156  func conflictsToSet(conflicts merge.Conflicts) *fieldpath.Set {

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\fieldmanager\structuredmerge.go:
  105  
  106: 	// TODO(apelisse) use the first return value when unions are implemented
  107  	_, managedFields, err := f.updater.Update(liveObjTyped, newObjTyped, apiVersion, managed.Fields(), manager)

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\fieldmanager\typeconverter.go:
  45  // CRDs that have a schema defined (we don't support that schema yet).
  46: // TODO(jennybuckley): Use the schema provided by a CRD if it exists.
  47  type DeducedTypeConverter struct{}

staging\src\k8s.io\apiserver\pkg\endpoints\handlers\negotiation\negotiate.go:
  50  	}
  51: 	// TODO: move into resthandler
  52  	info := mediaType.Accepted

staging\src\k8s.io\apiserver\pkg\endpoints\metrics\metrics.go:
   72  
   73: 	// TODO(a-robinson): Add unit tests for the handling of these metrics once
   74  	// the upstream library supports it.

  655  	// we have to dedup and sort the elements before joining them together
  656: 	// TODO: this is a fairly large allocation for what it does, consider
  657  	//   a sort and dedup in a single pass

staging\src\k8s.io\apiserver\pkg\endpoints\request\doc.go:
  18  // a http request object.
  19: // TODO: this package is temporary. Handlers must move into pkg/apiserver/handlers to avoid dependency cycle
  20  package request // import "k8s.io/apiserver/pkg/endpoints/request"

staging\src\k8s.io\apiserver\pkg\endpoints\request\requestinfo.go:
  68  // CRUDdy GET/POST/PUT/DELETE actions on REST objects.
  69: // TODO: find a way to keep this up to date automatically.  Maybe dynamically populate list as handlers added to
  70  // master's Mux.

  87  
  88: // TODO write an integration test against the swagger doc to test the RequestInfo and match up behavior to responses
  89  // NewRequestInfo returns the information from the http request.  If error is not nil, RequestInfo holds the information as best it is known before the failure

staging\src\k8s.io\apiserver\pkg\quota\v1\generic\evaluator.go:
  238  	// A function that knows how to list resources by namespace.
  239: 	// TODO move to dynamic client in future
  240  	listFuncByNamespace ListFuncByNamespace

staging\src\k8s.io\apiserver\pkg\registry\generic\storage_decorator.go:
  54  // two layer of same storage interface.
  55: // TODO: Once cacher is enabled on all registries (event registry is special), we will remove this method.
  56  func NewRawStorage(config *storagebackend.ConfigForResource, newFunc func() runtime.Object) (storage.Interface, factory.DestroyFunc, error) {

staging\src\k8s.io\apiserver\pkg\registry\generic\registry\store.go:
    93  //
    94: // TODO: make the default exposed methods exactly match a generic RESTStorage
    95  type Store struct {

   629  			if newResourceVersion == 0 {
   630: 				// TODO: The Invalid error should have a field for Resource.
   631  				// After that field is added, we should fill the Resource and

  1065  	shouldUpdateFinalizers, _ := deletionFinalizersForGarbageCollection(ctx, e, accessor, options)
  1066: 	// TODO: remove the check, because we support no-op updates now.
  1067  	if graceful || pendingFinalizers || shouldUpdateFinalizers {

  1125  //
  1126: // TODO: Currently, there is no easy way to remove 'directory' entry from storage (if we
  1127  // are removing all objects of a given type) with the current API (it's technically

  1301  func (e *Store) calculateTTL(obj runtime.Object, defaultTTL int64, update bool) (ttl uint64, err error) {
  1302: 	// TODO: validate this is assertion is still valid.
  1303  

staging\src\k8s.io\apiserver\pkg\registry\generic\rest\streamer.go:
  86  	if err != nil {
  87: 		// TODO prefer segregate TLS errors more reliably, but we do want to increment a count
  88  		if strings.Contains(err.Error(), "x509:") && s.TLSVerificationErrorCounter != nil {

staging\src\k8s.io\apiserver\pkg\registry\generic\testing\tester.go:
  137  		fieldsFail,
  138: 		// TODO: This should be filtered, the registry should not be aware of this level of detail
  139  		[]string{"create", "delete"},

staging\src\k8s.io\apiserver\pkg\registry\rest\rest.go:
   94  // This trumps KindProvider since it is capable of providing the information required.
   95: // TODO KindProvider (only used by federation) should be removed and replaced with this, but that presents greater risk late in 1.8.
   96  type GroupVersionKindProvider interface {

  134  	// method.
  135: 	// TODO: Pass metav1.GetOptions.
  136  	Get(ctx context.Context, name string, options runtime.Object) (runtime.Object, error)

staging\src\k8s.io\apiserver\pkg\registry\rest\update.go:
  85  
  86: // TODO: add other common fields that require global validation.
  87  func validateCommonFields(obj, old runtime.Object, strategy RESTUpdateStrategy) (field.ErrorList, error) {

staging\src\k8s.io\apiserver\pkg\registry\rest\resttest\resttest.go:
  43  
  44: // TODO(apelisse): Tests in this file should be more hermertic by always
  45  // removing objects that they create. That would avoid name-collisions.

staging\src\k8s.io\apiserver\pkg\server\config.go:
  104  	// This is required for proper functioning of the PostStartHooks on a GenericAPIServer
  105: 	// TODO: move into SecureServing(WithLoopback) as soon as insecure serving is gone
  106  	LoopbackClientConfig *restclient.Config

  718  		}
  719: 		// TODO: Once we get rid of /healthz consider changing this to post-start-hook.
  720  		err := s.AddReadyzChecks(healthz.NewInformerSyncHealthz(c.SharedInformerFactory))

  735  		}
  736: 		// TODO(yue9944882): plumb pre-shutdown-hook for request-management system?
  737  	} else {

staging\src\k8s.io\apiserver\pkg\server\deleted_kinds.go:
  57  	ret := &resourceExpirationEvaluator{
  58: 		// TODO https://github.com/kubernetes/kubernetes/issues/111972 set this back to false after beta is tagged.
  59  		strictRemovedHandlingInAlpha: true,

staging\src\k8s.io\apiserver\pkg\server\genericapiserver_graceful_termination_test.go:
  293  
  294: 	// TODO: our original intention was for any incoming request to receive a 503
  295  	// via the WithWaitGroup filter, but, at this point, any incoming requests

staging\src\k8s.io\apiserver\pkg\server\genericapiserver.go:
   70  	// If nil, defaults to groupMeta.GroupVersion.
   71: 	// TODO: Remove this when https://github.com/kubernetes/kubernetes/issues/19018 is fixed.
   72  	OptionsExternalVersion *schema.GroupVersion

   79  	// to convert objects from outside of this group that are accepted in this API).
   80: 	// TODO: replace with interfaces
   81  	Scheme *runtime.Scheme

  580  		// have been drained.
  581: 		// TODO: can we consolidate these two modes of graceful termination?
  582  		s.HandlerChainWaitGroup.Wait()

  827  		VersionedResourcesStorageMap: map[string]map[string]rest.Storage{},
  828: 		// TODO unhardcode this.  It was hardcoded before, but we need to re-evaluate
  829  		OptionsExternalVersion: &schema.GroupVersion{Version: "v1"},

staging\src\k8s.io\apiserver\pkg\server\handler.go:
  134  				// don't use servemux here because gorestful servemuxes get messed up when removing webservices
  135: 				// TODO fix gorestful, remove TPRs, or stop using gorestful
  136  				d.goRestfulContainer.Dispatch(w, req)

  144  				// don't use servemux here because gorestful servemuxes get messed up when removing webservices
  145: 				// TODO fix gorestful, remove TPRs, or stop using gorestful
  146  				d.goRestfulContainer.Dispatch(w, req)

  156  
  157: // TODO: Unify with RecoverPanics?
  158  func logStackOnRecover(s runtime.NegotiatedSerializer, panicReason interface{}, w http.ResponseWriter) {

staging\src\k8s.io\apiserver\pkg\server\secure_serving.go:
   86  			s.SNICerts,
   87: 			nil, // TODO see how to plumb an event recorder down in here. For now this results in simply klog messages.
   88  		)

   96  		// generate a context from stopCh. This is to avoid modifying files which are relying on apiserver
   97: 		// TODO: See if we can pass ctx to the current method
   98  		ctx, cancel := context.WithCancel(context.Background())

  218  // This function does not block
  219: // TODO: make private when insecure serving is gone from the kube-apiserver
  220  func RunServer(

staging\src\k8s.io\apiserver\pkg\server\dynamiccertificates\server_test.go:
  85  		sniCerts,
  86: 		nil, // TODO see how to plumb an event recorder down in here. For now this results in simply klog messages.
  87  	)

staging\src\k8s.io\apiserver\pkg\server\dynamiccertificates\union_content.go:
  65  
  66: 	// TODO make more efficient.  This isn't actually used in any of our mainline paths.  It's called to build the TLSConfig
  67: 	// TODO on file changes, but the actual authentication runs against the individual items, not the union.
  68  	ret, err := newCABundleAndVerifier(c.Name(), c.CurrentCABundleContent())

staging\src\k8s.io\apiserver\pkg\server\egressselector\egress_selector.go:
  201  // connect establishes a connection to a proxy over gRPC.
  202: // TODO At the moment, it does not use the provided context.
  203  func (u *udsGRPCConnector) connect(_ context.Context) (proxier, error) {

staging\src\k8s.io\apiserver\pkg\server\filters\cors.go:
  26  
  27: // TODO: use restful.CrossOriginResourceSharing
  28  // See github.com/emicklei/go-restful/blob/master/examples/cors/restful-CORS-filter.go, and

staging\src\k8s.io\apiserver\pkg\server\filters\maxinflight.go:
  36  	// Constant for the retry-after interval on rate limiting.
  37: 	// TODO: maybe make this dynamic? or user-adjustable?
  38  	retryAfter = "1"

staging\src\k8s.io\apiserver\pkg\server\filters\priority-and-fairness.go:
  275  				watchInitializationSignal.Signal()
  276: 				// TODO: Consider finishing the request as soon as Handle call panics.
  277  				if err := <-resultCh; err != nil {

staging\src\k8s.io\apiserver\pkg\server\filters\timeout.go:
  41  	timeoutFunc := func(req *http.Request) (*http.Request, bool, func(), *apierrors.StatusError) {
  42: 		// TODO unify this with apiserver.MaxInFlightLimit
  43  		ctx := req.Context()

staging\src\k8s.io\apiserver\pkg\server\filters\with_retry_after.go:
  63  //
  64: // TODO: is there a way to merge WithWaitGroup and this filter?
  65  func WithRetryAfter(handler http.Handler, shutdownDelayDurationElapsedCh <-chan struct{}) http.Handler {

staging\src\k8s.io\apiserver\pkg\server\httplog\httplog.go:
  53  //
  54: // TODO now that we're using go-restful, we shouldn't need to be wrapping
  55  // the http.ResponseWriter. We can recover panics from go-restful, and

staging\src\k8s.io\apiserver\pkg\server\options\encryptionconfig\config.go:
  490  		// v1.25: write using AES-GCM only but support reads via AES-GCM and fallback to AES-CBC for backwards compatibility
  491: 		// TODO(aramase): Post v1.25: We cannot drop CBC read support until we automate storage migration.
  492  		// We could have a release note that hard requires users to perform storage migration.

staging\src\k8s.io\apiserver\pkg\server\storage\resource_config.go:
  105  
  106: // TODO this must be removed and we enable/disable individual resources.
  107  func (o *ResourceConfig) versionEnabled(version schema.GroupVersion) bool {

staging\src\k8s.io\apiserver\pkg\server\storage\resource_encoding_config.go:
  27  	// StorageEncoding returns the serialization format for the resource.
  28: 	// TODO this should actually return a GroupVersionKind since you can logically have multiple "matching" Kinds
  29  	// For now, it returns just the GroupVersion for consistency with old behavior

staging\src\k8s.io\apiserver\pkg\server\storage\storage_codec.go:
  69  		// data written that way could exist in etcd2, or could have been migrated to etcd3.
  70: 		// TODO: flag this type of data if we encounter it, require migration (read to decode, write to persist using a supported encoder), and remove in 1.8
  71  		runtime.NewBase64Serializer(nil, opts.StorageSerializer.UniversalDeserializer()),

staging\src\k8s.io\apiserver\pkg\server\storage\storage_factory.go:
  242  	for _, potentialStorageResource := range s.Overrides[groupResource].cohabitatingResources {
  243: 		// TODO deads2k or liggitt determine if have ever stored any of our cohabitating resources in a different location on new clusters
  244  		if s.APIResourceConfigSource.AnyResourceForGroupEnabled(potentialStorageResource.Group) {

staging\src\k8s.io\apiserver\pkg\storage\continue.go:
  35  // continueToken is a simple structured object for encoding the state of a continue token.
  36: // TODO: if we change the version of the encoded from, we can't start encoding the new version
  37  // until all other servers are upgraded (i.e. we need to support rolling schema)

  45  // DecodeContinue transforms an encoded predicate from into a versioned struct.
  46: // TODO: return a typed error that instructs clients that they must relist
  47  func DecodeContinue(continueValue, keyPrefix string) (fromKey string, rv int64, err error) {

staging\src\k8s.io\apiserver\pkg\storage\selection_predicate.go:
  120  	}
  121: 	// TODO: should be namespace.name
  122  	if name, ok := s.Field.RequiresExactMatch("metadata.name"); ok {

staging\src\k8s.io\apiserver\pkg\storage\cacher\cacher.go:
   365  		},
   366: 		// TODO: Figure out the correct value for the buffer size.
   367  		incoming:              make(chan watchCacheEvent, 100),

   798  			//
   799: 			// TODO: If at some point we decide the performance and scalability
   800  			// footprint is acceptable, this is the place to hook them in.

  1438  	// block all watchers for some time.
  1439: 	// TODO: From the logs it seems that there happens processing
  1440  	// times even up to 1s which is very long. However, this doesn't

  1497  	// and sending to the client happens asynchrnously.
  1498: 	// TODO: As describe in the KEP, we would like to estimate that by delaying
  1499  	//   the initialization signal proportionally to the number of events to

staging\src\k8s.io\apiserver\pkg\storage\cacher\caching_object.go:
  139  		buffer := bytes.NewBuffer(nil)
  140: 		// TODO(wojtek-t): This is currently making a copy to avoid races
  141  		//   in cases where encoding is making subtle object modifications,

staging\src\k8s.io\apiserver\pkg\storage\cacher\ready.go:
  64  func (r *ready) check() bool {
  65: 	// TODO: Make check() function more sophisticated, in particular
  66  	// allow it to behave as "waitWithTimeout".

staging\src\k8s.io\apiserver\pkg\storage\cacher\watch_cache.go:
   57  	// defaultLowerBoundCapacity is a default value for event cache capacity's lower bound.
   58: 	// TODO: Figure out, to what value we can decreased it.
   59  	defaultLowerBoundCapacity = 100

  302  	if err := func() error {
  303: 		// TODO: We should consider moving this lock below after the watchCacheEvent
  304  		// is created. In such situation, the only problematic scenario is Replace(

  479  	// want - they will be filtered out later. The fact that we return less things is only further performance improvement.
  480: 	// TODO: if multiple indexes match, return the one with the fewest items, so as to do as much filtering as possible.
  481  	for _, matchValue := range matchValues {

  602  	// used by the watch not using the index.
  603: 	// TODO(wojtek-t): Figure out if the value shouldn't be higher.
  604  	maxWatchChanSizeWithoutIndex = 100

  668  		//
  669: 		// TODO: In v2 api, we should stop returning the current state - #13969.
  670  		ci, err := newCacheIntervalFromStore(w.resourceVersion, w.store, w.getAttrsFunc)

staging\src\k8s.io\apiserver\pkg\storage\errors\storage.go:
  31  	case storage.IsUnreachable(err):
  32: 		return errors.NewServerTimeout(qualifiedResource, "list", 2) // TODO: make configurable or handled at a higher level
  33  	case storage.IsInternalError(err):

  46  	case storage.IsUnreachable(err):
  47: 		return errors.NewServerTimeout(qualifiedResource, "get", 2) // TODO: make configurable or handled at a higher level
  48  	case storage.IsInternalError(err):

  61  	case storage.IsUnreachable(err):
  62: 		return errors.NewServerTimeout(qualifiedResource, "create", 2) // TODO: make configurable or handled at a higher level
  63  	case storage.IsInternalError(err):

  76  	case storage.IsUnreachable(err):
  77: 		return errors.NewServerTimeout(qualifiedResource, "update", 2) // TODO: make configurable or handled at a higher level
  78  	case storage.IsNotFound(err):

  93  	case storage.IsUnreachable(err):
  94: 		return errors.NewServerTimeout(qualifiedResource, "delete", 2) // TODO: make configurable or handled at a higher level
  95  	case storage.IsConflict(err), storage.IsExist(err), storage.IsInvalidObj(err):

staging\src\k8s.io\apiserver\pkg\storage\etcd3\compact.go:
  44  // It should be enough for slow watchers and to tolerate burst.
  45: // TODO: We might keep a longer history (12h) in the future once storage API can take advantage of past version of keys.
  46  func StartCompactor(ctx context.Context, client *clientv3.Client, compactInterval time.Duration) {

staging\src\k8s.io\apiserver\pkg\storage\names\generate.go:
  42  const (
  43: 	// TODO: make this flexible for non-core resources with alternate naming rules.
  44  	maxNameLength          = 63

staging\src\k8s.io\apiserver\pkg\storage\storagebackend\factory\etcd3.go:
   71  
   72: // TODO(negz): Stop using a package scoped logger. At the time of writing we're
   73  // creating an etcd client for each CRD. We need to pass each etcd client a

  388  		// Hence, we only destroy once.
  389: 		// TODO: fix duplicated storage destroy calls higher level
  390  		once.Do(func() {

staging\src\k8s.io\apiserver\pkg\storage\testing\store_tests.go:
  121  
  122: 	// TODO(jpbetz): Add exact test cases
  123  	tests := []struct {

staging\src\k8s.io\apiserver\pkg\storage\tests\cacher_test.go:
  83  // PodToSelectableFields returns a field set that represents the object
  84: // TODO: fields are not labels, and the validation rules for them do not apply.
  85  func PodToSelectableFields(pod *example.Pod) fields.Set {

staging\src\k8s.io\apiserver\pkg\storage\value\encrypt\envelope\kmsv2\envelope.go:
  102  	if cacheSize > 0 {
  103: 		// TODO(aramase): Switch to using expiring cache: kubernetes/kubernetes/staging/src/k8s.io/apimachinery/pkg/util/cache/expiring.go.
  104  		// It handles scans a lot better, doesn't have to be right sized, and don't have a global lock on reads.

staging\src\k8s.io\apiserver\pkg\util\flowcontrol\apf_controller_debug.go:
  37  func (cfgCtlr *configController) Install(c *mux.PathRecorderMux) {
  38: 	// TODO(yue9944882): handle "Accept" header properly
  39  	// debugging dumps a CSV content for three levels of granularity

staging\src\k8s.io\apiserver\pkg\util\flowcontrol\apf_controller.go:
  577  		//
  578: 		// TODO: consider not even trying if server is not handling
  579  		// requests yet.

staging\src\k8s.io\apiserver\pkg\util\flowcontrol\watch_tracker.go:
   40  //
   41: // TODO: For now we only track the number of watches registered
   42  // in our kube-apiserver. Eventually we should consider sharing

  168  		//
  169: 		// TODO(wojtek-t): For the sake of making progress and initially
  170  		// simplifying the implementation, we approximate (b) for all values

  196  //
  197: // TODO(wojtek-t): As of now, requestInfo for object creation (POST) doesn't
  198  //

  201  //
  202: // TODO(wojtek-t): Figure out how to approach DELETECOLLECTION calls.
  203  func (w *watchTracker) GetInterestedWatchCount(requestInfo *request.RequestInfo) int {

staging\src\k8s.io\apiserver\pkg\util\flowcontrol\fairqueuing\queueset\queueset.go:
  403  	}
  404: 	// TODO(aaron-prindle) add metrics for this case
  405  	klog.V(5).Infof("QS(%s): Ejecting request %#+v %#+v from its queue", qs.qCfg.Name, req.descr1, req.descr2)

  758  		// the number of seats this request asks for exceeds the concurrency limit.
  759: 		// TODO: this is a quick fix for now, once we have borrowing in place we will not need it
  760  		if qs.totRequestsExecuting == 0 {
  761: 			// TODO: apply additional lateny associated with this request, as described in the KEP
  762  			return true

  887  
  888: 	// TODO: for now we keep the logic localized so it is easier to see
  889  	//  how the counters are tracked for queueset and queue, in future we

staging\src\k8s.io\apiserver\pkg\util\flowcontrol\request\config.go:
  57  type MutatingWorkEstimatorConfig struct {
  58: 	// TODO(wojtekt): Remove it once we tune the algorithm to not fail
  59  	// scalability tests.

staging\src\k8s.io\apiserver\pkg\util\flowcontrol\request\list_work_estimator.go:
  111  	case isListFromCache:
  112: 		// TODO: For resources that implement indexes at the watchcache level,
  113  		//  we need to adjust the cost accordingly

staging\src\k8s.io\apiserver\pkg\util\flowcontrol\request\mutating_work_estimator.go:
   41  func (e *mutatingWorkEstimator) estimate(r *http.Request, flowSchemaName, priorityLevelName string) WorkEstimate {
   42: 	// TODO(wojtekt): Remove once we tune the algorithm to not fail
   43  	// scalability tests.

   79  
   80: 	// TODO: Make this unconditional after we tune the algorithm better.
   81  	//   Technically, there is an overhead connected to processing an event after

   85  	if watchCount >= int(e.config.WatchesPerSeat) {
   86: 		// TODO: As described in the KEP, we should take into account that not all
   87  		//   events are equal and try to estimate the cost of a single event based on

  117  		//
  118: 		// TODO: Confirm that the current cap of maximumSeats allow us to
  119  		//   achieve the above.

staging\src\k8s.io\apiserver\pkg\util\webhook\validation.go:
  72  
  73: 	// TODO: replace below with url.Parse + verifying that host is empty?
  74  

staging\src\k8s.io\apiserver\plugin\pkg\audit\buffered\buffered.go:
  226  
  227: 	// TODO(audit): Should control the number of active goroutines
  228  	// if one goroutine takes 5 seconds to finish, the number of goroutines can be 5 * defaultBatchThrottleQPS

staging\src\k8s.io\apiserver\plugin\pkg\authenticator\token\oidc\oidc.go:
  276  		if opts.CAContentProvider != nil {
  277: 			// TODO(enj): make this reload CA data dynamically
  278  			roots, err = certutil.NewPoolFromBytes(opts.CAContentProvider.CurrentCABundleContent())

  433  		// This lazy init should normally be very quick.
  434: 		// TODO: Make this context cancelable.
  435  		ctx := oidc.ClientContext(context.Background(), r.client)

  524  func (r *claimResolver) resolve(endpoint endpoint, allClaims claims) error {
  525: 	// TODO: cache resolved claims.
  526  	jwt, err := getClaimJWT(r.client, endpoint.URL, endpoint.AccessToken)

  646  // will not be set.
  647: // TODO: Allow passing in JSON hints to the IDP.
  648  func getClaimJWT(client *http.Client, url, accessToken string) (string, error) {

  651  
  652: 	// TODO: Allow passing request body with configurable information.
  653  	req, err := http.NewRequest("GET", url, nil)

staging\src\k8s.io\apiserver\plugin\pkg\authorizer\webhook\webhook.go:
  162  //
  163: // TODO(mikedanese): We should eventually support failing closed when we
  164  // encounter an error. We are failing open now to preserve backwards compatible

  248  
  249: // TODO: need to finish the method to get the rules when using webhook mode
  250  func (w *WebhookAuthorizer) RulesFor(user user.Info, namespace string) ([]authorizer.ResourceRuleInfo, []authorizer.NonResourceRuleInfo, bool, error) {

staging\src\k8s.io\cli-runtime\pkg\genericclioptions\builder_flags.go:
   26  // ResourceBuilderFlags are flags for finding resources
   27: // TODO(juanvallejo): wire --local flag from commands through
   28  type ResourceBuilderFlags struct {

  208  // ResourceFinder allows mocking the resource builder
  209: // TODO resource builders needs to become more interfacey
  210  type ResourceFinder interface {

staging\src\k8s.io\cli-runtime\pkg\genericclioptions\command_headers.go:
  57  // Each call overwrites the previously parsed command headers (not additive).
  58: // TODO(seans3): Parse/add flags removing PII from flag values.
  59  func (c *CommandHeaderRoundTripper) ParseCommandHeaders(cmd *cobra.Command, args []string) {

staging\src\k8s.io\cli-runtime\pkg\genericclioptions\record_flags.go:
  87  // AddFlags binds the requested flags to the provided flagset
  88: // TODO have this only take a flagset
  89  func (f *RecordFlags) AddFlags(cmd *cobra.Command) {

staging\src\k8s.io\cli-runtime\pkg\printers\jsonpath.go:
  32  //
  33: // TODO: how to document this for users?
  34  //

staging\src\k8s.io\cli-runtime\pkg\printers\name.go:
  60  		// callers and stop them from passing unflattened lists
  61: 		// TODO chase the caller that is setting this and remove it.
  62  		if _, ok := obj.(*unstructured.UnstructuredList); !ok {

staging\src\k8s.io\cli-runtime\pkg\printers\tableprinter.go:
   64  	withEventTypePrefixColumns = []string{"EVENT"}
   65: 	withNamespacePrefixColumns = []string{"NAMESPACE"} // TODO(erictune): print cluster name too.
   66  )

  474  			} else {
  475: 				// TODO: remove this once we drop the legacy printers
  476  				if options.WithKind && !options.Kind.Empty() {

staging\src\k8s.io\cli-runtime\pkg\resource\builder_test.go:
  51  
  52: 	// TODO we need to remove this linkage and create our own scheme
  53  	v1 "k8s.io/api/core/v1"

staging\src\k8s.io\cli-runtime\pkg\resource\builder.go:
  129  
  130: // TODO: expand this to include other errors.
  131  func IsUsageError(err error) bool {

  176  // internal or unstructured must be specified.
  177: // TODO: Add versioned client (although versioned is still lossy)
  178: // TODO remove internal and unstructured mapper and instead have them set the negotiated serializer for use in the client
  179  func newBuilder(clientConfigFn ClientConfigFunc, restMapper RESTMapperFunc, categoryExpander CategoryExpanderFunc) *Builder {

staging\src\k8s.io\cli-runtime\pkg\resource\client.go:
  24  
  25: // TODO require negotiatedSerializer.  leaving it optional lets us plumb current behavior and deal with the difference after major plumbing is complete
  26  func (clientConfigFn ClientConfigFunc) clientForGroupVersion(gv schema.GroupVersion, negotiatedSerializer runtime.NegotiatedSerializer) (RESTClient, error) {

staging\src\k8s.io\cli-runtime\pkg\resource\helper_test.go:
  35  
  36: 	// TODO we need to remove this linkage and create our own scheme
  37  	corev1 "k8s.io/api/core/v1"

staging\src\k8s.io\cli-runtime\pkg\resource\scheme.go:
  70  func UnstructuredPlusDefaultContentConfig() rest.ContentConfig {
  71: 	// TODO: scheme.Codecs here should become "pkg/apis/server/scheme" which is the minimal core you need
  72  	// to talk to a kubernetes server

staging\src\k8s.io\cli-runtime\pkg\resource\visitor.go:
  530  
  531: 	// TODO: Consider adding a flag to force to UTF16, apparently some
  532  	// Windows tools don't write the BOM

  540  // visited once.
  541: // TODO: depends on objects being in JSON format before being passed to decode - need to implement
  542  // a stream decoder method on runtime.Codec to properly handle this.

  571  		}
  572: 		// TODO: This needs to be able to handle object in other encodings and schemas.
  573  		ext.Raw = bytes.TrimSpace(ext.Raw)

staging\src\k8s.io\client-go\discovery\discovery_client.go:
   79  	//
   80: 	// TODO: this needs to be revisited, this interface can't be locked properly
   81  	// and doesn't make a lot of sense.

  358  				if err != nil {
  359: 					// TODO: maybe restrict this to NotFound errors
  360  					failedGroups[groupVersion] = err

  417  			// single endpoint not found/registered in old server, try to fetch old endpoint
  418: 			// TODO: remove this when kubectl/client-go don't work with 1.9 server
  419  			data, err = d.restClient.Get().AbsPath("/swagger-2.0.0.pb-v1").Do(context.TODO()).Raw()

staging\src\k8s.io\client-go\discovery\cached\memory\memcache.go:
   44  //
   45: // TODO: Switch to a watch interface. Right now it will poll after each
   46  // Invalidate() call.

  183  func (d *memCacheClient) refreshLocked() error {
  184: 	// TODO: Could this multiplicative set of calls be replaced by a single call
  185  	// to ServerResources? If it's possible for more than one resulting

staging\src\k8s.io\client-go\dynamic\interface.go:
  52  // APIPathResolverFunc knows how to convert a groupVersion to its API path. The Kind field is optional.
  53: // TODO find a better place to move this for existing callers
  54  type APIPathResolverFunc func(kind schema.GroupVersionKind) string

  56  // LegacyAPIPathResolverFunc can resolve paths properly with the legacy API.
  57: // TODO find a better place to move this for existing callers
  58  func LegacyAPIPathResolverFunc(kind schema.GroupVersionKind) string {

staging\src\k8s.io\client-go\dynamic\fake\simple_test.go:
  298  		},
  299: 		// TODO: Add tests for strategic merge using v1.Pod for example to ensure the test cases
  300  		// demonstrate expected use cases.

staging\src\k8s.io\client-go\dynamic\fake\simple.go:
  419  
  420: // TODO: opts are currently ignored.
  421  func (c *dynamicResourceClient) Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (*unstructured.Unstructured, error) {

  456  
  457: // TODO: opts are currently ignored.
  458  func (c *dynamicResourceClient) Apply(ctx context.Context, name string, obj *unstructured.Unstructured, options metav1.ApplyOptions, subresources ...string) (*unstructured.Unstructured, error) {

staging\src\k8s.io\client-go\informers\generic.go:
  93  // ForResource gives generic access to a shared informer of the matching type
  94: // TODO extend this to unknown resources with a client pool
  95  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

staging\src\k8s.io\client-go\kubernetes\typed\core\v1\event_expansion.go:
  153  
  154: // TODO: This is a temporary arrangement and will be removed once all clients are moved to use the clientset.
  155  type EventSinkImpl struct {

staging\src\k8s.io\client-go\kubernetes\typed\core\v1\fake\fake_event_expansion.go:
  59  // PatchWithEventNamespace patches an existing event. Returns the copy of the event the server returns, or an error.
  60: // TODO: Should take a PatchType as an argument probably.
  61  func (c *FakeEvents) PatchWithEventNamespace(event *v1.Event, data []byte) (*v1.Event, error) {
  62: 	// TODO: Should be configurable to support additional patch strategies.
  63  	pt := types.StrategicMergePatchType

staging\src\k8s.io\client-go\kubernetes\typed\core\v1\fake\fake_node_expansion.go:
  26  
  27: // TODO: Should take a PatchType as an argument probably.
  28  func (c *FakeNodes) PatchStatus(_ context.Context, nodeName string, data []byte) (*v1.Node, error) {
  29: 	// TODO: Should be configurable to support additional patch strategies.
  30  	pt := types.StrategicMergePatchType

staging\src\k8s.io\client-go\kubernetes\typed\events\v1beta1\event_expansion.go:
  27  // The EventExpansion interface allows manually adding extra methods to the EventInterface.
  28: // TODO: Add querying functions to the event expansion
  29  type EventExpansion interface {

staging\src\k8s.io\client-go\metadata\fake\simple_test.go:
  191  		},
  192: 		// TODO: Add tests for strategic merge using v1.Pod for example to ensure the test cases
  193  		// demonstrate expected use cases.

staging\src\k8s.io\client-go\pkg\version\base.go:
  36  var (
  37: 	// TODO: Deprecate gitMajor and gitMinor, use only gitVersion
  38  	// instead. First step in deprecation, keep the fields but make

  48  	//
  49: 	// TODO: This field is still called "gitVersion" for legacy
  50  	// reasons. For prerelease versions, the build metadata on the

staging\src\k8s.io\client-go\rest\client.go:
   53  //
   54: // TODO: ContentConfig will be updated to accept a Negotiator instead of a
   55  //

  140  // backoff policy is.  By default if no information is available, NoBackoff.
  141: // TODO Generalize this see #17727 .
  142  func readExpBackoffConfig() BackoffManager {

staging\src\k8s.io\client-go\rest\config.go:
   70  	// refresh tokens for an OAuth2 flow.
   71: 	// TODO: demonstrate an OAuth2 compatible client.
   72  	BearerToken string `datapolicy:"token"`

  297  	//
  298: 	// TODO: NegotiatedSerializer will be phased out as internal clients are removed
  299  	//   from Kubernetes.

  534  	return &Config{
  535: 		// TODO: switch to using cluster DNS.
  536  		Host:            "https://" + net.JoinHostPort(host, port),

staging\src\k8s.io\client-go\rest\request_test.go:
   859  			// we default apiVersion for backwards compatibility with old clients
   860: 			// TODO: potentially remove in 1.7
   861  			Req:   &http.Request{},

  3227  
  3228: 			// TODO: today this is the only site where a test overrides the
  3229  			//  default metric interfaces, in future if we other tests want

  3813  
  3814: // TODO: see if we can consolidate the other trackers into one.
  3815  type requestBodyTracker struct {

staging\src\k8s.io\client-go\rest\request.go:
  1046  			// response body. This can be caused by server timeout due to a slow network connection.
  1047: 			// TODO: Add test for this. Steps may be:
  1048  			// 1. client-go (or kubectl) sends a GET request.

  1178  //
  1179: // TODO: introduce transformation of generic http.Client.Do() errors that separates 4.
  1180  func (r *Request) transformUnstructuredResponseError(resp *http.Response, req *http.Request, body []byte) error {

staging\src\k8s.io\client-go\rest\url_utils.go:
  82  func defaultServerUrlFor(config *Config) (*url.URL, string, error) {
  83: 	// TODO: move the default to secure when the apiserver supports TLS by default
  84  	// config.Insecure is taken to mean "I want HTTPS but don't bother checking the certs against a CA."

staging\src\k8s.io\client-go\rest\watch\encoder.go:
  30  // using encoder.
  31: // TODO: this type is only used by tests
  32  type Encoder struct {

staging\src\k8s.io\client-go\restmapper\discovery_test.go:
  334  				{bGroup, map[string][]metav1.APIResource{"v1": {bBar}}},
  335: 			}, nil, // TODO: do we want this?
  336  		},

  344  				{bGroup, map[string][]metav1.APIResource{"v1": {bBar}}},
  345: 			}, nil, // TODO: do we want this?
  346  		},

  349  				[]metav1.APIGroup{aGroup, bGroup}, nil,
  350: 				map[string]*metav1.APIResourceList{"a/v1": &aResources, "b/v1": &bResources}, // TODO: both fallbacks are ignored
  351  				map[string]error{"a/v1": fmt.Errorf("a failed"), "b/v1": fmt.Errorf("b failed")},

  355  				{bGroup, map[string][]metav1.APIResource{"v1": {bBar}}},
  356: 			}, nil, // TODO: do we want this?
  357  		},

staging\src\k8s.io\client-go\restmapper\discovery.go:
  115  				versionMapper.AddSpecific(gv.WithKind(resource.Kind), plural, singular, scope)
  116: 				// TODO this is producing unsafe guesses that don't actually work, but it matches previous behavior
  117  				versionMapper.Add(gv.WithKind(resource.Kind+"List"), scope)
  118  			}
  119: 			// TODO why is this type not in discovery (at least for "v1")
  120  			versionMapper.Add(gv.WithKind("List"), meta.RESTScopeRoot)

  150  		return nil, err
  151: 		// TODO track the errors and update callers to handle partial errors.
  152  	}

staging\src\k8s.io\client-go\scale\client.go:
  91  	// we need to set the API path based on GroupVersion (defaulting to the legacy path if none is set)
  92: 	// TODO: we "cheat" here since the API path really only depends on group ATM, but this should
  93  	// *probably* take GroupVersionResource and not GroupVersionKind.

staging\src\k8s.io\client-go\testing\actions.go:
  482  		ActionImpl: a.ActionImpl.DeepCopy().(ActionImpl),
  483: 		// TODO this is wrong, but no worse than before
  484  		Value: a.Value,

staging\src\k8s.io\client-go\testing\fixture.go:
  110  				if reflect.TypeOf(oldObj) == reflect.TypeOf(action.GetObject()) {
  111: 					// TODO: Currently we're handling subresource creation as an update
  112  					// on the enclosing resource. This works for some subresources but

staging\src\k8s.io\client-go\tools\auth\clientauth.go:
  64  
  65: // TODO: need a way to rotate Tokens.  Therefore, need a way for client object to be reset when the authcfg is updated.
  66  import (

staging\src\k8s.io\client-go\tools\cache\controller_test.go:
  285  	// Let's wait for the controller to finish processing the things we just added.
  286: 	// TODO: look in the queue to see how many items need to be processed.
  287  	time.Sleep(100 * time.Millisecond)

  289  
  290: 	// TODO: Verify that no goroutines were leaked here and that everything shut
  291  	// down cleanly.

staging\src\k8s.io\client-go\tools\cache\controller.go:
   67  	// If true, when Process() returns an error, re-enqueue the object.
   68: 	// TODO: add interface to let you inject a delay/backoff or drop
   69  	//       the object completely if desired. Pass the object in

  173  // processLoop drains the work queue.
  174: // TODO: Consider doing the processing in parallel. This will require a little thought
  175  // to make sure that we don't end up processing the same object multiple times

  177  //
  178: // TODO: Plumb through the stopCh here (and down to the queue) so that this can
  179  // actually exit when the controller is stopped. Or just give up on this stuff

staging\src\k8s.io\client-go\tools\cache\delta_fifo.go:
  177  //
  178: // TODO: consider merging keyLister with this object, tracking a list of
  179  // "known" keys when Pop() is called. Have to think about how that

  385  // Otherwise, returns nil.
  386: // TODO: is there anything other than deletions that need deduping?
  387  func isDup(a, b *Delta) *Delta {

  390  	}
  391: 	// TODO: Detect other duplicate situations? Are there any?
  392  	return nil

staging\src\k8s.io\client-go\tools\cache\mutation_cache.go:
  37  // Implementations must be thread-safe.
  38: // TODO find a way to layer this into an informer/lister
  39  type MutationCache interface {

staging\src\k8s.io\client-go\tools\cache\reflector_test.go:
  965  	// may be synced to a different version and they will never converge.
  966: 	// TODO: We should use etcd progress-notify feature to avoid this behavior but until this is
  967  	// done we simply try to relist from now to avoid continuous errors on relists.

staging\src\k8s.io\client-go\tools\cache\reflector.go:
  534  			case watch.Deleted:
  535: 				// TODO: Will any consumers need access to the "last known
  536  				// state", which is passed in event.Object? If so, may need

staging\src\k8s.io\client-go\tools\cache\shared_informer.go:
  822  	// added until we OOM.
  823: 	// TODO: This is no worse than before, since reflectors were backed by unbounded DeltaFIFOs, but
  824  	// we should try to do something better.

staging\src\k8s.io\client-go\tools\cache\store.go:
  101  //
  102: // TODO: replace key-as-string with a key-as-struct so that this
  103  // packing/unpacking won't be necessary.

  120  //
  121: // TODO: replace key-as-string with a key-as-struct so that this
  122  // packing/unpacking won't be necessary.

staging\src\k8s.io\client-go\tools\clientcmd\client_config.go:
  632  func BuildConfigFromKubeconfigGetter(masterUrl string, kubeconfigGetter KubeconfigGetter) (*restclient.Config, error) {
  633: 	// TODO: We do not need a DeferredLoader here. Refactor code and see if we can use DirectClientConfig here.
  634  	cc := NewNonInteractiveDeferredLoadingClientConfig(

staging\src\k8s.io\client-go\tools\clientcmd\loader.go:
  437  func lockFile(filename string) error {
  438: 	// TODO: find a way to do this with actual file locks. Will
  439  	// probably need separate solution for windows and Linux.

staging\src\k8s.io\client-go\tools\clientcmd\api\register.go:
  24  // SchemeGroupVersion is group version used to register these objects
  25: // TODO this should be in the "kubeconfig" group
  26  var SchemeGroupVersion = schema.GroupVersion{Group: "", Version: runtime.APIVersionInternal}

staging\src\k8s.io\client-go\tools\clientcmd\api\types.go:
  32  	// Legacy field from pkg/api/types.go TypeMeta.
  33: 	// TODO(jlowdermilk): remove this after eliminating downstream dependencies.
  34  	// +k8s:conversion-gen=false

  37  	// Legacy field from pkg/api/types.go TypeMeta.
  38: 	// TODO(jlowdermilk): remove this after eliminating downstream dependencies.
  39  	// +k8s:conversion-gen=false

staging\src\k8s.io\client-go\tools\clientcmd\api\v1\register.go:
  24  // SchemeGroupVersion is group version used to register these objects
  25: // TODO this should be in the "kubeconfig" group
  26  var SchemeGroupVersion = schema.GroupVersion{Group: "", Version: "v1"}

  28  var (
  29: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  30  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\client-go\tools\clientcmd\api\v1\types.go:
  29  	// Legacy field from pkg/api/types.go TypeMeta.
  30: 	// TODO(jlowdermilk): remove this after eliminating downstream dependencies.
  31  	// +k8s:conversion-gen=false

  34  	// Legacy field from pkg/api/types.go TypeMeta.
  35: 	// TODO(jlowdermilk): remove this after eliminating downstream dependencies.
  36  	// +k8s:conversion-gen=false

staging\src\k8s.io\client-go\tools\events\event_broadcaster.go:
   56  
   57: // TODO: validate impact of copying and investigate hashing
   58  type eventKey struct {

   74  // EventSinkImpl wraps EventsV1Interface to implement EventSink.
   75: // TODO: this makes it easier for testing purpose and masks the logic of performing API calls.
   76  // Note that rollbacking to raw clientset should also be transparent.

  125  func (e *eventBroadcasterImpl) refreshExistingEventSeries() {
  126: 	// TODO: Investigate whether lock contention won't be a problem
  127  	e.mu.Lock()

  143  func (e *eventBroadcasterImpl) finishSeries() {
  144: 	// TODO: Investigate whether lock contention won't be a problem
  145  	e.mu.Lock()

  312  		klog.Errorf("Unable start event watcher: '%v' (will not retry!)", err)
  313: 		// TODO: Rewrite the function signature to return an error, for
  314  		// now just return a no-op function

staging\src\k8s.io\client-go\tools\events\interfaces.go:
  56  	// NOTE: events received on your eventHandler should be copied before being used.
  57: 	// TODO: figure out if this can be removed.
  58  	StartEventWatcher(eventHandler func(event runtime.Object)) func()

staging\src\k8s.io\client-go\tools\leaderelection\resourcelock\configmaplock.go:
  29  
  30: // TODO: This is almost a exact replica of Endpoints lock.
  31  // going forwards as we self host more and more components

staging\src\k8s.io\client-go\tools\leaderelection\resourcelock\interface.go:
  109  // with a random string (e.g. UUID) with only slight modification of this code.
  110: // TODO(mikedanese): this should potentially be versioned
  111  type LeaderElectionRecord struct {

staging\src\k8s.io\client-go\tools\pager\pager.go:
  69  
  70: // TODO: introduce other types of paging functions - such as those that retrieve from a list
  71  // of namespaces.

staging\src\k8s.io\client-go\tools\portforward\portforward.go:
   36  // PortForwardProtocolV1Name is the subprotocol used for port forwarding.
   37: // TODO move to API machinery and re-unify with kubelet/server/portfoward
   38  const PortForwardProtocolV1Name = "portforward.k8s.io"

  307  			if err != nil {
  308: 				// TODO consider using something like https://github.com/hydrogen18/stoppableListener?
  309  				if !strings.Contains(strings.ToLower(err.Error()), "use of closed network connection") {

staging\src\k8s.io\client-go\tools\record\event.go:
  188  // The return value can be ignored or used to stop recording, if desired.
  189: // TODO: make me an object with parameterizable queue length and retry interval
  190  func (e *eventBroadcasterImpl) StartRecordingToSink(sink EventSink) watch.Interface {

staging\src\k8s.io\client-go\tools\reference\ref.go:
  36  // that would allow this.
  37: // TODO: should take a meta.Interface see https://issue.k8s.io/7127
  38  func GetReference(scheme *runtime.Scheme, obj runtime.Object) (*v1.ObjectReference, error) {

  63  	//
  64: 	// TODO: This doesn't work for CRDs, which are not registered in scheme.
  65  	if gvk.Empty() {

  72  		}
  73: 		// TODO: The same object can be registered for multiple group versions
  74  		// (although in practise this doesn't seem to be used).

staging\src\k8s.io\client-go\tools\remotecommand\v1.go:
  124  	if p.Stdin != nil {
  125: 		// TODO this goroutine will never exit cleanly (the io.Copy never unblocks)
  126  		// because stdin is not closed until the process exits. If we try to call

staging\src\k8s.io\client-go\tools\remotecommand\v2.go:
  111  		//
  112: 		// TODO we aren't using go-dockerclient any more; revisit this to determine if it's still
  113  		// required by engine-api.

staging\src\k8s.io\client-go\tools\watch\retrywatcher.go:
  68  	case "", "0":
  69: 		// TODO: revisit this if we ever get WATCH v2 where it means start "now"
  70  		//       without doing the synthetic list of objects at the beginning (see #74022)

staging\src\k8s.io\client-go\tools\watch\until.go:
  54  // Warning: solving such issues.
  55: // TODO: Consider making this function private to prevent misuse when the other occurrences in our codebase are gone.
  56  func UntilWithoutRetry(ctx context.Context, watcher watch.Interface, conditions ...ConditionFunc) (*watch.Event, error) {

staging\src\k8s.io\client-go\transport\cache.go:
  110  	// If we use are reloading files, we need to handle certificate rotation properly
  111: 	// TODO(jackkleeman): We can also add rotation here when config.HasCertCallback() is true
  112  	if config.TLS.ReloadTLSFiles {

staging\src\k8s.io\client-go\util\certificate\certificate_manager.go:
  443  // from the server on the various calls it makes.
  444: // TODO: return errors, have callers handle and log them correctly
  445  func (m *manager) rotateCerts() (bool, error) {

staging\src\k8s.io\client-go\util\retry\util.go:
  101  //
  102: // TODO: Make Backoff an interface?
  103  func RetryOnConflict(backoff wait.Backoff, fn func() error) error {

staging\src\k8s.io\cloud-provider\cloud.go:
   33  // Please note a copy also exists in pkg/controller/client_builder.go
   34: // TODO: Make this depend on the separate controller utilities repo (issues/68947)
   35  type ControllerClientBuilder interface {

  133  type LoadBalancer interface {
  134: 	// TODO: Break this up into different interfaces (LB, etc) when we have more than one type of service
  135  	// GetLoadBalancer returns whether the specified load balancer exists, and

staging\src\k8s.io\cloud-provider\app\controllermanager.go:
  171  		handler := genericcontrollermanager.BuildHandlerChain(unsecuredMux, &c.Authorization, &c.Authentication)
  172: 		// TODO: handle stoppedCh and listenerStoppedCh returned by c.SecureServing.Serve
  173  		if _, _, err := c.SecureServing.Serve(handler, 0, stopCh); err != nil {

  467  // GetAvailableResources gets the map which contains all available resources of the apiserver
  468: // TODO: In general, any controller checking this needs to be dynamic so
  469  // users don't have to restart their controller manager if they change the apiserver.

  506  // leaderElectAndRun runs the leader election, and runs the callbacks once the leader lease is acquired.
  507: // TODO: extract this function into staging/controller-manager
  508  func leaderElectAndRun(c *cloudcontrollerconfig.CompletedConfig, lockIdentity string, electionChecker *leaderelection.HealthzAdaptor, resourceLock string, leaseName string, callbacks leaderelection.LeaderCallbacks) {

staging\src\k8s.io\cloud-provider\config\v1alpha1\conversion.go:
  27  // in an autogenerated manner.
  28: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  29  // in autogenerated code as well.

staging\src\k8s.io\cloud-provider\controllers\node\node_controller.go:
   63  		// the source of truth
   64: 		// TODO: switch the primary key to GA labels in v1.21
   65  		primaryKey:            v1.LabelFailureDomainBetaZone,

   71  		// the source of truth
   72: 		// TODO: switch the primary key to GA labels in v1.21
   73  		primaryKey:            v1.LabelFailureDomainBetaRegion,

   79  		// the source of truth
   80: 		// TODO: switch the primary key to GA labels in v1.21
   81  		primaryKey:            v1.LabelInstanceType,

  444  		if cnc.cloud.ProviderName() == "gce" {
  445: 			// TODO(wlan0): Move this logic to the route controller using the node taint instead of condition
  446  			// Since there are node taints, do we still need this?

staging\src\k8s.io\cloud-provider\controllers\route\route_controller.go:
   50  	// Maximal number of concurrent CreateRoute API calls.
   51: 	// TODO: This should be per-provider.
   52  	maxConcurrentRouteCreations int = 200

  116  
  117: 	// TODO: If we do just the full Resync every 5 minutes (default value)
  118  	// that means that we may wait up to 5 minutes before even starting

staging\src\k8s.io\cloud-provider\controllers\service\controller_test.go:
   129  
   130: // TODO(@MrHohn): Verify the end state when below issue is resolved:
   131  // https://github.com/kubernetes/client-go/issues/607

   466  
   467: // TODO: Finish converting and update comments
   468  func TestUpdateNodesInExternalLoadBalancer(t *testing.T) {

  1515  
  1516: // TODO(@MrHohn): Verify the end state when below issue is resolved:
  1517  // https://github.com/kubernetes/client-go/issues/607

  1571  
  1572: // TODO(@MrHohn): Verify the end state when below issue is resolved:
  1573  // https://github.com/kubernetes/client-go/issues/607

  1627  
  1628: // TODO(@MrHohn): Verify the end state when below issue is resolved:
  1629  // https://github.com/kubernetes/client-go/issues/607

staging\src\k8s.io\cloud-provider\controllers\service\controller.go:
   80  	balancer    cloudprovider.LoadBalancer
   81: 	// TODO(#85155): Stop relying on this and remove the cache completely.
   82  	cache               *serviceCache

  317  func (c *Controller) processServiceCreateOrUpdate(ctx context.Context, service *v1.Service, key string) error {
  318: 	// TODO(@MrHohn): Remove the cache once we get rid of the non-finalizer deletion
  319  	// path. Ref https://github.com/kubernetes/enhancements/issues/980.

  621  func portEqualForLB(x, y *v1.ServicePort) bool {
  622: 	// TODO: Should we check name?  (In theory, an LB could expose it)
  623  	if x.Name != y.Name {

staging\src\k8s.io\cloud-provider\controllers\service\config\v1alpha1\conversion.go:
  27  // in an autogenerated manner.
  28: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  29  // in autogenerated code as well.

staging\src\k8s.io\cloud-provider\fake\fake.go:
  196  func (f *Cloud) GetLoadBalancerName(ctx context.Context, clusterName string, service *v1.Service) string {
  197: 	// TODO: replace DefaultLoadBalancerName to generate more meaningful loadbalancer names.
  198  	return cloudprovider.DefaultLoadBalancerName(service)

staging\src\k8s.io\cloud-provider\options\options.go:
  194  	// sync back to component config
  195: 	// TODO: find more elegant way than syncing back the values.
  196  	c.ComponentConfig.NodeStatusUpdateFrequency = o.NodeStatusUpdateFrequency

staging\src\k8s.io\cluster-bootstrap\token\util\helpers.go:
   29  
   30: // TODO(dixudx): refactor this to util/secrets and util/tokens
   31  

  114  // bootstrap group name. Returns nil if valid or a validation error if invalid.
  115: // TODO(dixudx): should be moved to util/secrets
  116  func ValidateBootstrapGroupName(name string) error {

staging\src\k8s.io\code-generator\cmd\applyconfiguration-gen\main.go:
  33  	genericArgs.AddFlags(pflag.CommandLine)
  34: 	customArgs.AddFlags(pflag.CommandLine, "k8s.io/kubernetes/pkg/apis") // TODO: move this input path out of applyconfiguration-gen
  35  	if err := flag.Set("logtostderr", "true"); err != nil {

staging\src\k8s.io\code-generator\cmd\applyconfiguration-gen\generators\jsontagutil.go:
  25  
  26: // TODO: This implements the same functionality as https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/runtime/converter.go#L236
  27  // but is based on the highly efficient approach from https://golang.org/src/encoding/json/encode.go

staging\src\k8s.io\code-generator\cmd\applyconfiguration-gen\generators\refgraph.go:
  79  	case types.Struct:
  80: 		if pkg, ok := t[field.Name]; ok { // TODO(jpbetz): Refs to types defined in a separate system (e.g. TypeMeta if generating a 3rd party controller) end up referencing the go struct, not the apply configuration type
  81  			return types.Ref(pkg, field.Name.Name+ApplyConfigurationTypeSuffix)

staging\src\k8s.io\code-generator\cmd\client-gen\main.go:
  35  	// Override defaults.
  36: 	// TODO: move this out of client-gen
  37  	genericArgs.OutputPackagePath = "k8s.io/kubernetes/pkg/client/clientset_generated/"

  39  	genericArgs.AddFlags(pflag.CommandLine)
  40: 	customArgs.AddFlags(pflag.CommandLine, "k8s.io/kubernetes/pkg/apis") // TODO: move this input path out of client-gen
  41  	flag.Set("logtostderr", "true")

staging\src\k8s.io\code-generator\cmd\client-gen\generators\generator_for_clientset.go:
  69  func (g *genClientset) GenerateType(c *generator.Context, t *types.Type, w io.Writer) error {
  70: 	// TODO: We actually don't need any type information to generate the clientset,
  71  	// perhaps we can adapt the go2ild framework to this kind of usage.

staging\src\k8s.io\code-generator\cmd\client-gen\generators\generator_for_type.go:
  101  		inputGVString := typeGVString
  102: 		// TODO: Extract this to some helper method as this code is copied into
  103  		// 2 other places.

  300  
  301: 		// TODO: Figure out schemantic for watching a sub-resource.
  302  		if e.HasVerb("watch") {

  321  
  322: 		// TODO: Figure out schemantic for deleting a sub-resource (what arguments
  323  		// are passed, does it need two names? etc.

  344  // adjustTemplate adjust the origin verb template using the expansion name.
  345: // TODO: Make the verbs in templates parametrized so the strings.Replace() is
  346  // not needed.

staging\src\k8s.io\code-generator\cmd\client-gen\generators\fake\fake_client_generator.go:
  33  	outputPackage := filepath.Join(clientsetPackage, "typed", strings.ToLower(groupPackageName), strings.ToLower(gv.Version.NonEmpty()), "fake")
  34: 	// TODO: should make this a function, called by here and in client-generator.go
  35  	realClientPackage := filepath.Join(clientsetPackage, "typed", strings.ToLower(groupPackageName), strings.ToLower(gv.Version.NonEmpty()))

  89  	return &generator.DefaultPackage{
  90: 		// TODO: we'll generate fake clientset for different release in the future.
  91  		// Package name and path are hard coded for now.

staging\src\k8s.io\code-generator\cmd\client-gen\generators\fake\generator_fake_for_clientset.go:
  85  func (g *genClientset) GenerateType(c *generator.Context, t *types.Type, w io.Writer) error {
  86: 	// TODO: We actually don't need any type information to generate the clientset,
  87  	// perhaps we can adapt the go2ild framework to this kind of usage.

staging\src\k8s.io\code-generator\cmd\client-gen\generators\fake\generator_fake_for_type.go:
  274  
  275: 		// TODO: Figure out schemantic for watching a sub-resource.
  276  		if e.HasVerb("watch") {

  295  
  296: 		// TODO: Figure out schemantic for deleting a sub-resource (what arguments
  297  		// are passed, does it need two names? etc.

  318  // adjustTemplate adjust the origin verb template using the expansion name.
  319: // TODO: Make the verbs in templates parametrized so the strings.Replace() is
  320  // not needed.

staging\src\k8s.io\code-generator\cmd\client-gen\types\helpers.go:
  31  	// this can be the internal version for the legacy kube types
  32: 	// TODO once we've cleared the last uses as strings, this special case should be removed.
  33  	if (len(gv) == 0) || (gv == "/") {

staging\src\k8s.io\code-generator\cmd\conversion-gen\generators\conversion.go:
    75  
    76: // TODO: This is created only to reduce number of changes in a single PR.
    77  // Remove it and use PublicNamer instead.

   178  		// Now check if the name satisfies the convention.
   179: 		// TODO: This should call the Namer directly.
   180  		args := argsFromType(inType.Elem, outType.Elem)

   210  	// Accumulate pre-existing conversion functions.
   211: 	// TODO: This is too ad-hoc.  We need a better way.
   212  	manualConversions := conversionFuncMap{}

   216  	// defined.
   217: 	// TODO: in the future, relax the nested manual conversion requirement
   218  	//   if we can show that a large enough types are memory identical but

   295  		// in the output directory.
   296: 		// TODO: build a more fundamental concept in gengo for dealing with modifications
   297  		// to vendored packages.

   325  		// in the output directory.
   326: 		// TODO: build a more fundamental concept in gengo for dealing with modifications
   327  		// to vendored packages.

   423  		case types.Interface:
   424: 			// TODO: determine whether the interfaces are actually equivalent - for now, they must have the
   425  			// same type.

   543  	}
   544: 	// TODO: Consider generating functions for other kinds too.
   545  	if t.Kind != types.Struct {

   844  	} else {
   845: 		// TODO: Implement it when necessary.
   846  		sw.Do("for range *in {\n", nil)

  1081  func (g *genConversion) doAlias(inType, outType *types.Type, sw *generator.SnippetWriter) {
  1082: 	// TODO: Add support for aliases.
  1083  	g.doUnknown(inType, outType, sw)

  1161  		default:
  1162: 			// TODO: Support other types to allow more auto-conversions.
  1163  			sw.Do("// FIXME: out.$.name$ is of not yet supported type and requires manual conversion\n", memberArgs)

  1165  	default:
  1166: 		// TODO: Support other types to allow more auto-conversions.
  1167  		sw.Do("// FIXME: out.$.name$ is of not yet supported type and requires manual conversion\n", memberArgs)

  1213  func isDirectlyAssignable(inType, outType *types.Type) bool {
  1214: 	// TODO: This should maybe check for actual assignability between the two
  1215  	// types, rather than superficial traits that happen to indicate it is

staging\src\k8s.io\code-generator\cmd\go-to-protobuf\protobuf\generator.go:
  150  	lines := []string{}
  151: 	// TODO: this could be expressed more cleanly
  152  	for _, line := range g.imports.ImportLines() {

  209  // CastTypeName returns the cast type name of a Go type
  210: // TODO: delegate to a new localgo namer?
  211  func (p protobufLocator) CastTypeName(name types.Name) string {

  438  func isFundamentalProtoType(t *types.Type) (*types.Type, bool) {
  439: 	// TODO: when we enable proto3, also include other fundamental types in the google.protobuf package
  440  	// switch {

  466  		}
  467: 		// TODO: complex?
  468  	}

  735  func formatProtoFile(source []byte) ([]byte, error) {
  736: 	// TODO; Is there any protobuf formatter?
  737  	return source, nil

staging\src\k8s.io\code-generator\cmd\go-to-protobuf\protobuf\namer.go:
  147  	}
  148: 	// TODO: should methods be walked?
  149  	if t.Elem != nil {

staging\src\k8s.io\code-generator\cmd\go-to-protobuf\protobuf\package.go:
  162  				log.Printf("WARNING: struct %s field %d %s: defined multiple names but single protobuf tag", t.Name.Name, i, f.Names[0].Name)
  163: 				// TODO hard error?
  164  			}

staging\src\k8s.io\code-generator\cmd\go-to-protobuf\protobuf\parser.go:
  110  // properly discriminate between empty and nil (which is not possible in protobuf).
  111: // TODO: move into upstream gogo-protobuf once https://github.com/gogo/protobuf/issues/181
  112  //

staging\src\k8s.io\code-generator\cmd\informer-gen\main.go:
  34  	// Override defaults.
  35: 	// TODO: move out of informer-gen
  36  	genericArgs.OutputPackagePath = "k8s.io/kubernetes/pkg/client/informers/informers_generated"

staging\src\k8s.io\code-generator\cmd\informer-gen\generators\generic.go:
  167  // ForResource gives generic access to a shared informer of the matching type
  168: // TODO extend this to unknown resources with a client pool
  169  func (f *sharedInformerFactory) ForResource(resource {{.schemaGroupVersionResource|raw}}) (GenericInformer, error) {

staging\src\k8s.io\code-generator\cmd\lister-gen\main.go:
  34  	// Override defaults.
  35: 	// TODO: move this out of lister-gen
  36  	genericArgs.OutputPackagePath = "k8s.io/kubernetes/pkg/client/listers"

staging\src\k8s.io\code-generator\cmd\prerelease-lifecycle-gen\prerelease-lifecycle-generators\status.go:
  249  			// in the output directory.
  250: 			// TODO: build a more fundamental concept in gengo for dealing with modifications
  251  			// to vendored packages.

staging\src\k8s.io\code-generator\examples\apiserver\apis\example\v1\register.go:
  27  var (
  28: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  29  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\code-generator\examples\apiserver\apis\example2\v1\register.go:
  27  var (
  28: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  29  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\code-generator\examples\apiserver\apis\example3.io\v1\register.go:
  27  var (
  28: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  29  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\code-generator\examples\apiserver\informers\externalversions\generic.go:
  53  // ForResource gives generic access to a shared informer of the matching type
  54: // TODO extend this to unknown resources with a client pool
  55  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

staging\src\k8s.io\code-generator\examples\apiserver\informers\internalversion\generic.go:
  53  // ForResource gives generic access to a shared informer of the matching type
  54: // TODO extend this to unknown resources with a client pool
  55  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

staging\src\k8s.io\code-generator\examples\crd\apis\example\v1\register.go:
  27  var (
  28: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  29  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\code-generator\examples\crd\apis\example2\v1\register.go:
  27  var (
  28: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  29  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\code-generator\examples\crd\informers\externalversions\generic.go:
  52  // ForResource gives generic access to a shared informer of the matching type
  53: // TODO extend this to unknown resources with a client pool
  54  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

staging\src\k8s.io\code-generator\examples\HyphenGroup\apis\example\v1\register.go:
  27  var (
  28: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  29  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\code-generator\examples\HyphenGroup\informers\externalversions\generic.go:
  51  // ForResource gives generic access to a shared informer of the matching type
  52: // TODO extend this to unknown resources with a client pool
  53  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

staging\src\k8s.io\code-generator\examples\MixedCase\apis\example\v1\register.go:
  27  var (
  28: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  29  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\code-generator\examples\MixedCase\informers\externalversions\generic.go:
  51  // ForResource gives generic access to a shared informer of the matching type
  52: // TODO extend this to unknown resources with a client pool
  53  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

staging\src\k8s.io\component-base\config\v1alpha1\conversion.go:
  27  // in an autogenerated manner.
  28: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  29  // in autogenerated code as well.

staging\src\k8s.io\component-base\config\v1alpha1\defaults.go:
  46  	if obj.ResourceLock == "" {
  47: 		// TODO(#80289): Figure out how to migrate to LeaseLock at this point.
  48  		//   This will most probably require going through EndpointsLease first.

staging\src\k8s.io\component-base\featuregate\feature_gate.go:
  322  	f.lock.Lock()
  323: 	// TODO(mtaufen): Shouldn't we just close it on the first Set/SetFromMap instead?
  324  	// Not all components expose a feature gates flag using this AddFlag method, and

staging\src\k8s.io\component-base\metrics\counter.go:
  111  
  112: // TODO: make this true: var _ CounterVecMetric = &CounterVec{}
  113  

staging\src\k8s.io\component-base\metrics\desc.go:
  123  		if shouldHide(&version, selfVersion) {
  124: 			// TODO(RainbowMango): Remove this log temporarily. https://github.com/kubernetes/kubernetes/issues/85369
  125  			// klog.Warningf("This metric(%s) has been deprecated for more than one release, hiding.", d.fqName)

staging\src\k8s.io\component-base\metrics\metric.go:
  123  		if shouldHide(&version, selfVersion) {
  124: 			// TODO(RainbowMango): Remove this log temporarily. https://github.com/kubernetes/kubernetes/issues/85369
  125  			// klog.Warningf("This metric has been deprecated for more than one release, hiding.")

staging\src\k8s.io\component-base\metrics\prometheus\ratelimiter\rate_limiter.go:
  68  	}
  69: 	// TODO: determine how to track rate limiter saturation
  70  	// See discussion at https://go-review.googlesource.com/c/time/+/29958#message-4caffc11669cadd90e2da4c05122cfec50ea6a22

staging\src\k8s.io\component-base\version\base.go:
  36  var (
  37: 	// TODO: Deprecate gitMajor and gitMinor, use only gitVersion
  38  	// instead. First step in deprecation, keep the fields but make

  48  	//
  49: 	// TODO: This field is still called "gitVersion" for legacy
  50  	// reasons. For prerelease versions, the build metadata on the

staging\src\k8s.io\component-helpers\auth\rbac\validation\policy_comparator.go:
  30  	// 3.  Any left over mini-rules means that we are not covered and we have a nice list of them.
  31: 	// TODO: it might be nice to collapse the list down into something more human readable
  32  

staging\src\k8s.io\component-helpers\node\topology\helpers.go:
  36  
  37: 	// TODO: "failure-domain.beta..." names are deprecated, but will
  38  	// stick around a long time due to existing on old extant objects like PVs.

staging\src\k8s.io\component-helpers\storage\volume\pv_helpers.go:
  72  	// a volume for this PVC.
  73: 	// TODO: remove beta anno once deprecation period ends
  74  	AnnStorageProvisioner     = "volume.kubernetes.io/storage-provisioner"

staging\src\k8s.io\controller-manager\config\v1alpha1\conversion.go:
  27  // in an autogenerated manner.
  28: // TODO: Fix the bug in conversion-gen so it automatically discovers these Convert_* functions
  29  // in autogenerated code as well.

staging\src\k8s.io\controller-manager\pkg\clientbuilder\client_builder.go:
  27  // Please note a copy also exists in staging/src/k8s.io/cloud-provider/cloud.go
  28: // TODO: Extract this into a separate controller utilities repo (issues/68947)
  29  type ControllerClientBuilder interface {

staging\src\k8s.io\cri-api\pkg\apis\runtime\v1\api.proto:
  667  message WindowsPodSandboxStats {
  668:     // TODO: Add stats relevant to windows.
  669  }

staging\src\k8s.io\cri-api\pkg\apis\runtime\v1alpha2\api.proto:
  660  message WindowsPodSandboxStats {
  661:     // TODO: Add stats relevant to windows.
  662  }

staging\src\k8s.io\csi-translation-lib\translate_test.go:
  474  
  475: // TODO: test for not modifying the original PV.

staging\src\k8s.io\csi-translation-lib\plugins\aws_ebs.go:
  259  	if err != nil {
  260: 		// TODO: Maybe we should pass a URL into the Volume functions
  261  		return "", fmt.Errorf("Invalid disk name (%s): %v", kubernetesID, err)

staging\src\k8s.io\csi-translation-lib\plugins\gce_pd.go:
  379  
  380: // TODO: Replace this with the imported one from GCE PD CSI Driver when
  381  // the driver removes all k8s/k8s dependencies

staging\src\k8s.io\kube-aggregator\pkg\apis\apiregistration\v1\register.go:
  37  	// SchemeBuilder is the scheme builder with scheme init functions to run for this API package
  38: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  39  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\kube-aggregator\pkg\apis\apiregistration\v1beta1\register.go:
  37  	// SchemeBuilder is the scheme builder with scheme init functions to run for this API package
  38: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  39  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\kube-aggregator\pkg\apiserver\apiserver.go:
  172  	// the kube aggregator wires its own discovery mechanism
  173: 	// TODO eventually collapse this by extracting all of the discovery out
  174  	c.GenericConfig.EnableDiscovery = false

  266  			// generate a context  from stopCh. This is to avoid modifying files which are relying on apiserver
  267: 			// TODO: See if we can pass ctx to the current method
  268  			ctx, cancel := context.WithCancel(context.Background())

  508  
  509: 	// TODO unregister group level discovery when there are no more versions for the group
  510  	// We don't need this right away because the handler properly delegates when no versions are present

staging\src\k8s.io\kube-aggregator\pkg\apiserver\handler_proxy.go:
  107  	}
  108: 	// TODO: record long-running request differently? The long-running check func does not necessarily match the one of the aggregated apiserver
  109  	endpointmetrics.RecordRequestTermination(req, info, aggregatorComponent, code)

  220  
  221: // TODO this should properly handle content type negotiation
  222  // if the caller asked for protobuf and you write JSON bad things happen.

staging\src\k8s.io\kube-aggregator\pkg\client\informers\externalversions\generic.go:
  52  // ForResource gives generic access to a shared informer of the matching type
  53: // TODO extend this to unknown resources with a client pool
  54  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

staging\src\k8s.io\kube-aggregator\pkg\cmd\server\start.go:
  122  func (o AggregatorOptions) RunAggregator(stopCh <-chan struct{}) error {
  123: 	// TODO have a "real" external address
  124  	if err := o.RecommendedOptions.SecureServing.MaybeDefaultWithSelfSignedCerts("localhost", nil, nil); err != nil {

staging\src\k8s.io\kube-aggregator\pkg\controllers\openapiv3\aggregator\aggregator.go:
  249  
  250: 	// TODO: Import this logic from kube-openapi instead of duplicating
  251  	// URLs for OpenAPI V3 have the format /openapi/v3/<groupversionpath>

staging\src\k8s.io\kube-aggregator\pkg\controllers\status\available_controller.go:
  213  
  214: 	// TODO: decouple from legacyregistry
  215  	var err error

  604  
  605: // TODO, think of a way to avoid checking on every service manipulation
  606  

staging\src\k8s.io\kube-aggregator\pkg\registry\apiservice\etcd\etcd.go:
  53  
  54: 		// TODO: define table converter that exposes more than name/creation timestamp
  55  		TableConvertor: rest.NewDefaultTableConvertor(apiregistration.Resource("apiservices")),

  58  	if err := store.CompleteWithOptions(options); err != nil {
  59: 		panic(err) // TODO: Propagate error up
  60  	}

staging\src\k8s.io\kube-scheduler\config\v1\types.go:
  56  	// DebuggingConfiguration holds configuration for Debugging related features
  57: 	// TODO: We might wanna make this a substruct like Debugging componentbaseconfigv1alpha1.DebuggingConfiguration
  58  	componentbaseconfigv1alpha1.DebuggingConfiguration `json:",inline"`

staging\src\k8s.io\kube-scheduler\config\v1beta2\types.go:
  63  	// DebuggingConfiguration holds configuration for Debugging related features
  64: 	// TODO: We might wanna make this a substruct like Debugging componentbaseconfigv1alpha1.DebuggingConfiguration
  65  	componentbaseconfigv1alpha1.DebuggingConfiguration `json:",inline"`

staging\src\k8s.io\kube-scheduler\config\v1beta3\types.go:
  56  	// DebuggingConfiguration holds configuration for Debugging related features
  57: 	// TODO: We might wanna make this a substruct like Debugging componentbaseconfigv1alpha1.DebuggingConfiguration
  58  	componentbaseconfigv1alpha1.DebuggingConfiguration `json:",inline"`

staging\src\k8s.io\kubectl\pkg\apply\element.go:
  67  	// maybe "merge", "replace" or "retainkeys"
  68: 	// TODO: There maybe multiple strategies, so this may need to be a slice, map, or struct
  69  	// Address this in a follow up in the PR to introduce retainkeys strategy

staging\src\k8s.io\kubectl\pkg\cmd\cmd.go:
  328  	//
  329: 	// TODO: Consider adding a flag or file preference for setting
  330  	// the language, instead of just loading from the LANG env. variable.

staging\src\k8s.io\kubectl\pkg\cmd\apply\apply_test.go:
  1080  						// is ignoring the actual return object.
  1081: 						// TODO: Make this match actual server behavior by returning the patched object.
  1082  						body := ioutil.NopCloser(bytes.NewReader(deploymentBytes))

staging\src\k8s.io\kubectl\pkg\cmd\apply\patcher.go:
  269  	}
  270: 	// TODO: use wait
  271  	if err := wait.PollImmediate(1*time.Second, p.Timeout, func() (bool, error) {

staging\src\k8s.io\kubectl\pkg\cmd\attach\attach.go:
  244  		}
  245: 		// TODO: convert this to a clean "wait" behavior
  246  	}

staging\src\k8s.io\kubectl\pkg\cmd\clusterinfo\clusterinfo_dump.go:
  207  	for _, namespace := range namespaces {
  208: 		// TODO: this is repetitive in the extreme.  Use reflection or
  209  		// something to make this a for loop.

staging\src\k8s.io\kubectl\pkg\cmd\clusterinfo\clusterinfo.go:
   94  func (o *ClusterInfoOptions) Run() error {
   95: 	// TODO use generalized labels once they are implemented (#341)
   96  	b := o.Builder.

  153  
  154: 	// TODO consider printing more information about cluster
  155  }

staging\src\k8s.io\kubectl\pkg\cmd\completion\completion.go:
  169  
  170: 	return kubectl.GenBashCompletionV2(out, false) // TODO: Upgrade to Cobra 1.3.0 or later before including descriptions (See https://github.com/spf13/cobra/pull/1509)
  171  }

staging\src\k8s.io\kubectl\pkg\cmd\config\config.go:
  56  
  57: 	// TODO(juanvallejo): update all subcommands to work with genericclioptions.IOStreams
  58  	cmd.AddCommand(NewCmdConfigView(streams, pathOptions))

staging\src\k8s.io\kubectl\pkg\cmd\cp\cp.go:
  107  				} else if strings.Contains(toComplete, ":") {
  108: 					// TODO: complete remote files in the pod
  109  				} else if idx := strings.Index(toComplete, "/"); idx > 0 {

  306  
  307: 	// TODO: Improve error messages by first testing if 'tar' is present in the container?
  308  	if o.NoPreserve {

  375  
  376: 		// TODO: Improve error messages by first testing if 'tar' is present in the container?
  377  		Command:  []string{"tar", "cf", "-", t.src.File.String()},

  407  func makeTar(src localPath, dest remotePath, writer io.Writer) error {
  408: 	// TODO: use compression here?
  409  	tarWriter := tar.NewWriter(writer)

  488  	symlinkWarningPrinted := false
  489: 	// TODO: use compression here?
  490  	tarReader := tar.NewReader(reader)

staging\src\k8s.io\kubectl\pkg\cmd\create\create_secret_tls.go:
  181  func (o *CreateSecretTLSOptions) Validate() error {
  182: 	// TODO: This is not strictly necessary. We can generate a self signed cert
  183  	// if no key/cert is given. The only requirement is that we either get both

  240  	}
  241: 	// TODO: Add more validation.
  242  	// 1. If the certificate contains intermediates, it is a valid chain.

staging\src\k8s.io\kubectl\pkg\cmd\debug\debug.go:
  300  			fmt.Fprintf(o.Out, "Targeting container %q. If you don't see processes from this container it may be because the container runtime doesn't support this feature.\n", o.TargetContainer)
  301: 			// TODO(verb): Add a list of supported container runtimes to https://kubernetes.io/docs/concepts/workloads/pods/ephemeral-containers/ and then link here.
  302  		}

  337  		if err != nil {
  338: 			// TODO(verb): configurable early return
  339  			return err

  726  func (o *DebugOptions) waitForContainer(ctx context.Context, ns, podName, containerName string) (*corev1.Pod, error) {
  727: 	// TODO: expose the timeout
  728  	ctx, cancel := watchtools.ContextWithOptionalTimeout(ctx, 0*time.Second)

staging\src\k8s.io\kubectl\pkg\cmd\exec\exec.go:
  101  	cmdutil.AddJsonFilenameFlag(cmd.Flags(), &options.FilenameOptions.Filenames, "to use to exec into the resource")
  102: 	// TODO support UID
  103  	cmdutil.AddContainerVarFlags(cmd, &options.ContainerName, options.ContainerName)

  352  
  353: 		// TODO: consider abstracting into a client invocation or client helper
  354  		req := restClient.Post().

staging\src\k8s.io\kubectl\pkg\cmd\explain\explain.go:
  135  	} else {
  136: 		// TODO: After we figured out the new syntax to separate group and resource, allow
  137  		// the users to use it in explain (kubectl explain <group><syntax><resource>).

staging\src\k8s.io\kubectl\pkg\cmd\get\get.go:
  221  
  222: 	// TODO (soltysh): currently we don't support custom columns
  223  	// with server side print. So in these cases force the old behavior.

  456  // Run performs the get operation.
  457: // TODO: remove the need to pass these arguments, like other commands.
  458  func (o *GetOptions) Run(f cmdutil.Factory, cmd *cobra.Command, args []string) error {

  471  	if o.Sort {
  472: 		// TODO(juanvallejo): in the future, we could have the client use chunking
  473  		// to gather all results, then sort them all at the end to reduce server load.

  633  // watch starts a client-side watch of one or more resources.
  634: // TODO: remove the need for arguments here.
  635  func (o *GetOptions) watch(f cmdutil.Factory, cmd *cobra.Command, args []string) error {

staging\src\k8s.io\kubectl\pkg\cmd\get\humanreadable_flags_test.go:
  75  
  76: 		// TODO(juanvallejo): test sorting once it's moved to the HumanReadablePrinter
  77  		sortBy       string

staging\src\k8s.io\kubectl\pkg\cmd\get\humanreadable_flags.go:
  97  
  98: 	// TODO(juanvallejo): handle sorting here
  99  

staging\src\k8s.io\kubectl\pkg\cmd\label\label.go:
  278  
  279: 	// TODO: support bulk generic output a la Get
  280  	return r.Visit(func(info *resource.Info, err error) error {

staging\src\k8s.io\kubectl\pkg\cmd\patch\patch.go:
  341  		bytes, err := patchObj.Apply(originalJS)
  342: 		// TODO: This is pretty hacky, we need a better structured error from the json-patch
  343  		if err != nil && strings.Contains(err.Error(), "doc is missing key") {

staging\src\k8s.io\kubectl\pkg\cmd\portforward\portforward.go:
  121  	cmd.Flags().StringSliceVar(&opts.Address, "address", []string{"localhost"}, "Addresses to listen on (comma separated). Only accepts IP addresses or localhost as a value. When localhost is supplied, kubectl will try to bind on both 127.0.0.1 and ::1 and will fail if neither of these addresses are available to bind.")
  122: 	// TODO support UID
  123  	return cmd

  256  // checkUDPPortInService returns an error if remote port in Service is a UDP port
  257: // TODO: remove this check after #47862 is solved
  258  func checkUDPPortInService(ports []string, svc *corev1.Service) error {

  273  // checkUDPPortInPod returns an error if remote port in Pod is a UDP port
  274: // TODO: remove this check after #47862 is solved
  275  func checkUDPPortInPod(ports []string, pod *corev1.Pod) error {

staging\src\k8s.io\kubectl\pkg\cmd\run\run.go:
  596  
  597: 	// TODO: Validate flag usage against selected generator. More tricky since --expose was added.
  598  	obj, err := generator.Generate(params)

staging\src\k8s.io\kubectl\pkg\cmd\set\helper.go:
  44  // a non-greedy '*' wildcard operator.
  45: // TODO: turn into a regex and handle greedy matches and backtracking.
  46  func selectString(s, spec string) bool {

staging\src\k8s.io\kubectl\pkg\cmd\set\set_resources.go:
  193  		// for the specified resource.
  194: 		// TODO: this should be in the builder - if someone specifies tuples, fail when
  195  		// local is true

staging\src\k8s.io\kubectl\pkg\cmd\set\set_subject.go:
  245  		if transformed && err == nil {
  246: 			// TODO: switch UpdatePodSpecForObject to work on v1.PodSpec
  247  			return runtime.Encode(scheme.DefaultJSONEncoder(), obj)

staging\src\k8s.io\kubectl\pkg\cmd\taint\utils.go:
  161  // addTaints adds the newTaints list to existing ones and updates the newTaints List.
  162: // TODO: This needs a rewrite to take only the new values instead of appended newTaints list to be consistent.
  163  func addTaints(oldTaints []corev1.Taint, newTaints *[]corev1.Taint) bool {

staging\src\k8s.io\kubectl\pkg\cmd\testing\fake.go:
  644  	// for backwards compatibility with existing tests, allow rest mappings from the scheme to show up
  645: 	// TODO: make this opt-in?
  646  	mapper = meta.FirstHitRESTMapper{

staging\src\k8s.io\kubectl\pkg\cmd\top\top_node_test.go:
   79  
   80: 	// TODO in the long run, we want to test most of our commands like this. Wire the options struct with specific mocks
   81: 	// TODO then check the particular Run functionality and harvest results from fake clients
   82  	cmdOptions := &TopNodeOptions{

  146  
  147: 	// TODO in the long run, we want to test most of our commands like this. Wire the options struct with specific mocks
  148: 	// TODO then check the particular Run functionality and harvest results from fake clients
  149  	cmdOptions := &TopNodeOptions{

  225  
  226: 	// TODO in the long run, we want to test most of our commands like this. Wire the options struct with specific mocks
  227: 	// TODO then check the particular Run functionality and harvest results from fake clients
  228  	cmdOptions := &TopNodeOptions{

  301  
  302: 	// TODO in the long run, we want to test most of our commands like this. Wire the options struct with specific mocks
  303: 	// TODO then check the particular Run functionality and harvest results from fake clients
  304  	cmdOptions := &TopNodeOptions{

  387  
  388: 	// TODO in the long run, we want to test most of our commands like this. Wire the options struct with specific mocks
  389: 	// TODO then check the particular Run functionality and harvest results from fake clients
  390  	cmdOptions := &TopNodeOptions{

staging\src\k8s.io\kubectl\pkg\cmd\top\top_pod_test.go:
  239  
  240: 			// TODO in the long run, we want to test most of our commands like this. Wire the options struct with specific mocks
  241: 			// TODO then check the particular Run functionality and harvest results from fake clients.  We probably end up skipping the factory altogether.
  242  			if err := cmdOptions.Complete(tf, cmd, testCase.args); err != nil {

staging\src\k8s.io\kubectl\pkg\cmd\util\factory.go:
  37  // upon peer methods in its own ring.
  38: // TODO: make the functions interfaces
  39: // TODO: pass the various interfaces on the factory directly into the command constructors (so the
  40  // commands are decoupled from the factory).

staging\src\k8s.io\kubectl\pkg\cmd\util\helpers.go:
  514  // and returns the resulting object
  515: // TODO: merge assumes JSON serialization, and does not properly abstract API retrieval
  516  func Merge(codec runtime.Codec, dst runtime.Object, fragment string) (runtime.Object, error) {

  685  //
  686: // TODO(juanvallejo): This can be cleaned up even further by creating
  687  // a PrintFlags struct that binds the --dry-run flag, and whose

staging\src\k8s.io\kubectl\pkg\cmd\util\kubectl_match_version.go:
   77  	}
   78: 	// TODO we should not have to do this.  It smacks of something going wrong.
   79  	setKubernetesDefaults(clientConfig)

  113  // Kubernetes API or returns an error if any of the defaults are impossible or invalid.
  114: // TODO this isn't what we want.  Each clientset should be setting defaults as it sees fit.
  115  func setKubernetesDefaults(config *rest.Config) error {
  116: 	// TODO remove this hack.  This is allowing the GetOptions to be serialized.
  117  	config.GroupVersion = &schema.GroupVersion{Group: "", Version: "v1"}

staging\src\k8s.io\kubectl\pkg\cmd\util\editor\editoptions.go:
  889  func hasLines(r io.Reader) (bool, error) {
  890: 	// TODO: if any files we read have > 64KB lines, we'll need to switch to bytes.ReadLine
  891: 	// TODO: probably going to be secrets
  892  	s := bufio.NewScanner(r)

staging\src\k8s.io\kubectl\pkg\cmd\util\editor\editor.go:
  35  	// sorry, blame Git
  36: 	// TODO: on Windows rely on 'start' to launch the editor associated
  37  	// with the given file type. If we can't because of the need of

staging\src\k8s.io\kubectl\pkg\cmd\version\version.go:
  37  
  38: // TODO(knverey): remove this hardcoding once kubectl being built with module support makes BuildInfo available.
  39  const kustomizeVersion = "v4.5.7"

staging\src\k8s.io\kubectl\pkg\cmd\wait\wait.go:
  330  	if initObjGetErr != nil {
  331: 		// TODO this could do something slightly fancier if we wish
  332  		return info.Object, false, initObjGetErr

staging\src\k8s.io\kubectl\pkg\describe\describe.go:
  2297  
  2298: 	// TODO: drop this condition when beta disappears in 1.25
  2299  	cronJobBeta, err := d.client.BatchV1beta1().CronJobs(namespace).Get(context.TODO(), name, metav1.GetOptions{})

  3590  		} else {
  3591: 			// TODO: We haven't decided the namespace for Node object yet.
  3592  			// there are two UIDs for host events:

  3594  			// kubelet use node.name
  3595: 			// TODO: Uniform use of UID
  3596  			events, _ = searchEvents(d.CoreV1(), ref, describerSettings.ChunkSize)

  5039  // be returned
  5040: // TODO: reorder and partial match extra.
  5041  func (d *Describers) DescribeObject(exact interface{}, extra ...interface{}) (string, error) {

staging\src\k8s.io\kubectl\pkg\drain\default.go:
  33  func RunNodeDrain(drainer *Helper, nodeName string) error {
  34: 	// TODO(justinsb): Ensure we have adequate e2e coverage of this function in library consumers
  35  	list, errs := drainer.GetPodsForDeletion(nodeName)

  57  	}
  58: 	// TODO(justinsb): Ensure we have adequate e2e coverage of this function in library consumers
  59  	c := NewCordonHelper(node)

staging\src\k8s.io\kubectl\pkg\drain\drain.go:
  252  
  253: 	// TODO(justinsb): unnecessary?
  254  	getPodFn := func(namespace, name string) (*corev1.Pod, error) {

staging\src\k8s.io\kubectl\pkg\drain\filters.go:
  224  
  225: 	// TODO: this warning gets dropped by subsequent filters;
  226  	// consider accounting for multiple warning conditions or at least

staging\src\k8s.io\kubectl\pkg\generate\generate.go:
  35  // GeneratorParam is a parameter for a generator
  36: // TODO: facilitate structured json generator input schemes
  37  type GeneratorParam struct {

staging\src\k8s.io\kubectl\pkg\generate\versioned\generator.go:
  26  const (
  27: 	// TODO(sig-cli): Enforce consistent naming for generators here.
  28  	// See discussion in https://github.com/kubernetes/kubernetes/issues/46237

staging\src\k8s.io\kubectl\pkg\polymorphichelpers\history.go:
  102  // ViewHistory returns a revision-to-replicaset map as the revision history of a deployment
  103: // TODO: this should be a describer
  104  func (h *DeploymentHistoryViewer) ViewHistory(namespace, name string, revision int64) (string, error) {

  192  // ViewHistory returns a revision-to-history map as the revision history of a deployment
  193: // TODO: this should be a describer
  194  func (h *DaemonSetHistoryViewer) ViewHistory(namespace, name string, revision int64) (string, error) {

  231  	for _, history := range history {
  232: 		// TODO: for now we assume revisions don't overlap, we may need to handle it
  233  		historyInfo[history.Revision] = history

  278  // ViewHistory returns a list of the revision history of a statefulset
  279: // TODO: this should be a describer
  280  func (h *StatefulSetHistoryViewer) ViewHistory(namespace, name string, revision int64) (string, error) {

  330  // controlledHistories returns all ControllerRevisions in namespace that selected by selector and owned by accessor
  331: // TODO: Rename this to controllerHistory when other controllers have been upgraded
  332  func controlledHistoryV1(

  454  
  455: // TODO: copied here until this becomes a describer
  456  func tabbedString(f func(io.Writer) error) (string, error) {

staging\src\k8s.io\kubectl\pkg\polymorphichelpers\mapbasedselectorforobject.go:
   34  func mapBasedSelectorForObject(object runtime.Object) (string, error) {
   35: 	// TODO: replace with a swagger schema based approach (identify pod selector via schema introspection)
   36  	switch t := object.(type) {

   55  		if t.Spec.Selector != nil {
   56: 			// TODO(madhusudancs): Make this smarter by admitting MatchExpressions with Equals
   57  			// operator, DoubleEquals operator and In operator with only one element in the set.

   74  		}
   75: 		// TODO(madhusudancs): Make this smarter by admitting MatchExpressions with Equals
   76  		// operator, DoubleEquals operator and In operator with only one element in the set.

   86  		}
   87: 		// TODO(madhusudancs): Make this smarter by admitting MatchExpressions with Equals
   88  		// operator, DoubleEquals operator and In operator with only one element in the set.

   98  		}
   99: 		// TODO(madhusudancs): Make this smarter by admitting MatchExpressions with Equals
  100  		// operator, DoubleEquals operator and In operator with only one element in the set.

  109  		if t.Spec.Selector != nil {
  110: 			// TODO(madhusudancs): Make this smarter by admitting MatchExpressions with Equals
  111  			// operator, DoubleEquals operator and In operator with only one element in the set.

  128  		}
  129: 		// TODO(madhusudancs): Make this smarter by admitting MatchExpressions with Equals
  130  		// operator, DoubleEquals operator and In operator with only one element in the set.

  140  		}
  141: 		// TODO(madhusudancs): Make this smarter by admitting MatchExpressions with Equals
  142  		// operator, DoubleEquals operator and In operator with only one element in the set.

staging\src\k8s.io\kubectl\pkg\polymorphichelpers\protocolsforobject.go:
  31  func protocolsForObject(object runtime.Object) (map[string]string, error) {
  32: 	// TODO: replace with a swagger schema based approach (identify pod selector via schema introspection)
  33  	switch t := object.(type) {

staging\src\k8s.io\kubectl\pkg\polymorphichelpers\rollback.go:
  109  
  110: 	// TODO: Fix this after kubectl has been removed from core. It is not possible to convert the runtime.Object
  111  	// to the external appsv1 Deployment without round-tripping through an internal version of Deployment. We're

  492  
  493: // TODO: copied from daemon controller, should extract to a library
  494  type historiesByRevision []*appsv1.ControllerRevision

staging\src\k8s.io\kubectl\pkg\scale\scale.go:
  39  	// and optionally waits until the status of the resource matches newSize (if wait is not nil)
  40: 	// TODO: Make the implementation of this watch-based (#56075) once #31345 is fixed.
  41  	Scale(namespace, name string, newSize uint, preconditions *ScalePrecondition, retry, wait *RetryParams, gvr schema.GroupVersionResource, dryRun bool) error

staging\src\k8s.io\kubectl\pkg\util\certificate\certificate.go:
  24  
  25: // TODO(yue9944882): Remove this helper package once it's copied to k/api
  26  

staging\src\k8s.io\kubectl\pkg\util\completion\completion.go:
  268  	o.Verbs = []string{"get"}
  269: 	// TODO:Should set --request-timeout=5s
  270  

staging\src\k8s.io\kubectl\pkg\util\deployment\deployment.go:
  135  
  136: // TODO: switch this to full namespacers
  137  type rsListFunc func(string, metav1.ListOptions) ([]*appsv1.ReplicaSet, error)

  143  func listReplicaSets(deployment *appsv1.Deployment, getRSList rsListFunc, chunkSize *int64) ([]*appsv1.ReplicaSet, error) {
  144: 	// TODO: Right now we list replica sets by their labels. We should list them by selector, i.e. the replica set's selector
  145  	//       should be a superset of the deployment's selector, see https://github.com/kubernetes/kubernetes/issues/19830.

staging\src\k8s.io\kubectl\pkg\util\fieldpath\fieldpath.go:
  27  
  28: // TODO(yue9944882): Remove this helper package once it's copied to k/apimachinery
  29  

staging\src\k8s.io\kubectl\pkg\util\i18n\i18n.go:
  105  	klog.V(3).Infof("Setting language to %s", langStr)
  106: 	// TODO: list the directory and load all files.
  107  	buf := new(bytes.Buffer)

staging\src\k8s.io\kubectl\pkg\util\podutils\podutils.go:
  105  	}
  106: 	// TODO: take availability into account when we push minReadySeconds information from deployment into pods,
  107  	//       see https://github.com/kubernetes/kubernetes/issues/22065

  144  	}
  145: 	// TODO: take availability into account when we push minReadySeconds information from deployment into pods,
  146  	//       see https://github.com/kubernetes/kubernetes/issues/22065

staging\src\k8s.io\kubectl\pkg\util\storage\storage.go:
  24  
  25: // TODO(yue9944882): Remove this helper package once it's copied to k/api
  26  

staging\src\k8s.io\kubelet\config\v1beta1\types.go:
  549  	// Warning: Please match the value of the corresponding parameter in kube-proxy.
  550: 	// TODO: clean up IPTablesMasqueradeBit in kube-proxy.
  551  	// Default: 14

staging\src\k8s.io\legacy-cloud-providers\aws\aws_loadbalancer.go:
   176  		// We are supposed to specify one subnet per AZ.
   177: 		// TODO: What happens if we have more than one subnet per AZ?
   178  		createRequest.SubnetMappings = createSubnetMappings(subnetIDs, allocationIDs)

   204  	} else {
   205: 		// TODO: Sync internal vs non-internal
   206  

   807  
   808: 	// TODO(@M00nF1sh): do we really needs to support SG without cluster tag at current version?
   809  	// findSecurityGroupForInstance might return SG that are not tagged.

   991  		// We are supposed to specify one subnet per AZ.
   992: 		// TODO: What happens if we have more than one subnet per AZ?
   993  		if subnetIDs == nil {

  1040  	} else {
  1041: 		// TODO: Sync internal vs non-internal
  1042  

staging\src\k8s.io\legacy-cloud-providers\aws\aws_routes.go:
   35  	// and something is broken if cluster name doesn't match, but anyway...
   36: 	// TODO: All clouds should be cluster-aware by default
   37  	var tables []*ec2.RouteTable

  190  	request := &ec2.CreateRouteInput{}
  191: 	// TODO: use ClientToken for idempotency?
  192  	request.DestinationCidrBlock = aws.String(route.DestinationCIDR)

staging\src\k8s.io\legacy-cloud-providers\aws\aws.go:
   314  // DefaultVolumeType specifies which storage to use for newly created Volumes
   315: // TODO: Remove when user/admin can configure volume types and thus we don't
   316  // need hardcoded defaults.

   330  // Note that the DescribeX functions return a list, so callers don't need to deal with paging
   331: // TODO: Should we rename this to AWS (EBS & ELB are not technically part of EC2)
   332  type EC2 interface {

   484  // Volumes is an interface for managing cloud-provisioned volumes
   485: // TODO: Allow other clouds to implement this
   486  type Volumes interface {

   520  // InstanceGroups is an interface for managing cloud-managed instance groups / autoscaling instance groups
   521: // TODO: Allow other clouds to implement this
   522  type InstanceGroups interface {

   591  	Global struct {
   592: 		// TODO: Is there any use for this?  We can get it from the instance metadata service
   593  		// Maybe if we're not running on AWS, e.g. bootstrap; for now it is not very useful

  1372  	} else {
  1373: 		// TODO: Clean up double-API query
  1374  		info, err := awsCloud.selfAWSInstance.describeInstance()

  1449  // InstancesV2 returns an implementation of InstancesV2 for Amazon Web Services.
  1450: // TODO: implement ONLY for external cloud provider
  1451  func (c *Cloud) InstancesV2() (cloudprovider.InstancesV2, bool) {

  1612  
  1613: 	// TODO: Other IP addresses (multiple ips)?
  1614  	publicIPAddress := aws.StringValue(instance.PublicIpAddress)

  1778  
  1779: 	// TODO: Caching / expose v1.Nodes to the cloud provider?
  1780: 	// TODO: We could also query for subnets, I think
  1781  

  2438  			attachEnded = true
  2439: 			// TODO: Check if the volume was concurrently attached?
  2440  			return "", wrapAttachError(err, disk, awsInstance.awsID)

  2508  		klog.Warningf("DetachDisk called on non-attached disk: %s", diskName)
  2509: 		// TODO: Continue?  Tolerate non-attached error from the AWS DetachVolume call?
  2510  	}

  3168  
  3169: 	// TODO: There is a limit in VPC of 100 rules per security group, so we
  3170  	// probably should try grouping or combining to fit under this limit.

  4065  
  4066: 		// TODO: Wait for creation?
  4067  		return v2toStatus(v2LoadBalancer), nil

  4314  
  4315: 	// TODO: Wait for creation?
  4316  

  4353  func (c *Cloud) GetLoadBalancerName(ctx context.Context, clusterName string, service *v1.Service) string {
  4354: 	// TODO: replace DefaultLoadBalancerName to generate more meaningful loadbalancer names.
  4355  	return cloudprovider.DefaultLoadBalancerName(service)

  4665  		if err != nil {
  4666: 			// TODO: Check if error was because load balancer was concurrently deleted
  4667  			klog.Errorf("Error deleting load balancer: %q", err)

  4907  
  4908: // TODO: Move to instanceCache
  4909  func (c *Cloud) describeInstances(filters []*ec2.Filter) ([]*ec2.Instance, error) {

staging\src\k8s.io\legacy-cloud-providers\aws\instances.go:
  150  type instanceCache struct {
  151: 	// TODO: Get rid of this field, send all calls through the instanceCache
  152  	cloud *Cloud

staging\src\k8s.io\legacy-cloud-providers\aws\retry_handler.go:
  165  	// (i.e. we apply a linear delay function)
  166: 	// TODO: This is pretty arbitrary
  167  	delay := time.Nanosecond * time.Duration(float32(b.maxDelay.Nanoseconds())*errorFraction)

staging\src\k8s.io\legacy-cloud-providers\azure\azure_standard.go:
  611  // returns a list of private ips assigned to node
  612: // TODO (khenidak): This should read all nics, not just the primary
  613  // allowing users to split ipv4/v6 on multiple nics

staging\src\k8s.io\legacy-cloud-providers\azure\azure_test.go:
  2128  
  2129: // TODO include checks for other appropriate default config parameters
  2130  func validateEmptyConfig(t *testing.T, config string) {

staging\src\k8s.io\legacy-cloud-providers\azure\azure_vmss.go:
  541  // returns a list of private ips assigned to node
  542: // TODO (khenidak): This should read all nics, not just the primary
  543  // allowing users to split ipv4/v6 on multiple nics

  890  	// Fix interface's location, which is required when updating the interface.
  891: 	// TODO: is this a bug of azure SDK?
  892  	if nic.Location == nil || *nic.Location == "" {

staging\src\k8s.io\legacy-cloud-providers\azure\azure.go:
  311  	// Refer https://github.com/Azure/go-autorest/issues/398.
  312: 	// TODO(feiskyer): Use autorest.SendDecorator to customize the retry policy when new Azure SDK is available.
  313  	statusCodesForRetry := make([]int, 0)

  412  		// No credentials provided, useInstanceMetadata should be enabled for Kubelet.
  413: 		// TODO(feiskyer): print different error message for Kubelet and controller-manager, as they're
  414  		// requiring different credential settings.

  577  	publicIPClientConfig := azClientConfig.WithRateLimiter(az.Config.PublicIPAddressRateLimit)
  578: 	// TODO(ZeroMagic): add azurefileRateLimit
  579  	fileClientConfig := azClientConfig.WithRateLimiter(nil)

  689  // InstancesV2 returns an instancesV2 interface. Also returns true if the interface is supported, false otherwise.
  690: // TODO: implement ONLY for external cloud provider
  691  func (az *Cloud) InstancesV2() (cloudprovider.InstancesV2, bool) {

staging\src\k8s.io\legacy-cloud-providers\gce\gce_clusters.go:
  42  		}
  43: 		// TODO: Scoping?  Do we need to qualify the cluster name?
  44  		allClusters = append(allClusters, clusters...)

  93  func (g *Cloud) getClustersInLocation(zoneOrRegion string) ([]*container.Cluster, error) {
  94: 	// TODO: Issue/68913 migrate metric to list_location instead of list_zone.
  95  	mc := newClustersMetricContext("list_zone", zoneOrRegion)
  96: 	// TODO: use PageToken to list all not just the first 500
  97  	location := getLocationName(g.projectID, zoneOrRegion)

staging\src\k8s.io\legacy-cloud-providers\gce\gce_disks_test.go:
  37  
  38: // TODO TODO write a test for GetDiskByNameUnknownZone and make sure casting logic works
  39: // TODO TODO verify that RegionDisks.Get does not return non-replica disks
  40  

staging\src\k8s.io\legacy-cloud-providers\gce\gce_healthchecks.go:
  40  	// GCE cloud provider which is required as part of the out-of-tree cloud provider efforts.
  41: 	// TODO: use a shared constant once ports in pkg/cluster/ports are in a common external repo.
  42  	lbNodesHealthCheckPort = 10256

staging\src\k8s.io\legacy-cloud-providers\gce\gce_instancegroup.go:
   92  	mc := newInstanceGroupMetricContext("add_instances", zone)
   93: 	// TODO: should cull operation above this layer.
   94  	if len(instanceRefs) == 0 {

  109  	mc := newInstanceGroupMetricContext("remove_instances", zone)
  110: 	// TODO: should cull operation above this layer.
  111  	if len(instanceRefs) == 0 {

staging\src\k8s.io\legacy-cloud-providers\gce\gce_instances.go:
  433  //
  434: // TODO: this should be removed from the cloud provider.
  435  func (g *Cloud) GetAllZonesFromCloudProvider() (sets.String, error) {

  462  // This method should only be used for e2e testing.
  463: // TODO: remove this method.
  464  func (g *Cloud) ListInstanceNames(project, zone string) (string, error) {

  724  
  725: 	// TODO: We could store the tags in gceInstance, so we could have already fetched it
  726  	hostNamesByZone := make(map[string]map[string]bool) // map of zones -> map of names -> bool (for easy lookup)

staging\src\k8s.io\legacy-cloud-providers\gce\gce_interfaces.go:
  34  	DeleteRegionAddress(name, region string) error
  35: 	// TODO: Mock Global endpoints
  36  

  45  // CloudForwardingRuleService is an interface for managing forwarding rules.
  46: // TODO: Expand the interface to include more methods.
  47  type CloudForwardingRuleService interface {

staging\src\k8s.io\legacy-cloud-providers\gce\gce_loadbalancer_external_test.go:
  430  
  431: 	// TODO: when testify is updated to v1.2.0+, use ElementsMatch instead
  432  	assert.Contains(

staging\src\k8s.io\legacy-cloud-providers\gce\gce_loadbalancer_external.go:
    91  	klog.V(4).Infof("ensureExternalLoadBalancer(%s): Desired network tier %q.", lbRefStr, netTier)
    92: 	// TODO: distinguish between unspecified and specified network tiers annotation properly in forwardingrule creation
    93  	// Only delete ForwardingRule when network tier annotation is specified, otherwise leave it only to avoid wrongful

   129  	// creating of the LB.
   130: 	// TODO(#36535): boil this logic down into a set of component functions
   131  	// and key the flag values off of errors returned.

   762  	// check that we're actually using it.
   763: 	// TODO: we report loadbalancer IP through status, so we want to verify if
   764  	// that matches the forwarding rule as well.

   799  	}
   800: 	// TODO: If the user modifies their Service's session affinity, it *should*
   801  	// reflect in the associated target pool. However, currently not setting the

  1042  			{
  1043: 				// TODO: Make this more generic. Currently this method is only
  1044  				// used to create firewall rules for loadbalancers, which have

  1155  	// properly gated.
  1156: 	// TODO(#51665): Re-evaluate the "ownership" of the IP address to ensure
  1157  	// we don't release IP unintentionally.

staging\src\k8s.io\legacy-cloud-providers\gce\gce_loadbalancer_internal.go:
  430  	}
  431: 	// TODO(84821) Remove legacyFwName logic after 3 releases, so there would have been atleast 2 master upgrades that would
  432  	// have triggered service sync and deletion of the legacy rules.

staging\src\k8s.io\legacy-cloud-providers\gce\gce_loadbalancer_utils_test.go:
  43  
  44: // TODO(yankaiz): Create shared error types for both test/non-test codes.
  45  const (

staging\src\k8s.io\legacy-cloud-providers\gce\gce_loadbalancer.go:
  123  func (g *Cloud) GetLoadBalancerName(ctx context.Context, clusterName string, svc *v1.Service) string {
  124: 	// TODO: replace DefaultLoadBalancerName to generate more meaningful loadbalancer names.
  125  	return cloudprovider.DefaultLoadBalancerName(svc)

staging\src\k8s.io\legacy-cloud-providers\gce\gce_networkendpointgroup.go:
  62  	mc := newNetworkEndpointGroupMetricContext("aggregated_list", "")
  63: 	// TODO: filter for the region the cluster is in.
  64  	all, err := g.c.BetaNetworkEndpointGroups().AggregatedList(ctx, filter.None)

staging\src\k8s.io\legacy-cloud-providers\gce\gce_routes.go:
  56  		target := path.Base(r.NextHopInstance)
  57: 		// TODO: Should we lastComponent(target) this?
  58  		targetNodeName := types.NodeName(target) // NodeName == Instance Name on GCE

  79  	cr := &compute.Route{
  80: 		// TODO(thockin): generate a unique name for node + route cidr. Don't depend on name hints.
  81  		Name:            truncateClusterName(clusterName) + "-" + nameHint,

staging\src\k8s.io\legacy-cloud-providers\gce\gce.go:
  175  // ConfigGlobal is the in memory representation of the gce.conf config data
  176: // TODO: replace gcfg with json
  177  type ConfigGlobal struct {

  887  func getZonesForRegion(svc *compute.Service, projectID, region string) ([]string, error) {
  888: 	// TODO: use PageToken to list all not just the first 500
  889  	listCall := svc.Zones.List(projectID)

staging\src\k8s.io\legacy-cloud-providers\gce\support.go:
  50  //
  51: // TODO: the current cloud provider policy doesn't seem to be correct as it
  52  // only rate limits the polling operations, but not the /submission/ of

staging\src\k8s.io\legacy-cloud-providers\gce\gcpcredential\gcpcredential.go:
  82  		} else {
  83: 			// TODO(mattmoor): support reading alternate scheme URLs (e.g. gs:// or s3://)
  84  			klog.Errorf("Unsupported URL scheme: %s", string(url))

staging\src\k8s.io\legacy-cloud-providers\vsphere\credentialmanager_test.go:
  212  
  213: 	// TODO: replace 0 with NoResyncPeriodFunc() once it moved out pkg/controller/controller_utils.go in k/k.
  214  	informerFactory := informers.NewSharedInformerFactory(client, 0)

staging\src\k8s.io\legacy-cloud-providers\vsphere\nodemanager.go:
  52  type NodeManager struct {
  53: 	// TODO: replace map with concurrent map when k8s supports go v1.9
  54  

  76  
  77: // TODO: Make it configurable in vsphere.conf
  78  const (

staging\src\k8s.io\legacy-cloud-providers\vsphere\vsphere_test.go:
  975  
  976: 	// todo: Deleting a volume after detach currently not working through API or UI (vSphere)
  977  	// err = vs.DeleteVolume(volPath)

staging\src\k8s.io\legacy-cloud-providers\vsphere\vsphere.go:
  585  // InstancesV2 returns an implementation of InstancesV2 for vSphere.
  586: // TODO: implement ONLY for external cloud provider
  587  func (vs *VSphere) InstancesV2() (cloudprovider.InstancesV2, bool) {

staging\src\k8s.io\legacy-cloud-providers\vsphere\vclib\connection.go:
  92  func (connection *VSphereConnection) Signer(ctx context.Context, client *vim25.Client) (*sts.Signer, error) {
  93: 	// TODO: Add separate fields for certificate and private-key.
  94  	// For now we can leave the config structs and validation as-is and

staging\src\k8s.io\legacy-cloud-providers\vsphere\vclib\datastore_test.go:
  74  
  75: 		// TODO: test Datastore.IsCompatibleWithStoragePolicy (vcsim needs PBM support)
  76  

staging\src\k8s.io\metrics\pkg\client\custom_metrics\discovery.go:
  63  func (d *apiVersionsFromDiscovery) fetchVersions() (*metav1.APIGroup, error) {
  64: 	// TODO(directxman12): amend the discovery interface to ask for a particular group (/apis/foo)
  65  	groups, err := d.client.ServerGroups()

staging\src\k8s.io\mount-utils\mount_helper_unix.go:
  180  // PathExists returns true if the specified path exists.
  181: // TODO: clean this up to use pkg/util/file/FileExists
  182  func PathExists(path string) (bool, error) {

staging\src\k8s.io\mount-utils\mount_helper_windows.go:
   99  // PathExists returns true if the specified path exists.
  100: // TODO: clean this up to use pkg/util/file/FileExists
  101  func PathExists(path string) (bool, error) {

staging\src\k8s.io\mount-utils\mount.go:
  16  
  17: // TODO(thockin): This whole pkg is pretty linux-centric.  As soon as we have
  18  // an alternate platform, we will need to abstract further.

staging\src\k8s.io\pod-security-admission\admission\admission.go:
  514  		if !warnResult.Allowed {
  515: 			// TODO: Craft a better user-facing warning message
  516  			response.Warnings = append(response.Warnings, fmt.Sprintf(

  631  func isSignificantPodUpdate(pod, oldPod *corev1.Pod) bool {
  632: 	// TODO: invert this logic to only allow specific update types.
  633  	if len(pod.Spec.Containers) != len(oldPod.Spec.Containers) {

  671  	}
  672: 	// TODO(saschagrunert): Remove this logic in 1.27.
  673  	seccompKey := corev1.SeccompContainerAnnotationKeyPrefix + container.Name

  680  	}
  681: 	// TODO: consider optimizing to O(1) lookup
  682  	return containsString(namespace, a.Configuration.Exemptions.Namespaces)

  687  	}
  688: 	// TODO: consider optimizing to O(1) lookup
  689  	return containsString(username, a.Configuration.Exemptions.Usernames)

  694  	}
  695: 	// TODO: consider optimizing to O(1) lookup
  696  	return containsString(*runtimeClass, a.Configuration.Exemptions.RuntimeClasses)

staging\src\k8s.io\pod-security-admission\admission\api\helpers.go:
  27  
  28: // TODO: deduplicate against PolicyToEvaluate
  29  func ToPolicy(defaults PodSecurityDefaults) (policyapi.Policy, error) {

staging\src\k8s.io\pod-security-admission\test\fixtures_restrictedVolumes.go:
  40  
  41: 						// TODO: Uncomment this volume when CSIInlineVolume hits GA.
  42  						// {Name: "volume7", VolumeSource: corev1.VolumeSource{CSI: &corev1.CSIVolumeSource{Driver: "inline.storage.kubernetes.io",VolumeAttributes: map[string]string{"foo": "bar"}}}},
  43  
  44: 						// TODO: Uncomment this volume when Ephemeral hits GA.
  45  						// {Name: "volume8", VolumeSource: corev1.VolumeSource{Ephemeral: &corev1.EphemeralVolumeSource{VolumeClaimTemplate: nil}}},

staging\src\k8s.io\pod-security-admission\test\fixtures_windowsHostProcess.go:
  81  	)
  82: 	// TODO: register another set of fixtures with passing test cases that explicitly set hostProcess=false at pod and container level once hostProcess is GA
  83  }

staging\src\k8s.io\pod-security-admission\test\run.go:
  155  
  156: 	// TODO: consider exposing an option to test all versions instead of sparse ones
  157  

staging\src\k8s.io\sample-apiserver\pkg\apis\wardle\install\roundtrip_test.go:
  27  	roundtrip.RoundTripTestForAPIGroup(t, Install, wardlefuzzer.Funcs)
  28: 	// TODO: enable protobuf generation for the sample-apiserver
  29  	// roundtrip.RoundTripProtobufTestForAPIGroup(t, Install, wardlefuzzer.Funcs)

staging\src\k8s.io\sample-apiserver\pkg\apis\wardle\v1alpha1\register.go:
  31  var (
  32: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  33  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\sample-apiserver\pkg\apis\wardle\v1beta1\register.go:
  32  	// SchemeBuilder allows to add this group to a scheme.
  33: 	// TODO: move SchemeBuilder with zz_generated.deepcopy.go to k8s.io/api.
  34  	// localSchemeBuilder and AddToScheme will stay in k8s.io/kubernetes.

staging\src\k8s.io\sample-apiserver\pkg\apiserver\apiserver.go:
  46  	// we need to add the options to empty v1
  47: 	// TODO fix the server code to avoid this
  48  	metav1.AddToGroupVersion(Scheme, schema.GroupVersion{Version: "v1"})
  49  
  50: 	// TODO: keep the generic API server from wanting this
  51  	unversioned := schema.GroupVersion{Group: "", Version: "v1"}

staging\src\k8s.io\sample-apiserver\pkg\cmd\server\start.go:
  120  func (o *WardleServerOptions) Config() (*apiserver.Config, error) {
  121: 	// TODO have a "real" external address
  122  	if err := o.RecommendedOptions.SecureServing.MaybeDefaultWithSelfSignedCerts("localhost", o.AlternateDNS, []net.IP{netutils.ParseIPSloppy("127.0.0.1")}); err != nil {

staging\src\k8s.io\sample-apiserver\pkg\generated\informers\externalversions\generic.go:
  52  // ForResource gives generic access to a shared informer of the matching type
  53: // TODO extend this to unknown resources with a client pool
  54  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

staging\src\k8s.io\sample-apiserver\pkg\registry\wardle\fischer\etcd.go:
  41  
  42: 		// TODO: define table converter that exposes more than name/creation timestamp
  43  		TableConvertor: rest.NewDefaultTableConvertor(wardle.Resource("fischers")),

staging\src\k8s.io\sample-apiserver\pkg\registry\wardle\flunder\etcd.go:
  41  
  42: 		// TODO: define table converter that exposes more than name/creation timestamp
  43  		TableConvertor: rest.NewDefaultTableConvertor(wardle.Resource("flunders")),

staging\src\k8s.io\sample-controller\pkg\generated\informers\externalversions\generic.go:
  51  // ForResource gives generic access to a shared informer of the matching type
  52: // TODO extend this to unknown resources with a client pool
  53  func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {

test\e2e\e2e_test.go:
  129  
  130: 	// TODO: Deprecating repo-root over time... instead just use gobindata_util.go , see #23987.
  131  	// Right now it is still needed, for example by

test\e2e\e2e.go:
  115  	if framework.TestContext.ReportDir != "" {
  116: 		// TODO: we should probably only be trying to create this directory once
  117  		// rather than once-per-Ginkgo-node.

  131  // This unequivocally identifies the default IP family because services are single family
  132: // TODO: dual-stack may support multiple families per service
  133  // but we can detect if a cluster is dual stack because pods have two addresses (one per family)

  240  	podStartupTimeout := framework.TestContext.SystemPodsStartupTimeout
  241: 	// TODO: In large clusters, we often observe a non-starting pods due to
  242  	// #41007. To avoid those pods preventing the whole test runs (and just

  300  
  301: // TODO: These should really just use the GCE API client library or at least use
  302  // better formatted output from the --format flag.

  392  	// allows to adapt those tests to work on both IPv4 and IPv6
  393: 	// TODO: dual-stack
  394  	// the dual stack clusters can be ipv4-ipv6 or ipv6-ipv4, order matters,

test\e2e\apimachinery\crd_conversion_webhook.go:
  446  	//
  447: 	// TODO: we have to wait for the storage version to become effective. Storage version changes are not instant.
  448  	for i := 0; i < 5; i++ {

test\e2e\apimachinery\crd_publish_openapi.go:
   98  
   99: 		// TODO: server-side validation and client-side validation produce slightly different error messages.
  100  		// Because server-side is default in beta but not GA yet, we will produce different behaviors in the default vs GA only conformance tests. We have made the error generic enough to pass both, but should go back and make the error more specific once server-side validation goes GA.

  109  
  110: 		// TODO: see above note, we should check the value of the error once server-side validation is GA.
  111  		ginkgo.By("kubectl validation (kubectl create and apply) rejects request without required properties")

test\e2e\apimachinery\garbage_collector.go:
  682  		// default client QPS is 20, deleting each pod requires 2 requests, so 30s should be enough
  683: 		// TODO: 30s is enough assuming immediate processing of dependents following
  684  		// owner deletion, but in practice there can be a long delay between owner

  728  
  729: 	// TODO: this should be an integration test
  730  	/*

  786  		ginkgo.By("wait for the rc to be deleted")
  787: 		// TODO: shorten the timeout when we make GC's periodic API rediscovery more efficient.
  788  		// Tracked at https://github.com/kubernetes/kubernetes/issues/50046.

  842  
  843: 	// TODO: should be an integration test
  844  	/*

  886  		var err2 error
  887: 		// TODO: shorten the timeout when we make GC's periodic API rediscovery more efficient.
  888  		// Tracked at https://github.com/kubernetes/kubernetes/issues/50046.

test\e2e\apimachinery\webhook.go:
  1160  			f.UniqueName:          "true",
  1161: 			// TODO(https://github.com/kubernetes/kubernetes/issues/108298): route namespace creation via framework.Framework.CreateNamespace in 1.24
  1162  			admissionapi.EnforceLevelLabel: string(admissionapi.LevelRestricted),

  2379  				f.UniqueName + "-markers": "true",
  2380: 				// TODO(https://github.com/kubernetes/kubernetes/issues/108298): route namespace creation via framework.Framework.CreateNamespace in 1.24
  2381  				admissionapi.EnforceLevelLabel: string(admissionapi.LevelRestricted),

test\e2e\apps\daemon_restart.go:
  288  		// Only check the keys, the pods can be different if the kubelet updated it.
  289: 		// TODO: Can it really?
  290  		existingKeys := sets.NewString()

test\e2e\apps\daemon_set.go:
  502  
  503: 	// TODO: This test is expected to be promoted to conformance after the feature is promoted
  504  	ginkgo.It("should surge pods onto nodes when spec was updated and update strategy is RollingUpdate", func() {

test\e2e\apps\deployment.go:
  170  	})
  171: 	// TODO: add tests that cover deployment.Spec.MinReadySeconds once we solved clock-skew issues
  172  	// See https://github.com/kubernetes/kubernetes/issues/29229

test\e2e\apps\rc.go:
  470  	// Check that pods for the new RC were created.
  471: 	// TODO: Maybe switch PodsCreated to just check owner references.
  472  	pods, err := e2epod.PodsCreated(f.ClientSet, f.Namespace.Name, name, replicas)

test\e2e\apps\replica_set.go:
  196  	// Check that pods for the new RS were created.
  197: 	// TODO: Maybe switch PodsCreated to just check owner references.
  198  	pods, err := e2epod.PodsCreated(f.ClientSet, f.Namespace.Name, name, replicas)

test\e2e\apps\statefulset.go:
  1439  	cmd = fmt.Sprintf("/usr/bin/mysql -u root -B -e '%v'", cmd)
  1440: 	// TODO: Find a readiness probe for mysql that guarantees writes will
  1441  	// succeed and ditch retries. Current probe only reads, so there's a window

  1754  func getStatefulSetPodNameAtIndex(index int, ss *appsv1.StatefulSet) string {
  1755: 	// TODO: we won't use "-index" as the name strategy forever,
  1756  	// pull the name out from an identity mapper.

test\e2e\autoscaling\cluster_size_autoscaling.go:
   616  
   617: 			// TODO: possibly remove broken node from newNodesSet to prevent removeLabel from crashing.
   618  			// However at this moment we DO WANT it to crash so that we don't check all test runs for the

   662  		// this issue.
   663: 		// TODO: Remove the extra time when GKE restart is fixed.
   664  		framework.ExpectNoError(e2enode.WaitForReadyNodes(c, nodeCount+extraNodes+1, scaleUpTimeout+5*time.Minute))

   713  		// this issue.
   714: 		// TODO: Remove the extra time when GKE restart is fixed.
   715  		framework.ExpectNoError(WaitForClusterSizeFunc(f.ClientSet,

  1088  	if isRegionalCluster() {
  1089: 		// TODO(bskiba): Use locations API for all clusters once it's graduated to v1.
  1090  		return getGKEURL(apiVersion, fmt.Sprintf("projects/%s/locations/%s/clusters/%s",

  1159  func isRegionalCluster() bool {
  1160: 	// TODO(bskiba): Use an appropriate indicator that the cluster is regional.
  1161  	return framework.TestContext.CloudConfig.MultiZone

  1888  // This is a temporary fix to allow CA to migrate some kube-system pods
  1889: // TODO: Remove this when the PDB is added for some of those components
  1890  func addKubeSystemPdbs(f *framework.Framework) (func(), error) {

test\e2e\autoscaling\custom_metrics_stackdriver_autoscaling.go:
  551  				Operator: metav1.LabelSelectorOpIn,
  552: 				// TODO(bskiba): change default to real namespace name once it is available
  553  				// from Stackdriver.

test\e2e\autoscaling\horizontal_pod_autoscaling.go:
  194  // The second state change (optional) is due to the CPU burst parameter, which HPA again responds to.
  195: // TODO The use of 3 states is arbitrary, we could eventually make this test handle "n" states once this test stabilizes.
  196  func (st *HPAScaleTest) run(name string, kind schema.GroupVersionKind, f *framework.Framework) {

test\e2e\cloud\gcp\addon_update.go:
   42  
   43: // TODO: it would probably be slightly better to build up the objects
   44  // in the code and then serialize to yaml.

  433  
  434: // TODO use the ssh.SSH code, either adding an SCP to it or copying files
  435  // differently.

test\e2e\cloud\gcp\cluster_upgrade.go:
  33  
  34: // TODO: Those tests should be split by SIG and moved to SIG-owned directories,
  35  //

test\e2e\cloud\gcp\node_lease.go:
  84  			//
  85: 			// TODO(cjcullen) reduce this sleep (#19314)
  86  			if framework.ProviderIs("gke") {

test\e2e\cloud\gcp\reboot.go:
  86  		//
  87: 		// TODO(cjcullen) reduce this sleep (#19314)
  88  		if framework.ProviderIs("gke") {

test\e2e\cloud\gcp\resize_nodes.go:
   95  			//
   96: 			// TODO(cjcullen) reduce this sleep (#19314)
   97  			if framework.ProviderIs("gke") {

  143  
  144: 		// TODO: Bug here - testName is not correct
  145  		ginkgo.It("should be able to add nodes", func() {

test\e2e\cloud\gcp\common\upgrade_mechanics.go:
   91  	env := append(os.Environ(), extraEnvs...)
   92: 	// TODO: Remove these variables when they're no longer needed for downgrades.
   93  	if framework.TestContext.EtcdUpgradeVersion != "" && framework.TestContext.EtcdUpgradeStorage != "" {

  169  
  170: // TODO(mrhohn): Remove 'enableKubeProxyDaemonSet' when kube-proxy is run as a DaemonSet by default.
  171  func nodeUpgradeGCE(rawV, img string, extraEnvs []string) error {

  238  	//
  239: 	// TODO(ihmccreery) We shouldn't have to wait for nodes to be ready in
  240  	// GKE; the operation shouldn't return until they all are.

test\e2e\common\util.go:
  38  
  39: // TODO: Cleanup this file.
  40  

  57  // See also updateImageAllowList() in ../../e2e_node/image_list.go
  58: // TODO(random-liu): Change the image puller pod to use similar mechanism.
  59  var PrePulledImages = sets.NewString(

test\e2e\common\node\init_container.go:
   98  	if oldInit && !newInit {
   99: 		// TODO: we may in the future enable resetting initialized = false if the kubelet needs to restart it
  100  		// from scratch

  431  					framework.Logf("init container has failed twice: %#v", t)
  432: 					// TODO: more conditions
  433  					return true, nil

test\e2e\common\node\kubelet_etc_hosts.go:
  104  	config *KubeletManagedHostConfig, podName string, expectedIsManaged bool, name string) {
  105: 	// TODO: workaround for https://github.com/kubernetes/kubernetes/issues/34256
  106  	//

test\e2e\common\node\pods.go:
  465  		// This service exposes port 8080 of the test pod as a service on port 8765
  466: 		// TODO(filbranden): We would like to use a unique service name such as:
  467  		//   svcName := "svc-envvars-" + randomSuffix()

test\e2e\common\node\privileged.go:
  31  // PrivilegedPodTestConfig is configuration struct for privileged pod test
  32: // TODO: Merge with tests in security_context.go
  33  type PrivilegedPodTestConfig struct {

test\e2e\common\storage\downwardapi_volume.go:
  477  
  478: // TODO: add test-webserver example as pointed out in https://github.com/kubernetes/kubernetes/pull/5093#discussion-diff-37606771

test\e2e\common\storage\host_path.go:
   33  
   34: // TODO : Consolidate this code with the code for emptyDir.
   35  // This will require some smart.

   40  	ginkgo.BeforeEach(func() {
   41: 		// TODO permission denied cleanup failures
   42  		//cleanup before running the test.

  149  
  150: // TODO: To merge this with the emptyDir tests, we can make source a lambda.
  151  func testPodWithHostVol(path string, source *v1.HostPathVolumeSource, privileged bool) *v1.Pod {

test\e2e\common\storage\volumes.go:
  55  
  56: // TODO(#99468): Check if these tests are still needed.
  57  var _ = SIGDescribe("Volumes", func() {

test\e2e\framework\framework.go:
  280  			} else {
  281: 				// TODO: learn to extract test name and append it to the kind instead of timestamp.
  282  				filePath := path.Join(TestContext.ReportDir, summaries[i].SummaryKind()+"_"+testBaseName+"_"+now.Format(time.RFC3339)+".txt")

  296  			} else {
  297: 				// TODO: learn to extract test name and append it to the kind instead of timestamp.
  298  				filePath := path.Join(TestContext.ReportDir, summaries[i].SummaryKind()+"_"+testBaseName+"_"+now.Format(time.RFC3339)+".json")

test\e2e\framework\log.go:
  27  	"github.com/onsi/ginkgo/v2"
  28: 	// TODO: Remove the following imports (ref: https://github.com/kubernetes/kubernetes/issues/81245)
  29  )

test\e2e\framework\nodes_util.go:
  21  	if TestContext.CloudConfig.Region != "" {
  22: 		// TODO(wojtek-t): Get rid of it once Regional Clusters go to GA.
  23  		return append([]string{"beta"}, args...)

test\e2e\framework\test_context.go:
   87  	BearerToken        string `datapolicy:"token"`
   88: 	// TODO: Deprecating this over time... instead just use gobindata_util.go , see #23987.
   89  	RepoRoot string

  200  //
  201: // TODO: move this and the corresponding command line flags into
  202  // test/e2e/framework/node.

  332  	flags.StringVar(&TestContext.ImageServiceEndpoint, "image-service-endpoint", "", "The image service endpoint of cluster VM instances.")
  333: 	// TODO: remove the node-role.kubernetes.io/master taint in 1.25 or later.
  334  	// The change will likely require an action for some users that do not

  392  
  393: 	// TODO: Flags per provider?  Rename gce-project/gce-zone?
  394  	cloudConfig := &TestContext.CloudConfig

  493  	// Make sure that all test runs have a valid TestContext.CloudConfig.Provider.
  494: 	// TODO: whether and how long this code is needed is getting discussed
  495  	// in https://github.com/kubernetes/kubernetes/issues/70194.

test\e2e\framework\util.go:
   59  const (
   60: 	// TODO(justinsb): Avoid hardcoding this.
   61  	awsMasterIP = "172.20.0.9"

  385  func CheckTestingNSDeletedExcept(c clientset.Interface, skip string) error {
  386: 	// TODO: Since we don't have support for bulk resource deletion in the API,
  387  	// while deleting a namespace we are deleting all objects from that namespace

test\e2e\framework\debug\dump.go:
  138  		e2emetrics.HighLatencyKubeletOperations(c, 10*time.Second, n, logFunc)
  139: 		// TODO: Log node resource info
  140  	}

test\e2e\framework\debug\log_size_monitoring.go:
  94  // PrintHumanReadable returns string of log size data summary.
  95: // TODO: make sure that we don't need locking here
  96  func (s *LogsSizeDataSummary) PrintHumanReadable() string {

test\e2e\framework\gpu\gpu_util.go:
  24  	// GPUDevicePluginDSYAML is the official Google Device Plugin Daemonset NVIDIA GPU manifest for GKE
  25: 	// TODO: Parametrize it by making it a feature in TestFramework.
  26  	// so we can override the daemonset in other setups (non COS).

test\e2e\framework\ingress\ingress_utils.go:
   75  	// IngressClassKey is ingress class annotation defined in ingress repository.
   76: 	// TODO: All these annotations should be reused from
   77  	// ingress-gce/pkg/annotations instead of duplicating them here.

  604  func (j *TestJig) AddHTTPS(secretName string, hosts ...string) {
  605: 	// TODO: Just create the secret in GetRootCAs once we're watching secrets in
  606  	// the ingress controller.

  688  // getIngressAddressFromKubemci returns the IP address of the given multicluster ingress using kubemci.
  689: // TODO(nikhiljindal): Update this to be able to return hostname as well.
  690  func getIngressAddressFromKubemci(name string) ([]string, error) {

  856  func (j *TestJig) pollServiceNodePort(ns, name string, port int) error {
  857: 	// TODO: Curl all nodes?
  858  	u, err := getPortURL(j.Client, ns, name, port)

test\e2e\framework\kubelet\stats.go:
  526  // FormatResourceUsage returns the formatted string for LogLatest().
  527: // TODO(oomichi): This can be made to local function after making test/e2e/node/kubelet_perf.go use LogLatest directly instead.
  528  func (r *ResourceMonitor) FormatResourceUsage(s ResourceUsagePerNode) string {

test\e2e\framework\kubesystem\kubesystem.go:
  30  func RestartControllerManager() error {
  31: 	// TODO: Make it work for all providers and distros.
  32  	if !framework.ProviderIs("gce", "aws") {

test\e2e\framework\metrics\e2e_metrics.go:
  91  // PrettyPrintJSON converts metrics to JSON format.
  92: // TODO: This function should be replaced with framework.PrettyPrintJSON after solving
  93  // circulary dependency between core framework and this metrics subpackage.

test\e2e\framework\metrics\kubelet_metrics.go:
  116  // KubeletLatencyMetric stores metrics scraped from the kubelet server's /metric endpoint.
  117: // TODO: Get some more structure around the metrics and this type
  118  type KubeletLatencyMetric struct {

test\e2e\framework\network\utils.go:
  331  		}
  332: 		// TODO: get rid of this delay #36281
  333  		time.Sleep(hitEndpointRetryDelay)

  383  			}
  384: 			// TODO: get rid of this delay #36281
  385  			time.Sleep(hitEndpointRetryDelay)

  459  
  460: 	// TODO: This simply tells us that we can reach the endpoints. Check that
  461  	// the probability of hitting a specific endpoint is roughly the same as

  488  
  489: 		// TODO: get rid of this delay #36281
  490  		time.Sleep(hitEndpointRetryDelay)

  811  	// Obtain the primary IP family of the Cluster based on the first ClusterIP
  812: 	// TODO: Eventually we should just be getting these from Spec.IPFamilies
  813  	// but for now that would only if the feature gate is enabled.

test\e2e\framework\node\helper.go:
  103  // framework.TestContext.AllowedNotReadyNodes will bypass the post test node readiness check.
  104: // TODO: we should change the AllNodesReady call in AfterEach to WaitForAllNodesHealthy,
  105  // and figure out how to do it in a configurable way, as we can't expect all setups to run

test\e2e\framework\node\resource.go:
  134  				}
  135: 				// TODO: check if the Node is tainted once we enable NC notReady/unreachable taints by default
  136  				if cond.Status != v1.ConditionTrue {

  431  // isNodeUntainted tests whether a fake pod can be scheduled on "node", given its current taints.
  432: // TODO: need to discuss wether to return bool and error type
  433  func isNodeUntainted(node *v1.Node) bool {

  624  	nodes, err := GetBoundedReadySchedulableNodes(c, maxCount)
  625: 	// TODO use wrapper methods in expect.go after removing core e2e dependency on node
  626  	gomega.ExpectWithOffset(2, err).NotTo(gomega.HaveOccurred())

  638  		}, metav1.CreateOptions{})
  639: 		// TODO use wrapper methods in expect.go after removing core e2e dependency on node
  640  		gomega.ExpectWithOffset(2, err).NotTo(gomega.HaveOccurred())

  656  
  657: 	// TODO use wrapper methods in expect.go after removing core e2e dependency on node
  658  	gomega.ExpectWithOffset(2, err).NotTo(gomega.HaveOccurred())

  663  func AddOrUpdateTaintOnNode(c clientset.Interface, nodeName string, taint v1.Taint) {
  664: 	// TODO use wrapper methods in expect.go after removing the dependency on this
  665  	// package from the core e2e framework.

  747  		// Ignore formatting, only care that numeric value stayed the same.
  748: 		// TODO: if we decide it's important, it should be safe to start comparing the format.
  749  		//

  883  
  884: 	// TODO use wrapper methods in expect.go after removing core e2e dependency on node
  885  	gomega.ExpectWithOffset(2, err).NotTo(gomega.HaveOccurred())

test\e2e\framework\pod\pod_client.go:
  224  // WaitForSuccess waits for pod to succeed.
  225: // TODO(random-liu): Move pod wait function into this file
  226  func (c *PodClient) WaitForSuccess(name string, timeout time.Duration) {

test\e2e\framework\pod\resource.go:
  55  
  56: // TODO: Move to its own subpkg.
  57  // expectNoError checks if "err" is set, and if so, fails assertion while logging the error.

  61  
  62: // TODO: Move to its own subpkg.
  63  // expectNoErrorWithOffset checks if "err" is set, and if so, fails assertion while logging the error at "offset" levels above its caller

test\e2e\framework\pod\utils.go:
   35  // is the one that's parsing the flags, as a workaround this method is looking for the same flag again
   36: // TODO: replace with `framework.NodeOSDistroIs` when #81245 is complete
   37  func NodeOSDistroIs(distro string) bool {

   99  // If the Node OS is windows, currently we will ignore the inputs and return nil.
  100: // TODO: Will modify it after windows has its own security context
  101  func GeneratePodSecurityContext(fsGroup *int64, seLinuxOptions *v1.SELinuxOptions) *v1.PodSecurityContext {

  112  // If the Node OS is windows, currently we will ignore the inputs and return nil.
  113: // TODO: Will modify it after windows has its own security context
  114  func GenerateContainerSecurityContext(privileged bool) *v1.SecurityContext {

  177  // Note that this sets a default RunAsUser. See GetRestrictedPodSecurityContext.
  178: // TODO(#105919): Handle PodOS for windows pods.
  179  func MixinRestrictedPodSecurity(pod *v1.Pod) error {

test\e2e\framework\pod\wait.go:
  87  //
  88: // TODO (@pohly): move this into framework once the refactoring from
  89  // https://github.com/kubernetes/kubernetes/pull/112043 allows it. Right now it

test\e2e\framework\providers\gce\gce.go:
   87  		ManagedZones:       managedZones,
   88: 		NetworkName:        "", // TODO: Change this to use framework.TestContext.CloudConfig.Network?
   89  		SubnetworkName:     "",

  131  func (p *Provider) ResizeGroup(group string, size int32) error {
  132: 	// TODO: make this hit the compute API directly instead of shelling out to gcloud.
  133: 	// TODO: make gce/gke implement InstanceGroups, so we can eliminate the per-provider logic
  134  	zone, err := getGCEZoneForGroup(group)

  148  func (p *Provider) GetGroupNodes(group string) ([]string, error) {
  149: 	// TODO: make this hit the compute API directly instead of shelling out to gcloud.
  150: 	// TODO: make gce/gke implement InstanceGroups, so we can eliminate the per-provider logic
  151  	zone, err := getGCEZoneForGroup(group)

  170  func (p *Provider) GroupSize(group string) (int, error) {
  171: 	// TODO: make this hit the compute API directly instead of shelling out to gcloud.
  172: 	// TODO: make gce/gke implement InstanceGroups, so we can eliminate the per-provider logic
  173  	zone, err := getGCEZoneForGroup(group)

test\e2e\framework\providers\gce\ingress.go:
   56  	// are automatically purged to prevent running out of quota.
   57: 	// TODO(37335): write soak tests and bump this up to a week.
   58  	maxAge = 48 * time.Hour

  440  	gceCloud := cont.Cloud.Provider.(*Provider).gceCloud
  441: 	// TODO: E2E cloudprovider has only 1 zone, but the cluster can have many.
  442  	// We need to poll on all IGs across all zones.

  471  	gceCloud := cont.Cloud.Provider.(*Provider).gceCloud
  472: 	// TODO: E2E cloudprovider has only 1 zone, but the cluster can have many.
  473  	// We need to poll on all NEGs across all zones.

  737  
  738: 	// TODO: Verify instance-groups, issue #16636. Gcloud mysteriously barfs when told
  739  	// to unmarshal instance groups into the current vendored gce-client's understanding

test\e2e\framework\resource\runtimeobj.go:
  127  	case *batchv1.Job:
  128: 		// TODO: currently we use pause pods so that's OK. When we'll want to switch to Pods
  129  		// that actually finish we need a better way to do this.

test\e2e\framework\service\const.go:
  34  	// to not notice a Service update, such as type=NodePort.
  35: 	// TODO: This timeout should be O(10s), observed values are O(1m), 5m is very
  36  	// liberal. Fix tracked in #20567.

  51  	// LoadBalancerCreateTimeoutDefault is the default time to wait for a load balancer to be created/modified.
  52: 	// TODO: once support ticket 21807001 is resolved, reduce this timeout back to something reasonable
  53  	// Hideen - use GetServiceLoadBalancerCreateTimeout function instead.

test\e2e\framework\service\jig.go:
  341  		}
  342: 		// TODO: Handle multiple endpoints
  343  		if len(endpoints.Subsets[0].Addresses) == 0 {

  420  				if es, ok := obj.(*discoveryv1.EndpointSlice); ok {
  421: 					// TODO: currently we only consider addresses in 1 slice, but services with
  422  					// a large number of endpoints (>1000) may have multiple slices. Some slices

  430  				if es, ok := cur.(*discoveryv1.EndpointSlice); ok {
  431: 					// TODO: currently we only consider addresses in 1 slice, but services with
  432  					// a large number of endpoints (>1000) may have multiple slices. Some slices

  599  func (j *TestJig) WaitForLoadBalancerDestroy(ip string, port int, timeout time.Duration) (*v1.Service, error) {
  600: 	// TODO: once support ticket 21807001 is resolved, reduce this timeout back to something reasonable
  601  	defer func() {

  899  // TCP and UDP protocol based service are supported at this moment
  900: // TODO: add support to test SCTP Protocol based services.
  901  func testEndpointReachability(endpoint string, port int32, protocol v1.Protocol, execPod *v1.Pod) error {

test\e2e\framework\statefulset\rest.go:
   97  	pvNames := sets.NewString()
   98: 	// TODO: Don't assume all pvcs in the ns belong to a statefulset
   99  	pvcPollErr := wait.PollImmediate(StatefulSetPoll, StatefulSetTimeout, func() (bool, error) {

  106  			pvNames.Insert(pvc.Spec.VolumeName)
  107: 			// TODO: Double check that there are no pods referencing the pvc
  108  			framework.Logf("Deleting pvc: %v with volume %v", pvc.Name, pvc.Spec.VolumeName)

test\e2e\framework\volume\fixtures.go:
  649  // PodExec runs f.ExecCommandInContainerWithFullOutput to execute a shell cmd in target pod
  650: // TODO: put this under e2epod once https://github.com/kubernetes/kubernetes/issues/81245
  651  // is resolved. Otherwise there will be dependency issue.

  656  // VerifyExecInPodSucceed verifies shell cmd in target pod succeed
  657: // TODO: put this under e2epod once https://github.com/kubernetes/kubernetes/issues/81245
  658  // is resolved. Otherwise there will be dependency issue.

  676  // VerifyExecInPodFail verifies shell cmd in target pod fail with certain exit code
  677: // TODO: put this under e2epod once https://github.com/kubernetes/kubernetes/issues/81245
  678  // is resolved. Otherwise there will be dependency issue.

test\e2e\instrumentation\monitoring\accelerator.go:
  122  		for _, metric := range acceleratorMetrics {
  123: 			// TODO: check only for metrics from this cluster
  124  			ts, err := fetchTimeSeries(projectID, gcmService, metric, start, time.Now())

test\e2e\instrumentation\monitoring\custom_metrics_deployments.go:
  276  // CleanupDescriptors deletes descriptors for metrics: CustomMetricName and UnusedMetricName.
  277: // TODO: Cleanup time series as well
  278  func CleanupDescriptors(service *gcm.Service, projectID string) {

test\e2e\instrumentation\monitoring\custom_metrics_stackdriver.go:
  138  	// Wait a short amount of time to create a pod and export some metrics
  139: 	// TODO: add some events to wait for instead of fixed amount of time
  140  	//       i.e. pod creation, first time series exported

  145  
  146: // TODO(kawych): migrate this test to new resource model
  147  func testExternalMetrics(f *framework.Framework, kubeClient clientset.Interface, externalMetricsClient externalclient.ExternalMetricsClient) {

  186  	// Wait a short amount of time to create a pod and export some metrics
  187: 	// TODO: add some events to wait for instead of fixed amount of time
  188  	//       i.e. pod creation, first time series exported

test\e2e\instrumentation\monitoring\stackdriver.go:
  129  		for _, metric := range stackdriverMetrics {
  130: 			// TODO: check only for metrics from this cluster
  131  			ts, err := fetchTimeSeries(projectID, gcmService, metric, start, time.Now())

test\e2e\kubectl\kubectl.go:
   285  		if err != nil || len(pods) < atLeast {
   286: 			// TODO: Generalize integrating debug info into these tests so we always get debug info when we need it
   287  			e2edebug.DumpAllNamespaceInfo(f.ClientSet, ns)

   689  			e2eskipper.SkipIfProviderIs("gke")
   690: 			// TODO: Find a way to download and copy the appropriate kubectl binary, or maybe a multi-arch kubectl image
   691  			// for now this only works on amd64

  1780  	ginkgo.Describe("Proxy server", func() {
  1781: 		// TODO: test proxy options (static, prefix, etc)
  1782  		/*

test\e2e\kubectl\portforward.go:
  59  
  60: // TODO support other ports besides 80
  61  var (

test\e2e\network\dns_common.go:
  367  
  368: 	// TODO: Consider scraping logs instead of running a webserver.
  369  	dnsPod := e2epod.NewAgnhostPod(namespace, podName, volumes, mounts, nil, "test-webserver")

  513  
  514: 	// TODO: probe from the host, too.
  515  

test\e2e\network\dns.go:
   51  		// All the names we need to be able to resolve.
   52: 		// TODO: Spin up a separate test service and test that dns works for that service.
   53  		// NOTE: This only contains the FQDN and the Host name, for testing partial name, see the test below

   56  		}
   57: 		// TODO: Validate both IPv4 and IPv6 families for dual-stack
   58  		wheezyProbeCmd, wheezyFileNames := createProbeCommand(namesToResolve, nil, "", "wheezy", f.Namespace.Name, framework.TestContext.ClusterDNSDomain, framework.TestContext.ClusterIsIPv6())

   78  
   79: 		// TODO: Validate both IPv4 and IPv6 families for dual-stack
   80  		wheezyProbeCmd, wheezyFileNames := createProbeCommand(namesToResolve, nil, "", "wheezy", f.Namespace.Name, framework.TestContext.ClusterDNSDomain, framework.TestContext.ClusterIsIPv6())

   99  		hostEntries := []string{hostFQDN, dnsTestPodHostName}
  100: 		// TODO: Validate both IPv4 and IPv6 families for dual-stack
  101  		wheezyProbeCmd, wheezyFileNames := createProbeCommand(namesToResolve, hostEntries, "", "wheezy", f.Namespace.Name, framework.TestContext.ClusterDNSDomain, framework.TestContext.ClusterIsIPv6())

  119  		hostEntries := []string{hostFQDN, dnsTestPodHostName}
  120: 		// TODO: Validate both IPv4 and IPv6 families for dual-stack
  121  		wheezyProbeCmd, wheezyFileNames := createProbeCommand(nil, hostEntries, "", "wheezy", f.Namespace.Name, framework.TestContext.ClusterDNSDomain, framework.TestContext.ClusterIsIPv6())

  164  		// All the names we need to be able to resolve.
  165: 		// TODO: Create more endpoints and ensure that multiple A records are returned
  166  		// for headless service.

  172  
  173: 		// TODO: Validate both IPv4 and IPv6 families for dual-stack
  174  		wheezyProbeCmd, wheezyFileNames := createProbeCommand(namesToResolve, nil, regularService.Spec.ClusterIP, "wheezy", f.Namespace.Name, framework.TestContext.ClusterDNSDomain, framework.TestContext.ClusterIsIPv6())

  227  
  228: 		// TODO: Validate both IPv4 and IPv6 families for dual-stack
  229  		wheezyProbeCmd, wheezyFileNames := createProbeCommand(namesToResolve, nil, regularService.Spec.ClusterIP, "wheezy", f.Namespace.Name, framework.TestContext.ClusterDNSDomain, framework.TestContext.ClusterIsIPv6())

  267  		hostNames := []string{hostFQDN, podHostname}
  268: 		// TODO: Validate both IPv4 and IPv6 families for dual-stack
  269  		wheezyProbeCmd, wheezyFileNames := createProbeCommand(nil, hostNames, "", "wheezy", f.Namespace.Name, framework.TestContext.ClusterDNSDomain, framework.TestContext.ClusterIsIPv6())

  310  		namesToResolve := []string{hostFQDN, subdomain}
  311: 		// TODO: Validate both IPv4 and IPv6 families for dual-stack
  312  		wheezyProbeCmd, wheezyFileNames := createProbeCommand(namesToResolve, nil, "", "wheezy", f.Namespace.Name, framework.TestContext.ClusterDNSDomain, framework.TestContext.ClusterIsIPv6())

  387  		}
  388: 		// TODO: For dual stack we can run from here two createTargetedProbeCommand()
  389  		// one looking for an A record and another one for an AAAA record

  524  		ginkgo.By("Verifying customized DNS option is configured on pod...")
  525: 		// TODO: Figure out a better way other than checking the actual resolv,conf file.
  526  		cmd := []string{"cat", "/etc/resolv.conf"}

  568  
  569: 		// TODO: Add more test cases for other DNSPolicies.
  570  	})

  602  
  603: 		// TODO: Validate both IPv4 and IPv6 families for dual-stack
  604  		wheezyProbeCmd, wheezyFileNames := createProbeCommand(namesToResolve, nil, regularService.Spec.ClusterIP, "wheezy", f.Namespace.Name, framework.TestContext.ClusterDNSDomain, framework.TestContext.ClusterIsIPv6())

test\e2e\network\dual_stack.go:
   59  	ginkgo.It("should have ipv4 and ipv6 internal node ip", func() {
   60: 		// TODO (aramase) can switch to new function to get all nodes
   61  		nodeList, err := e2enode.GetReadySchedulableNodes(cs)

  429  	})
  430: 	// TODO (khenidak add slice validation logic, since endpoint controller only operates
  431  	// on primary ClusterIP

test\e2e\network\endpointslice.go:
  337  
  338: 		// TODO: Update test to cover Endpoints recreation after deletes once it
  339  		// actually works.

test\e2e\network\fixture.go:
  140  		}
  141: 		// TODO(mikedanese): Wait.
  142  		// Then, delete the RC altogether.

test\e2e\network\ingress.go:
  85  	// Slow by design ~10m for each "It" block dominated by loadbalancer setup time
  86: 	// TODO: write similar tests for nginx, haproxy and AWS Ingress.
  87  	ginkgo.Describe("GCE [Slow] [Feature:Ingress]", func() {

test\e2e\network\loadbalancer.go:
  1352  
  1353: 		// TODO: We need to attempt to create another service with the previously
  1354  		// allocated healthcheck nodePort. If the health check nodePort has been

test\e2e\network\network_tiers.go:
  216  
  217: // TODO: add retries if this turns out to be flaky.
  218  func reserveRegionalAddress(cloud *gcecloud.Cloud, name string, netTier cloud.NetworkTier) (string, error) {

test\e2e\network\networking.go:
  115  			{path: "/version"},
  116: 			// TODO: test proxy links here
  117  		}

  132  	ginkgo.It("should check kube-proxy urls", func() {
  133: 		// TODO: this is overkill we just need the host networking pod
  134  		// to hit kube-proxy urls.

test\e2e\network\proxy.go:
  215  
  216: 				// TODO: below entries don't work, but I believe we should make them work.
  217  				// podPrefix + ":dest1": "foo",

  574  func nodeProxyTest(f *framework.Framework, prefix, nodeDest string) {
  575: 	// TODO: investigate why it doesn't work on master Node.
  576  	node, err := e2enode.GetRandomReadySchedulableNode(f.ClientSet)

  578  
  579: 	// TODO: Change it to test whether all requests succeeded when requests
  580  	// not reaching Kubelet issue is debugged.

test\e2e\network\service.go:
   346  		framework.Logf("Executing cmd %q in pod %v/%v", cmd, ns, podName)
   347: 		// TODO: Use exec-over-http via the netexec pod instead of kubectl exec.
   348  		output, err := e2eoutput.RunHostCmd(ns, podName, cmd)

   368  			}
   369: 			// TODO: simply checking that the retrieved endpoints is a superset
   370  			// of the expected allows us to ignore intermitten network flakes that

   776  
   777: 	// TODO: We get coverage of TCP/UDP and multi-port services through the DNS test. We should have a simpler test for multi-port TCP here.
   778  

  1222  
  1223: 		// TODO: use the ServiceTestJig here
  1224  		ns := f.Namespace.Name

  1261  
  1262: 		// TODO: use the ServiceTestJig here
  1263  		ns := f.Namespace.Name

  1601  	ginkgo.It("should prevent NodePort collisions", func() {
  1602: 		// TODO: use the ServiceTestJig here
  1603  		baseName := "nodeport-collision-"

  1655  	ginkgo.It("should check NodePort out-of-range", func() {
  1656: 		// TODO: use the ServiceTestJig here
  1657  		serviceName := "nodeport-range-test"

  1722  	ginkgo.It("should release NodePorts on delete", func() {
  1723: 		// TODO: use the ServiceTestJig here
  1724  		serviceName := "nodeport-reuse"

  2523  		// windows kube-proxy does not support this feature yet
  2524: 		// TODO: remove this skip when windows-based proxies implement internalTrafficPolicy
  2525  		e2eskipper.SkipIfNodeOSDistroIs("windows")

  2601  		// windows kube-proxy does not support this feature yet
  2602: 		// TODO: remove this skip when windows-based proxies implement internalTrafficPolicy
  2603  		e2eskipper.SkipIfNodeOSDistroIs("windows")

  2681  		// windows kube-proxy does not support this feature yet
  2682: 		// TODO: remove this skip when windows-based proxies implement internalTrafficPolicy
  2683  		e2eskipper.SkipIfNodeOSDistroIs("windows")

  3774  			// Ref: https://github.com/torvalds/linux/blob/master/net/netfilter/ipvs/ip_vs_proto_tcp.c
  3775: 			// TODO: remove this to speed up testing when IPVS does really respect session affinity timeout
  3776  			svcSessionAffinityTimeout = int32(125)

  3841  			// so we sleep 'svcSessionAffinityTimeout+5' seconds to avoid this issue.
  3842: 			// TODO: figure out why the expired connection didn't be deleted and fix this issue in ipvs side.
  3843  			time.Sleep(time.Duration(svcSessionAffinityTimeout+5) * time.Second)

test\e2e\network\netpol\network_policy.go:
  968  			err := k8s.cleanNetworkPolicies()
  969: 			time.Sleep(3 * time.Second) // TODO we can remove this eventually, its just a hack to keep CI stable.
  970  			framework.ExpectNoError(err, "unable to clean network policies")

  976  
  977: 		// TODO, figure out how the next 3 tests should work with dual stack : do we need a different abstraction then just "podIP"?
  978  

test\e2e\network\netpol\probe.go:
  110  
  111: 		// TODO make this work on dual-stack clusters...
  112  		connected, command, err := prober.probeConnectivity(&probeConnectivityArgs{

test\e2e\network\scale\ingress.go:
  325  // GetFormattedLatencies returns the formatted latencies output.
  326: // TODO: Need a better way/format for data output.
  327  func (f *IngressScaleFramework) GetFormattedLatencies() string {

test\e2e\network\scale\localrun\ingress_scale.go:
  137  			Labels: map[string]string{
  138: 				// TODO(https://github.com/kubernetes/kubernetes/issues/108298): route namespace creation via framework.Framework.CreateNamespace in 1.24
  139  				admissionapi.EnforceLevelLabel: string(admissionapi.LevelPrivileged),

test\e2e\node\kubelet_perf.go:
   73  
   74: 	// TODO: Use a more realistic workload
   75  	err := e2erc.RunRC(testutils.RCConfig{

  109  	framework.ExpectNoError(err)
  110: 	// TODO(random-liu): Remove the original log when we migrate to new perfdash
  111  	framework.Logf("%s", rm.FormatResourceUsage(usageSummary))

  235  		//
  236: 		// TODO(#36621): Deprecate this test once we have a node e2e soak
  237  		// cluster.

test\e2e\perftype\perftype.go:
  18  
  19: // TODO(random-liu): Replace this with prometheus' data model.
  20  

test\e2e\reporters\progress.go:
  35  // to the configured URL.
  36: // TODO: Number of test specs is not available now, we can add it back when this is fixed in the Ginkgo V2.
  37  // pls see: https://github.com/kubernetes/kubernetes/issues/109744

test\e2e\scheduling\predicates.go:
  854  	}
  855: 	// TODO: setting the Pod's nodeAffinity instead of setting .spec.nodeName works around the
  856  	// Preemption e2e flake (#88441), but we should investigate deeper to get to the bottom of it.

  954  
  955: // TODO: upgrade calls in PodAffinity tests when we're able to run them
  956  func verifyResult(c clientset.Interface, expectedScheduled int, expectedNotScheduled int, ns string) {

test\e2e\scheduling\ubernetes_lite.go:
  61  		e2eskipper.SkipUnlessAtLeast(zoneCount, 2, msg)
  62: 		// TODO: SkipUnlessDefaultScheduler() // Non-default schedulers might not spread
  63  

test\e2e\storage\csi_inline.go:
   39  
   40: 	// TODO: promote to framework.ConformanceIt
   41  	ginkgo.It("should support ephemeral VolumeLifecycleMode in CSIDriver API", func() {

  119  
  120: 	// TODO: promote to framework.ConformanceIt
  121  	ginkgo.It("should support CSIVolumeSource in Pod API", func() {

test\e2e\storage\csi_mock_volume.go:
  1499  				ginkgo.By("Creating snapshot")
  1500: 				// TODO: Test VolumeSnapshots with Retain policy
  1501  				parameters := map[string]string{}

test\e2e\storage\flexvolume.go:
  43  	defaultVolumePluginDir = "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
  44: 	// TODO: change this and config-test.sh when default flex volume install path is changed for GCI
  45  	// On gci, root is read-only and controller-manager containerized. Assume

test\e2e\storage\pd.go:
  511  
  512: // TODO: move detachPD to standard cloudprovider functions so as these tests can run on other cloudproviders too
  513  func detachPD(nodeName types.NodeName, pdName string) error {

  550  
  551: // TODO: move attachPD to standard cloudprovider functions so as these tests can run on other cloudproviders too
  552  func attachPD(nodeName types.NodeName, pdName string) error {

test\e2e\storage\persistent_volumes-local.go:
  122  const (
  123: 	// TODO: This may not be available/writable on all images.
  124  	hostBase = "/tmp"

  289  				ginkgo.It("should set different fsGroup for second pod if first pod is deleted [Flaky]", func() {
  290: 					// TODO: Disabled temporarily, remove [Flaky] tag after #73168 is fixed.
  291  					fsGroup1, fsGroup2 := int64(1234), int64(4321)

  307  	ginkgo.Context("Local volume that cannot be mounted [Slow]", func() {
  308: 		// TODO:
  309  		// - check for these errors in unit tests instead

  893  func makeLocalPVConfig(config *localTestConfig, volume *localTestVolume) e2epv.PersistentVolumeConfig {
  894: 	// TODO: hostname may not be the best option
  895  	nodeKey := "kubernetes.io/hostname"

test\e2e\storage\persistent_volumes.go:
  82  		}
  83: 		// TODO: currently a serialized test of each PV
  84  		if err = createWaitAndDeletePod(c, f.Timeouts, pvcKey.Namespace, pvc, "touch /mnt/volume1/SUCCESS && (id -G | grep -E '\\b777\\b')"); err != nil {

test\e2e\storage\ubernetes_lite_volumes.go:
  50  		e2eskipper.SkipUnlessAtLeast(zoneCount, 2, msg)
  51: 		// TODO: SkipUnlessDefaultScheduler() // Non-default schedulers might not spread
  52  	})

test\e2e\storage\volume_metrics.go:
  468  		})
  469: 		// TODO(mauriciopoppe): after CSIMigration is turned on we're no longer reporting
  470  		// the volume_provision metric (removed in #106609), issue to investigate the bug #106773

test\e2e\storage\drivers\in_tree.go:
   164  
   165: 	// TODO(mkimuram): cluster-admin gives too much right but system:persistent-volume-provisioner
   166  	// is not enough. We should create new clusterrole for testing.

  1163  	// vSphere driver doesn't seem to support readOnly volume
  1164: 	// TODO: check if it is correct
  1165  	if readOnly {

  1185  	// vSphere driver doesn't seem to support readOnly volume
  1186: 	// TODO: check if it is correct
  1187  	if readOnly {

test\e2e\storage\drivers\csi-test\mock\service\node.go:
   81  	if v.VolumeContext[nodeStgPathKey] != "" {
   82: 		// TODO: Check for the capabilities to be equal. Return "ALREADY_EXISTS"
   83  		// if the capabilities don't match.

  309  
  310: 	// TODO: NodeExpandVolume MUST be called after successful NodeStageVolume as we has STAGE_UNSTAGE_VOLUME node capacity.
  311  	resp := &csi.NodeExpandVolumeResponse{}

test\e2e\storage\external\external.go:
  198  	}
  199: 	// TODO: strict checking of the file content once https://github.com/kubernetes/kubernetes/pull/71589
  200  	// or something similar is merged.

  255  	supported := false
  256: 	// TODO (?): add support for more volume types
  257  	switch pattern.VolType {

test\e2e\storage\framework\testdriver.go:
  220  	// [Optional] Scale parameters for stress tests.
  221: 	// TODO(#96241): Rename this field to reflect the tests that consume it.
  222  	StressTestOptions *StressTestOptions

  247  // Metrics to evaluate performance of an operation
  248: // TODO: Add metrics like median, mode, standard deviation, percentile
  249  type Metrics struct {

test\e2e\storage\testsuites\base.go:
  208  
  209: 		// TODO(dyzz): Add a dimension to OperationGenerator metrics for
  210  		// "migrated"->true/false so that we can disambiguate migrated metrics

  217  
  218: 	// TODO: temporarily skip metrics check due to issue #[102893](https://github.com/kubernetes/kubernetes/issues/102893)
  219  	// Will remove it once the issue is fixed

test\e2e\storage\testsuites\multivolume.go:
  735  
  736: 	// TODO: scale?
  737  	for _, n := range nodes.Items {

test\e2e\storage\testsuites\subpath.go:
  348  		if strings.HasPrefix(driverName, "hostPath") {
  349: 			// TODO: This skip should be removed once #61446 is fixed
  350  			e2eskipper.Skipf("Driver %s does not support reconstruction, skipping", driverName)

  360  		if strings.HasPrefix(driverName, "hostPath") {
  361: 			// TODO: This skip should be removed once #61446 is fixed
  362  			e2eskipper.Skipf("Driver %s does not support reconstruction, skipping", driverName)

  477  
  478: 	// TODO: add a test case for the same disk with two partitions
  479  }

  651  	// not working well on Windows
  652: 	// TODO: remove this check after issue is resolved
  653  	if !framework.NodeOSDistroIs("windows") {

test\e2e\storage\testsuites\topology.go:
  247  
  248: 	// TODO: scale?
  249  	for _, n := range nodes.Items {

test\e2e\storage\testsuites\volume_expand.go:
  312  	// Retry the update on error, until we hit a timeout.
  313: 	// TODO: Determine whether "retry with timeout" is appropriate here. Maybe we should only retry on version conflict.
  314  	var lastUpdateError error

test\e2e\storage\testsuites\volume_stress.go:
  227  
  228: 						// TODO: write data per pod and validate it every time
  229  

test\e2e\storage\testsuites\volumemode.go:
  404  		if len(volumePlugin) == 0 {
  405: 			// TODO: check if it's a CSI volume first
  406  			volumePlugin = "kubernetes.io/csi"

test\e2e\storage\testsuites\volumeperf.go:
  156  		// Stats for volume provisioning operation
  157: 		// TODO: Add stats for attach, resize and snapshot
  158  		provisioningStats := &performanceStats{

  164  		ginkgo.By(fmt.Sprintf("Creating Storage Class %v", sc))
  165: 		// TODO: Add support for WaitForFirstConsumer volume binding mode
  166  		if sc.VolumeBindingMode != nil && *sc.VolumeBindingMode == storagev1.VolumeBindingWaitForFirstConsumer {

test\e2e\storage\utils\create.go:
  145  	cleanup := func() {
  146: 		// TODO (?): use same logic as framework.go for determining
  147  		// whether we are expected to clean up? This would change the

  316  	case *rbacv1.RoleRef:
  317: 		// TODO: avoid hard-coding this special name. Perhaps add a Framework.PredefinedRoles
  318  		// which contains all role names that are defined cluster-wide before the test starts?

test\e2e\upgrades\apps\cassandra.go:
  216  	framework.Logf("Errors: %v", errors)
  217: 	// TODO(maisem): tweak this value once we have a few test runs.
  218  	gomega.Expect(ratio).To(gomega.BeNumerically(">", 0.75), "ratio too small")

test\e2e\upgrades\apps\deployments.go:
  44  
  45: // TODO: Test that the deployment stays available during master (and maybe
  46  // node and cluster upgrades).

test\e2e\upgrades\apps\etcd.go:
  204  	framework.Logf("Errors: %v", errors)
  205: 	// TODO(maisem): tweak this value once we have a few test runs.
  206  	gomega.Expect(ratio).To(gomega.BeNumerically(">", 0.75), "ratio too small")

test\e2e\upgrades\apps\mysql.go:
  161  
  162: 	// TODO: Not sure what the ratio defining a successful test run should be. At time of writing the
  163  	// test, failures only seem to happen when a race condition occurs (read/write starts, doesn't

test\e2e\upgrades\apps\replicasets.go:
  39  
  40: // TODO: Test that the replicaset stays available during master (and maybe
  41  // node and cluster upgrades).

test\e2e\windows\density.go:
  47  	ginkgo.Context("create a batch of pods", func() {
  48: 		// TODO(coufon): the values are generous, set more precise limits with benchmark data
  49  		// and add more tests

test\e2e\windows\dns.go:
  101  		// ideally we'd use the powershell native ResolveDns but, that is not a part of agnhost images (as of k8s 1.20)
  102: 		// TODO @jayunit100 add ResolveHost to agn images
  103  

  134  
  135: 		// TODO: Add more test cases for other DNSPolicies.
  136  	})

test\e2e\windows\hybrid_network.go:
  111  		ginkgo.By(fmt.Sprintf("checking connectivity of %s-container in %s", os, podName))
  112: 		// TODO, we should be retrying this similar to what is done in DialFromNode, in the test/e2e/networking/networking.go tests
  113  		stdout, stderr, err := e2epod.ExecCommandInContainerWithFullOutput(f, podName, os+"-container", cmd...)

test\e2e_node\apparmor_test.go:
  238  func isAppArmorEnabled() bool {
  239: 	// TODO(tallclair): Pass this through the image setup rather than hardcoding.
  240  	if strings.Contains(framework.TestContext.NodeName, "-gci-dev-") {

test\e2e_node\checkpoint_container.go:
  149  		framework.ExpectNoError(err)
  150: 		// TODO: once a container engine implements the Checkpoint CRI API this needs
  151  		// to be extended to handle it.

test\e2e_node\container_manager_test.go:
  256  
  257: 				// TODO: Test the oom-score-adj logic for burstable more accurately.
  258  			})

test\e2e_node\cpu_manager_test.go:
  656  
  657: 		// TODO: we assume the first available CPUID is 0, which is pretty fair, but we should probably
  658  		// check what we do have in the node.

test\e2e_node\density_test.go:
   79  	ginkgo.Context("create a batch of pods", func() {
   80: 		// TODO(coufon): the values are generous, set more precise limits with benchmark data
   81  		// and add more tests

  319  	// The current default API QPS limit is 5
  320: 	// TODO(coufon): is there any way to not hard code this?
  321  	APIQPSLimit := 5

  349  
  350: 	// TODO(coufon): in the test we found kubelet starts while it is busy on something, as a result 'syncLoop'
  351  	// does not response to pod creation immediately. Creating the first pod has a delay around 5s.

  622  
  623: 	// TODO(coufon): do not trust 'kubelet' metrics since they are not reset!
  624  	latencyMetrics, _ := getPodStartLatency(kubeletAddr)

test\e2e_node\device_manager_test.go:
  111  			// this mimics a kubelet restart after the upgrade
  112: 			// TODO: is SIGTERM (less brutal) good enough?
  113  			ginkgo.By("killing the kubelet")

  231  			// this mimics a kubelet restart after the upgrade
  232: 			// TODO: is SIGTERM (less brutal) good enough?
  233  			ginkgo.By("killing the kubelet")

  307  
  308: 	// TODO: why `checkpointManager.CreateCheckpoint(name, cpV1)` doesn't seem to work?
  309  	ckPath := filepath.Join(dir, name)

test\e2e_node\device_plugin_test.go:
  92  	ginkgo.Context("DevicePlugin [Serial] [Disruptive]", func() {
  93: 		// TODO(vikasc): Instead of hard-coding number of devices, provide number of devices in the sample-device-plugin using configmap
  94  		// and then use the same here

test\e2e_node\e2e_node_suite_test.go:
   71  
   72: 	// TODO(random-liu): Change the following modes to sub-command.
   73  	runServicesMode    = flag.Bool("run-services-mode", false, "If true, only run services (etcd, apiserver) in current process, and not run test.")

   84  	flags.StringVar(&framework.TestContext.NodeName, "node-name", "", "Name of the node to run tests on.")
   85: 	// TODO(random-liu): Move kubelet start logic out of the test.
   86: 	// TODO(random-liu): Move log fetch logic out of the test.
   87  	// There are different ways to start kubelet (systemd, initd, docker, manually started etc.)

  120  	// It seems that someone is using flag.Parse() after init() and TestMain().
  121: 	// TODO(random-liu): Find who is using flag.Parse() and cause errors and move the following logic
  122  	// into TestContext.
  123: 	// TODO(pohly): remove RegisterNodeFlags from test_context.go enable Viper config support here?
  124  

  169  			// as in the root filesystem.
  170: 			// TODO(random-liu): Consider to chroot the whole test process to make writing
  171  			// test easier.

  209  
  210: 	// TODO(yifan): Temporary workaround to disable coreos from auto restart
  211  	// by masking the locksmithd.

test\e2e_node\image_list.go:
   48  
   49: 	// SampleDevicePluginDSYAML is the path of the daemonset template of the sample device plugin. // TODO: Parametrize it by making it a feature in TestFramework.
   50  	SampleDevicePluginDSYAML = "test/e2e/testing-manifests/sample-device-plugin.yaml"

  265  
  266: // TODO generilize this function with above one
  267  // getKubeVirtDevicePluginImage returns the image of SRIOV device plugin.

test\e2e_node\memory_manager_test.go:
  246  var _ = SIGDescribe("Memory Manager [Disruptive] [Serial] [Feature:MemoryManager]", func() {
  247: 	// TODO: add more complex tests that will include interaction between CPUManager, MemoryManager and TopologyManager
  248  	var (

  379  
  380: 		// TODO: move the test to pod resource API test suite, see - https://github.com/kubernetes/kubernetes/issues/101945
  381  		ginkgo.It("should report memory data during request to pod resources GetAllocatableResources", func() {

  513  
  514: 			// TODO: move the test to pod resource API test suite, see - https://github.com/kubernetes/kubernetes/issues/101945
  515  			ginkgo.It("should report memory data for each guaranteed pod and container during request to pod resources List", func() {

  664  
  665: 			// TODO: move the test to pod resource API test suite, see - https://github.com/kubernetes/kubernetes/issues/101945
  666  			ginkgo.It("should not report any memory data during request to pod resources GetAllocatableResources", func() {

  679  
  680: 			// TODO: move the test to pod resource API test suite, see - https://github.com/kubernetes/kubernetes/issues/101945
  681  			ginkgo.It("should not report any memory data during request to pod resources List", func() {

test\e2e_node\node_container_manager_test.go:
  251  
  252: 	// TODO: Update cgroupManager to expose a Status interface to get current Cgroup Settings.
  253  	// The node may not have updated capacity and allocatable yet, so check that it happens eventually.

test\e2e_node\node_problem_detector_linux.go:
   76  			// Use test condition to avoid changing the real node condition in use.
   77: 			// TODO(random-liu): Now node condition could be arbitrary string, consider whether we need to
   78  			// add TestCondition when switching to predefined condition list.

  298  			})
  299: 			// TODO: remove hardcoded kubelet volume directory path
  300  			// framework.TestContext.KubeVolumeDir is currently not populated for node e2e

test\e2e_node\quota_lsci_test.go:
  47  	useUnderLimit := 99 /* Mb */
  48: 	// TODO: remove hardcoded kubelet volume directory path
  49  	// framework.TestContext.KubeVolumeDir is currently not populated for node e2e

  60  			defer withFeatureGate(LSCIQuotaFeature, quotasRequested)()
  61: 			// TODO: remove hardcoded kubelet volume directory path
  62  			// framework.TestContext.KubeVolumeDir is currently not populated for node e2e

test\e2e_node\summary_test.go:
  281  					}),
  282: 					// TODO(#28407): Handle non-eth0 network interface names.
  283  					"Network": ptrMatchAllFields(gstruct.Fields{

  373  				Volumes: []v1.Volume{
  374: 					// TODO(#28393): Test secret volumes
  375: 					// TODO(#28394): Test hostpath volumes
  376  					{Name: "test-empty-dir", VolumeSource: v1.VolumeSource{EmptyDir: &v1.EmptyDirVolumeSource{}}},

test\e2e_node\util_sriov.go:
  26  	SRIOVDevicePluginCMYAML = "test/e2e_node/testing-manifests/sriovdp-cm.yaml"
  27: 	// SRIOVDevicePluginDSYAML is the path of the daemonset template of the sriov device plugin. // TODO: Parametrize it by making it a feature in TestFramework.
  28  	SRIOVDevicePluginDSYAML = "test/e2e_node/testing-manifests/sriovdp-ds.yaml"

test\e2e_node\util.go:
  322  // otherwise, also stopped, failed, exited (non-running in general) services are also considered.
  323: // TODO: Find a uniform way to deal with systemctl/initctl/service operations. #34494
  324  func findKubeletServiceName(running bool) string {

test\e2e_node\volume_manager_test.go:
  109  										VolumeSource: v1.VolumeSource{
  110: 											// TODO: remove hardcoded kubelet volume directory path
  111  											// framework.TestContext.KubeVolumeDir is currently not populated for node e2e

test\e2e_node\environment\conformance.go:
  46  
  47: // TODO: Should we write an e2e test for this?
  48  func main() {

test\e2e_node\remote\node_conformance.go:
  154  // the conformance test container, it's easier if it's a known directory.
  155: // TODO(random-liu): Get rid of this once we switch to cluster e2e node bootstrap script.
  156  var kubeletPodPath = "conformance-pod-manifest-" + timestamp

  176  // node conformance test.
  177: // TODO(random-liu): Switch to use standard node bootstrap script.
  178  func launchKubelet(host, workspace, results, testArgs, bearerToken string) error {

test\e2e_node\remote\node_e2e.go:
   39  func InitNodeE2ERemote() TestSuite {
   40: 	// TODO: Register flags.
   41  	return &NodeE2ERemote{}

  170  	// Install the cni plugins and add a basic CNI configuration.
  171: 	// TODO(random-liu): Do this in cloud init after we remove containervm test.
  172  	if err := setupCNI(host, workspace); err != nil {

test\e2e_node\remote\remote.go:
  225  	// to get some logs for debugging purposes.
  226: 	// TODO: This is a best-effort, temporary hack that only works for
  227  	// journald nodes. We should have a more robust way to collect logs.

  248  // in the runner. This is used to collect serial console log.
  249: // TODO(random-liu): Use the log-dump script in cluster e2e.
  250  func WriteLog(host, filename, content string) error {

test\e2e_node\runner\remote\run_remote.go:
  139  //
  140: // TODO(coufon): replace 'image' with 'node' in configurations
  141  // and we plan to support testing custom machines other than GCE by specifying host

  198  		suite = remote.InitCAdvisorE2ERemote()
  199: 	// TODO: Add subcommand for node soaking, node conformance, cri validation.
  200  	case "default":

  574  	// This is a temporary solution to collect serial node serial log. Only port 1 contains useful information.
  575: 	// TODO(random-liu): Extract out and unify log collection logic with cluste e2e.
  576  	serialPortOutput, err := computeService.Instances.GetSerialPortOutput(*project, *zone, host).Port(1).Do()

test\e2e_node\services\internal_services.go:
  77  	klog.Info("Stopping e2e services...")
  78: 	// TODO(random-liu): Use a loop to stop all services after introducing
  79  	// service interface.

test\e2e_node\services\kubelet.go:
   45  
   46: // TODO(random-liu): Replace this with standard kubelet launcher.
   47  

  120  		// here to fallback as default config lives in a parallel directory.
  121: 		// TODO(endocrimes): Remove fallback for lack of kubelet config when all
  122  		//                   uses of e2e_node switch to providing one (or move to

  244  		cmdArgs = append(cmdArgs, builder.GetKubeletServerBin())
  245: 		// TODO(random-liu): Get rid of this docker specific thing.
  246  		cmdArgs = append(cmdArgs, "--runtime-cgroups=/docker-daemon")

test\e2e_node\services\logs.go:
  75  	},
  76: 	// TODO(random-liu): Make docker.log non-required.
  77  	{

test\images\agnhost\crd-conversion-webhook\config.go:
  46  		Certificates: []tls.Certificate{sCert},
  47: 		// TODO: uses mutual tls after we agree on what cert the apiserver should use.
  48  		// ClientAuth:   tls.RequireAndVerifyClientCert,

test\images\agnhost\webhook\config.go:
  37  		Certificates: []tls.Certificate{sCert},
  38: 		// TODO: uses mutual tls after we agree on what cert the apiserver should use.
  39  		// ClientAuth:   tls.RequireAndVerifyClientCert,

test\images\agnhost\webhook\main.go:
  30  	"k8s.io/klog/v2"
  31: 	// TODO: try this library to see if it generates correct json patch
  32  	// https://github.com/mattbaird/jsonpatch

test\images\apparmor-loader\loader.go:
  230  
  231: // TODO: This is copied from k8s.io/kubernetes/pkg/security/apparmor.getLoadedProfiles.
  232  //

test\images\pets\peer-finder\peer-finder.go:
  171  	}
  172: 	// TODO: Exit if there's no on-change?
  173  	log.Printf("Peer finder exiting")

test\instrumentation\main.go:
  211  		pathPrefix = strings.Join([]string{GOROOT, "src"}, string(os.PathSeparator))
  212: 	} // ToDo: support non go mod
  213  

  281  						// if we are running on an OS that does not have an OS specific file for something then we will include a constant we shouldn't
  282: 						// TODO: should we include/exclude based on the build tags?
  283  						localVariables[importK] = v

test\integration\apimachinery\watch_restart_test.go:
  113  			select {
  114: 			// TODO: get this lower once we figure out how to extend ETCD cache
  115  			case <-time.After(1000 * time.Millisecond):

test\integration\apiserver\apiserver_test.go:
  1788  				}
  1789: 				// TODO: this should be a more specific error
  1790  				if err.Error() != "only the following media types are accepted: application/json;stream=watch, application/vnd.kubernetes.protobuf;stream=watch" {

  1915  				}
  1916: 				// TODO: this should be a more specific error
  1917  				if err.Error() != "only the following media types are accepted: application/json, application/yaml, application/vnd.kubernetes.protobuf" {

  2044  				}
  2045: 				// TODO: this should be a more specific error
  2046  				if err.Error() != "only the following media types are accepted: application/json;stream=watch, application/vnd.kubernetes.protobuf;stream=watch" {

  2171  				}
  2172: 				// TODO: this should be a more specific error
  2173  				if err.Error() != "only the following media types are accepted: application/json, application/yaml, application/vnd.kubernetes.protobuf" {

  2665  			dependent = c.patchDependentWithOwner(dependent, fakeRefA)
  2666: 			// TODO: currently a patch request that duplicates owner references can still
  2667  			// wipe out managed fields. Note that this happens to built-in resources but

test\integration\apiserver\max_request_body_bytes_test.go:
  291  			DoRaw(context.TODO())
  292: 		// TODO(liggitt): expect bad request on deep nesting, rather than success on dropped unknown field data
  293  		if err != nil && !apierrors.IsBadRequest(err) {

test\integration\apiserver\print_test.go:
  111  
  112: // TODO (soltysh): this list has to go down to 0!
  113  var missingHanlders = sets.NewString(

  181  	for gvk, apiType := range legacyscheme.Scheme.AllKnownTypes() {
  182: 		// we do not care about internal objects or lists // TODO make sure this is always true
  183  		if gvk.Version == runtime.APIVersionInternal || strings.HasSuffix(apiType.Name(), "List") {

test\integration\apiserver\watchcache_test.go:
  74  	// waiting for post start hooks, so we just wait for default service to exist.
  75: 	// TODO(wojtek-t): Figure out less fragile way.
  76  	ctx := context.Background()

test\integration\apiserver\apply\apply_test.go:
  63  // will create the object if it doesn't already exist
  64: // TODO: make a set of test cases in an easy-to-consume place (separate package?) so it's easy to test in both integration and e2e.
  65  func TestApplyAlsoCreates(t *testing.T) {

test\integration\auth\accessreview_test.go:
  36  // Inject into control plane an authorizer that uses user info.
  37: // TODO(etune): remove this test once a more comprehensive built-in authorizer is implemented.
  38  type sarAuthorizer struct{}

test\integration\auth\auth_test.go:
  433  		{"GET", pathWithPrefix("redirect", "nodes", namespace, "a"), "", integration.Code404},
  434: 		// TODO: test .../watch/..., which doesn't end before the test timeout.
  435: 		// TODO: figure out how to create a node so that it can successfully proxy/redirect.
  436  

  451  //
  452: // TODO(etune): write a fuzz test of the REST API.
  453  func TestAuthModeAlwaysAllow(t *testing.T) {

test\integration\auth\podsecurity_test.go:
   64  
   65: 		// TODO
   66  		ExemptClient:         nil,

  124  
  125: 		// TODO
  126  		ExemptClient:         nil,

  142  		"--allow-privileged=true",
  143: 		// TODO: "--admission-control-config-file=" + admissionConfigFile.Name(),
  144  	}, framework.SharedEtcd())

test\integration\benchmark\jsonify\main.go:
  27  
  28: // TODO(random-liu): Replace this with prometheus' data model.
  29  

test\integration\client\client_test.go:
  760  	// Disable this test as long as it demonstrates a problem.
  761: 	// TODO: Re-enable this test when we get #6059 resolved.
  762  	t.Skip()

test\integration\controlplane\kube_apiserver_test.go:
  359  	// Expect the probe CRD path to show up in the OpenAPI spec
  360: 	// TODO(roycaihw): expose response header in rest client and utilize etag here
  361  	if err := wait.Poll(1*time.Second, wait.ForeverTestTimeout, func() (bool, error) {

test\integration\controlplane\transformation\secrets_transformation_test.go:
  84  		{aesCBCConfigYAML, aesCBCPrefix, unSealWithCBCTransformer},
  85: 		// TODO: add secretbox
  86  	}

test\integration\deployment\deployment_test.go:
  111  // Deployments should support roll out, roll back, and roll over.
  112: // TODO: drop the rollback portions of this test when extensions/v1beta1 is no longer served
  113  // and rollback endpoint is no longer supported.

test\integration\etcd\etcd_storage_path_test.go:
  52  var allowMissingTestdataFixtures = map[schema.GroupVersionKind]bool{
  53: 	// TODO(https://github.com/kubernetes/kubernetes/issues/79027)
  54  	gvk("apiregistration.k8s.io", "v1", "APIService"):     true,

  56  
  57: 	// TODO(https://github.com/kubernetes/kubernetes/issues/79026)
  58  	gvk("apiextensions.k8s.io", "v1beta1", "CustomResourceDefinition"): true,

test\integration\framework\etcd.go:
   94  func RunCustomEtcd(dataDir string, customFlags []string) (url string, stopFn func(), err error) {
   95: 	// TODO: Check for valid etcd version.
   96  	etcdPath, err := getEtcdPath()

  198  		// like k8s.io/klog/v2.(*loggingT).flushDaemon()
  199: 		// TODO(#108483): Reduce this number once we address the
  200  		//   couple remaining issues.

test\integration\framework\perf_utils.go:
  119  func (p *IntegrationTestNodePreparer) CleanupNodes() error {
  120: 	// TODO(#93794): make CleanupNodes only clean up the nodes created by this
  121  	// IntegrationTestNodePreparer to make this more intuitive.

test\integration\framework\util.go:
   16  
   17: // TODO: This file can potentially be moved to a common place used by both e2e and integration tests.
   18  

  197  				}
  198: 				// TODO: check if the Node is tainted once we enable NC notReady/unreachable taints by default
  199  				if cond.Status != v1.ConditionTrue {

  225  // isNodeUntainted tests whether a fake pod can be scheduled on "node", given its current taints.
  226: // TODO: need to discuss wether to return bool and error type
  227  func isNodeUntainted(node *v1.Node) bool {

test\integration\garbagecollector\garbage_collector_test.go:
  1111  //
  1112: // TODO: Consider how this could be represented with table-style tests (e.g. a
  1113  // before/after expected object graph given a delete operation targeting a

test\integration\ipamperf\ipam_test.go:
  116  func TestPerformance(t *testing.T) {
  117: 	// TODO (#93112) skip test until appropriate timeout established
  118  	if testing.Short() || true {
  119: 		// TODO (#61854) find why flakiness is caused by etcd connectivity before enabling always
  120  		t.Skip("Skipping because we want to run short tests")

test\integration\scheduler\plugins\plugins_test.go:
  1897  	// Create the API server and the scheduler with the test plugin set.
  1898: 	// TODO Make the subtests not share scheduler instances.
  1899  	testCtx := initTestSchedulerForFrameworkTest(t, testutils.InitTestAPIServer(t, "permit-plugin", nil), 2,

test\integration\scheduler_perf\scheduler_perf_test.go:
   213  		&sleepOp{},
   214: 		// TODO(#94601): add a delete nodes op to simulate scaling behaviour?
   215  	}

  1064  		}
  1065: 		// TODO(#93795): make sure each workload within a test case has a unique
  1066  		// name? The name is used to identify the stats in benchmark reports.
  1067: 		// TODO(#94404): check for unused template parameters? Probably a typo.
  1068  	}

test\integration\scheduler_perf\util.go:
  88  
  89: 	// TODO: client connection configuration, such as QPS or Burst is configurable in theory, this could be derived from the `config`, need to
  90  	// support this when there is any testcase that depends on such configuration.

test\integration\storageversion\gc_test.go:
  241  func idToVersion(t *testing.T, id string) string {
  242: 	// TODO(roycaihw): rewrite the test, use a id-version table
  243  	if !strings.HasPrefix(id, "id-") {

test\integration\storageversion\storage_version_filter_test.go:
  176  			// force enable all resources to ensure that the storage updates can handle cross group resources.
  177: 			// TODO: drop these once we stop allowing them to be served.
  178  			"--runtime-config=api/all=true,extensions/v1beta1/deployments=true,extensions/v1beta1/daemonsets=true,extensions/v1beta1/replicasets=true,extensions/v1beta1/podsecuritypolicies=true,extensions/v1beta1/networkpolicies=true,internal.apiserver.k8s.io/v1alpha1=true",

  206  		})
  207: 		// TODO: Write to aggregated API should pass.
  208  	})

test\integration\util\util.go:
  108  // StartFakePVController is a simplified pv controller logic that sets PVC VolumeName and annotation for each PV binding.
  109: // TODO(mborsz): Use a real PV controller here.
  110  func StartFakePVController(clientSet clientset.Interface) ShutdownFunc {

test\integration\volumescheduling\volume_binding_test.go:
  427  	// Set max volume limit to the number of PVCs the test will create
  428: 	// TODO: remove when max volume limit allows setting through storageclass
  429  	if err := os.Setenv(nodevolumelimits.KubeMaxPDVols, fmt.Sprintf("%v", podLimit*volsPerPod)); err != nil {

test\utils\create_resources.go:
  16  
  17: // TODO: Refactor common part of functions in this file for generic object kinds.
  18  

test\utils\delete_resources.go:
  16  
  17: // TODO: Refactor common part of functions in this file for generic object kinds.
  18  

test\utils\runners.go:
  1589  
  1590: // TODO: attach secrets using different possibilities: env vars, image pull secrets.
  1591  func attachSecrets(template *v1.PodTemplateSpec, secretNames []string) {

  1647  
  1648: // TODO: attach configmaps using different possibilities: env vars.
  1649  func attachConfigMaps(template *v1.PodTemplateSpec, configMapNames []string) {

test\utils\update_resources.go:
  30  	// Parameters for retrying updates/waits with linear backoff.
  31: 	// TODO: Try to move this to exponential backoff by modifying scale.Scale().
  32  	updateRetryInterval = 5 * time.Second

third_party\protobuf\google\protobuf\descriptor.proto:
  159      LABEL_REPEATED      = 3;
  160:     // TODO(sanjay): Should we add LABEL_MAP?
  161    };

  185    // For bytes, contains the C escaped value.  All bytes >= 128 are escaped.
  186:   // TODO(kenton):  Base-64 encode?
  187    optional string default_value = 7;

vendor\github.com\antlr\antlr4\runtime\Go\antlr\atn_config_set.go:
   64  
   65: 	// TODO: These fields make me pretty uncomfortable, but it is nice to pack up
   66  	// info together because it saves recomputation. Can we track conflicts as they

   89  
   90: 	// TODO: These fields make me pretty uncomfortable, but it is nice to pack up
   91  	// info together because it saves recomputation. Can we track conflicts as they

  226  	return b.configs != nil &&
  227: 		// TODO: b.configs.equals(other2.configs) && // TODO: Is b necessary?
  228  		b.fullCtx == other2.fullCtx &&

  275  
  276: 	return b.configLookup.Contains(item) // TODO: containsFast is not implemented for Set
  277  }

vendor\github.com\antlr\antlr4\runtime\Go\antlr\atn_config.go:
  49  
  50: func NewBaseATNConfig7(old *BaseATNConfig) *BaseATNConfig { // TODO: Dup
  51  	return &BaseATNConfig{

  65  	if semanticContext == nil {
  66: 		panic("semanticContext cannot be nil") // TODO: Necessary?
  67  	}

vendor\github.com\antlr\antlr4\runtime\Go\antlr\atn_state.go:
  156  		as.transitions = append(as.transitions[:index], append([]Transition{trans}, as.transitions[index:]...)...)
  157: 		// TODO: as.transitions.splice(index, 1, trans)
  158  	}

vendor\github.com\antlr\antlr4\runtime\Go\antlr\common_token_stream.go:
  109  func (c *CommonTokenStream) Sync(i int) bool {
  110: 	n := i - len(c.tokens) + 1 // TODO: How many more elements do we need?
  111  

vendor\github.com\antlr\antlr4\runtime\Go\antlr\error_strategy.go:
  523  		} else {
  524: 			tokenText = "<missing undefined>" // TODO matches the JS impl
  525  		}

  746  	}
  747: 	panic(NewParseCancellationException()) // TODO we don't emit e properly
  748  }

vendor\github.com\antlr\antlr4\runtime\Go\antlr\errors.go:
  29  
  30: 	// todo
  31  	//	Error.call(this)

  37  	//	}
  38: 	// TODO may be able to use - "runtime" func Stack(buf []byte, all bool) int
  39  

vendor\github.com\antlr\antlr4\runtime\Go\antlr\lexer_atn_simulator.go:
  448  			//
  449: 			// TODO: if the entry rule is invoked recursively, some
  450  			// actions may be executed during the recursive call. The

vendor\github.com\antlr\antlr4\runtime\Go\antlr\lexer.go:
  413  		} else {
  414: 			// TODO: Do we lose character or line position information?
  415  			b.input.Consume()

vendor\github.com\antlr\antlr4\runtime\Go\antlr\parser_atn_simulator.go:
  1073  
  1074: 				configs.SetDipsIntoOuterContext(true) // TODO: can remove? only care when we add to set per middle of p method
  1075  				newDepth--

vendor\github.com\antlr\antlr4\runtime\Go\antlr\parser.go:
  335  
  336: 	// TODO
  337  	panic("Not implemented!")

  576  func (p *BaseParser) inContext(context ParserRuleContext) bool {
  577: 	// TODO: useful in parser?
  578  	return false

vendor\github.com\antlr\antlr4\runtime\Go\antlr\prediction_context.go:
  664  	// if we created same array as a or b, return that instead
  665: 	// TODO: track whether this is possible above during merge sort for speed
  666  	if M == a {

vendor\github.com\antlr\antlr4\runtime\Go\antlr\transition.go:
  129  
  130: // TODO: make all transitions sets? no, should remove set edges
  131  type AtomTransition struct {

vendor\github.com\antlr\antlr4\runtime\Go\antlr\tree.go:
  71  
  72: // TODO
  73  //func (this ParseTreeVisitor) Visit(ctx) {

vendor\github.com\armon\go-socks5\request.go:
  227  
  228: 	// TODO: Support bind
  229  	if err := sendReply(conn, commandNotSupported, nil); err != nil {

  246  
  247: 	// TODO: Support associate
  248  	if err := sendReply(conn, commandNotSupported, nil); err != nil {

vendor\github.com\asaskevich\govalidator\validator.go:
  67  func IsEmail(str string) bool {
  68: 	// TODO uppercase letters are not supported
  69  	return rxEmail.MatchString(str)

vendor\github.com\aws\aws-sdk-go\aws\awsutil\path_value.go:
   36  		} else if caseSensitive && c != "*" && strings.ToLower(c[0:1]) == c[0:1] {
   37: 			// TODO normalize case for user
   38  			return nil // don't support unexported fields

   86  			if createPath && value.Kind() == reflect.Ptr && value.IsNil() {
   87: 				// TODO if the value is the terminus it should not be created
   88  				// if the value to be set to its position is nil.

  128  					if createPath {
  129: 						// TODO resize slice
  130  					} else {

vendor\github.com\aws\aws-sdk-go\aws\csm\reporter.go:
  136  
  137: 	// TODO: Probably want to figure something out for logging dropped
  138  	// metrics

  175  		case m := <-rep.metricsCh.ch:
  176: 			// TODO: What to do with this error? Probably should just log
  177  			b, err := json.Marshal(m)

vendor\github.com\aws\aws-sdk-go\internal\ini\literal_tokens.go:
  105  	if len(b) == 0 {
  106: 		// TODO: should probably return an error
  107  		return false, 0, nil

vendor\github.com\aws\aws-sdk-go\private\protocol\idempotency.go:
  58  	if err != nil {
  59: 		// TODO handle error
  60  		return

vendor\github.com\Azure\azure-sdk-for-go\storage\blockblob.go:
  108  		}
  109: 		// TODO(rjeczalik): handle io.ReadSeeker, in case blob is *os.File etc.
  110  		if l, ok := blob.(lener); ok {

vendor\github.com\Azure\azure-sdk-for-go\storage\client.go:
  246  
  247: 	// TODO: validate parameter sets?
  248  

vendor\github.com\beorn7\perks\quantile\stream.go:
  234  func (s *stream) merge(samples Samples) {
  235: 	// TODO(beorn7): This tries to merge not only individual samples, but
  236  	// whole summaries. The paper doesn't mention merging summaries at

  251  					math.Max(sample.Delta, math.Floor(s.ƒ(s, r))-1),
  252: 					// TODO(beorn7): How to calculate delta correctly?
  253  				}

vendor\github.com\cilium\ebpf\internal\btf\btf_types.go:
  170  func (bt *btfType) Type() TypeID {
  171: 	// TODO: Panic here if wrong kind?
  172  	return TypeID(bt.SizeType)

  175  func (bt *btfType) Size() uint32 {
  176: 	// TODO: Panic here if wrong kind?
  177  	return bt.SizeType

vendor\github.com\containerd\ttrpc\channel.go:
  139  	if !ok || cap(*b) < size {
  140: 		// TODO(stevvooe): It may be better to allocate these in fixed length
  141  		// buckets to reduce fragmentation but its not clear that would help

vendor\github.com\containerd\ttrpc\server.go:
  465  		case err := <-recvErr:
  466: 			// TODO(stevvooe): Not wildly clear what we should do in this
  467  			// branch. Basically, it means that we are no longer receiving

vendor\github.com\containerd\ttrpc\services.go:
  36  
  37: 	// TODO(stevvooe): Add stream support.
  38  }

vendor\github.com\coredns\caddy\caddyfile\json.go:
  176  
  177: // TODO: Will this function come in handy somewhere else?
  178  /*

vendor\github.com\coredns\caddy\caddyfile\parse.go:
  346  
  347: 	// TODO: More helpful error message ("did you mean..." or "maybe you need to install its server type")
  348  	if !p.validDirective(dir) {

  464  func (p *parser) snippetTokens() ([]Token, error) {
  465: 	// TODO: disallow imports in snippets for simplicity at import time
  466  	// snippet must have curlies.

vendor\github.com\coreos\go-systemd\v22\dbus\subscription_set.go:
  34  func (s *SubscriptionSet) Subscribe() (<-chan map[string]*UnitStatus, <-chan error) {
  35: 	// TODO: Make fully evented by using systemd 209 with properties changed values
  36  	return s.conn.SubscribeUnitsCustom(time.Second, 0,

vendor\github.com\elazarl\goproxy\https.go:
  169  		// request can take forever, and the server will be stuck when "closed".
  170: 		// TODO: Allow Server.Close() mechanism to shut down this connection as nicely as possible
  171  		tlsConfig := defaultTLSConfig

  237  				// Since we don't know the length of resp, return chunked encoded response
  238: 				// TODO: use a more reasonable scheme
  239  				resp.Header.Del("Content-Length")

vendor\github.com\elazarl\goproxy\signer.go:
  50  	template := x509.Certificate{
  51: 		// TODO(elazar): instead of this ugly hack, just encode the certificate and hash the binary form.
  52  		SerialNumber: serial,

vendor\github.com\emicklei\go-restful\v3\container.go:
  248  			}
  249: 			// TODO
  250  		}}

vendor\github.com\emicklei\go-restful\v3\curly_route.go:
  23  	for _, each := range s {
  24: 		routes = append(routes, each.route) // TODO change return type
  25  	}

vendor\github.com\emicklei\go-restful\v3\curly.go:
  51  		if matches {
  52: 			candidates.add(curlyRoute{each, paramCount, staticCount}) // TODO make sure Routes() return pointers?
  53  		}

vendor\github.com\emicklei\go-restful\v3\jsr311.go:
  175  func (r RouterJSR311) bestMatchByMedia(routes []Route, contentType string, accept string) *Route {
  176: 	// TODO
  177  	return &routes[0]

vendor\github.com\emicklei\go-restful\v3\path_expression.go:
  68  			literalCount += len(each)
  69: 			encoded := each // TODO URI encode
  70  			buffer.WriteString(regexp.QuoteMeta(encoded))

vendor\github.com\fsnotify\fsnotify\inotify.go:
  153  	if success == -1 {
  154: 		// TODO: Perhaps it's not helpful to return an error here in every case.
  155  		// the only two possible errors are:

vendor\github.com\fsnotify\fsnotify\windows.go:
  470  			raw := (*syscall.FileNotifyInformation)(unsafe.Pointer(&watch.buf[offset]))
  471: 			// TODO: Consider using unsafe.Slice that is available from go1.17
  472  			// https://stackoverflow.com/questions/51187973/how-to-create-an-array-or-a-slice-from-an-array-unsafe-pointer-in-golang

vendor\github.com\go-logr\logr\funcr\funcr.go:
  343  
  344: // TODO: This is not fast. Most of the overhead goes here.
  345  func (f Formatter) prettyWithFlags(value interface{}, flags uint32, depth int) string {

vendor\github.com\go-logr\stdr\stdr.go:
  90  
  91: 	// TODO: add an option to log the date/time
  92  }

vendor\github.com\go-openapi\swag\json.go:
   84  func DynamicJSONToStruct(data interface{}, target interface{}) error {
   85: 	// TODO: convert straight to a json typed map  (mergo + iterate?)
   86  	b, err := WriteJSON(data)

  170  func ToDynamicJSON(data interface{}) interface{} {
  171: 	// TODO: convert straight to a json typed map (mergo + iterate?)
  172  	b, err := json.Marshal(data)

vendor\github.com\go-task\slim-sprig\numeric.go:
  66  		}
  67: 		// TODO: What is the sensible thing to do here?
  68  		return math.MaxInt64

vendor\github.com\godbus\dbus\v5\variant.go:
  82  		for i := 0; i < rv.Len(); i++ {
  83: 			// TODO: slooow
  84  			s, b := MakeVariant(rv.Index(i).Interface()).format()

vendor\github.com\gogo\protobuf\proto\clone.go:
  32  // Protocol buffer deep copy and merge.
  33: // TODO: RawMessage.
  34  

vendor\github.com\gogo\protobuf\proto\decode.go:
  281  	if !alloc {
  282: 		// todo: check if can get more uses of alloc=false
  283  		buf = p.buf[p.index:end]

  417  	// bootstrap protos.
  418: 	// TODO: fix all of those and then add Unmarshal to
  419  	// the Message interface. Then:

vendor\github.com\gogo\protobuf\proto\discard.go:
   61  	}
   62: 	// TODO: Dynamically populate a InternalMessageInfo for legacy messages,
   63  	// but the master branch has no implementation for InternalMessageInfo,

  221  			default: // E.g., interface{}
  222: 				// TODO: Make this faster?
  223  				dfi.discard = func(src pointer) {

vendor\github.com\gogo\protobuf\proto\extensions.go:
  298  	}
  299: 	// TODO: Check types, field numbers, etc.?
  300  	epb, err := extendable(pb)

  330  	}
  331: 	// TODO: Check types, field numbers, etc.?
  332  	extmap := epb.extensionsWrite()

vendor\github.com\gogo\protobuf\proto\lib.go:
  638  		fptr := f.Addr().Interface() // **T
  639: 		// TODO: Consider batching the allocations we do here.
  640  		switch sf.kind {

vendor\github.com\gogo\protobuf\proto\message_set.go:
   64  	XXX_unrecognized []byte
   65: 	// TODO: caching?
   66  }

  101  	}
  102: 	return nil // TODO: return error instead?
  103  }

vendor\github.com\gogo\protobuf\proto\pointer_reflect_gogo.go:
  40  
  41: // TODO: untested, so probably incorrect.
  42  

vendor\github.com\gogo\protobuf\proto\pointer_reflect.go:
  311  func (p pointer) asPointerTo(t reflect.Type) reflect.Value {
  312: 	// TODO: check that p.v.Type().Elem() == t?
  313  	return p.v

vendor\github.com\gogo\protobuf\proto\pointer_unsafe.go:
  164  
  165: // TODO: Can we get rid of appendInt32Slice and use setInt32Slice instead?
  166  func (p pointer) appendInt32Slice(v int32) {

vendor\github.com\gogo\protobuf\proto\properties.go:
  546  	if _, ok := protoTypedNils[name]; ok {
  547: 		// TODO: Some day, make this a panic.
  548  		log.Printf("proto: duplicate proto type registered: %s", name)

vendor\github.com\gogo\protobuf\proto\table_marshal.go:
  1521  func appendVarint(b []byte, v uint64) []byte {
  1522: 	// TODO: make 1-byte (maybe 2-byte) case inline-able, once we
  1523  	// have non-leaf inliner.

vendor\github.com\gogo\protobuf\proto\table_merge.go:
  141  
  142: 	// TODO: Make this faster?
  143  	out := dst.asPointerTo(mi.typ).Elem()

  536  				mfi.merge = func(dst, src pointer) {
  537: 					// TODO: Make this faster?
  538  					dstsp := dst.asPointerTo(f.Type)

  632  			default: // E.g., interface{}
  633: 				// TODO: Make this faster?
  634  				mfi.merge = func(dst, src pointer) {

vendor\github.com\gogo\protobuf\proto\table_unmarshal.go:
   363  			reqMask = uint64(1) << uint(bit)
   364: 			// TODO: if we have more than 64 required fields, we end up
   365  			// not verifying that all required fields are present.

   447  	n := u.typ.NumField()
   448: 	if tag >= 0 && (tag < 16 || tag < 2*n) { // TODO: what are the right numbers here?
   449  		for len(u.dense) <= tag {

  1475  	}
  1476: 	// TODO: check if x>1? Tests seem to indicate no.
  1477  	v := x != 0

vendor\github.com\gogo\protobuf\proto\text_parser.go:
   39  // Functions for parsing the Text protocol buffer format.
   40: // TODO: message sets.
   41  

  463  			//
  464: 			// TODO: Check whether we need to handle
  465  			// namespace rooted names (e.g. ".something.Foo").

  520  			// This could be faster, but it's functional.
  521: 			// TODO: Do something smarter than a linear scan.
  522  			for _, d := range RegisteredExtensions(reflect.New(st).Interface().(Message)) {

  980  		}
  981: 		// TODO: Handle nested messages which implement encoding.TextUnmarshaler.
  982  		return p.readStruct(fv, terminator)

vendor\github.com\gogo\protobuf\proto\text.go:
  916  
  917: // TODO: consider removing some of the Marshal functions below.
  918  

vendor\github.com\gogo\protobuf\protoc-gen-gogo\descriptor\descriptor.pb.go:
  810  	// For bytes, contains the C escaped value.  All bytes >= 128 are escaped.
  811: 	// TODO(kenton):  Base-64 encode?
  812  	DefaultValue *string `protobuf:"bytes,7,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`

vendor\github.com\gogo\protobuf\protoc-gen-gogo\generator\generator.go:
  1424  	// gogo plugin imports
  1425: 	// TODO: may need to worry about uniqueness across plugins and could change this
  1426  	// to use the `addedImports` technique

  1700  	if json := field.GetJsonName(); field.Extendee == nil && json != "" && json != name {
  1701: 		// TODO: escaping might be needed, in which case
  1702  		// perhaps this should be in its own "json" tag.

  1814  func (g *Generator) GoType(message *Descriptor, field *descriptor.FieldDescriptorProto) (typ string, wire string) {
  1815: 	// TODO: Options.
  1816  	switch *field.Type {

  2550  	// that was triggered by using anonymous interfaces here.
  2551: 	// TODO: Revisit this and consider reverting back to anonymous interfaces.
  2552  	// for oi := range message.OneofDecl {

  2658  	g.P("}")
  2659: 	// TODO: Revisit the decision to use a XXX_WellKnownType method
  2660  	// if we change proto.MessageName to work with multiple equivalents.

  2695  
  2696: 	// TODO: It does not scale to keep adding another method for every
  2697  	// operation on protos that we want to switch over to using the

  2823  		// collisions create field/method consistent names.
  2824: 		// TODO: This allocation occurs based on the order of the fields
  2825  		// in the proto file, meaning that a change in the field

  3175  	//
  3176: 	// TODO: This should be implemented in the text formatter rather than the generator.
  3177  	// In addition, the situation for when to apply this special case is implemented

  3224  	// Make a copy and trim source_code_info data.
  3225: 	// TODO: Trim this more when we know exactly what we need.
  3226  	pb := proto.Clone(file.FileDescriptorProto).(*descriptor.FileDescriptorProto)

vendor\github.com\gogo\protobuf\protoc-gen-gogo\grpc\grpc.go:
  133  var reservedClientName = map[string]bool{
  134: 	// TODO: do we need any in gRPC?
  135  }

  337  		g.P("out := new(", outType, ")")
  338: 		// TODO: Pass descExpr to Invoke.
  339  		g.P(`err := c.cc.Invoke(ctx, "`, sname, `", in, out, opts...)`)

vendor\github.com\golang\mock\gomock\call.go:
   51  
   52: 	// TODO: check arity, types.
   53  	mArgs := make([]Matcher, len(args))

  111  func (c *Call) DoAndReturn(f interface{}) *Call {
  112: 	// TODO: Check arity and types here, rather than dying badly elsewhere.
  113  	v := reflect.ValueOf(f)

  146  func (c *Call) Do(f interface{}) *Call {
  147: 	// TODO: Check arity and types here, rather than dying badly elsewhere.
  148  	v := reflect.ValueOf(f)

  225  	mt := c.methodType
  226: 	// TODO: This will break on variadic methods.
  227  	// We will need to check those at invocation time.

vendor\github.com\golang\protobuf\descriptor\descriptor.go:
  71  		if d == nil {
  72: 			// TODO: We could construct a FileDescriptor stub for standalone
  73  			// descriptors to satisfy the API.

vendor\github.com\golang\protobuf\proto\registry.go:
  308  		} else {
  309: 			// TODO: This implies that the protoreflect.ExtensionType is a
  310  			// custom type not generated by protoc-gen-go. We could try and

vendor\github.com\google\cadvisor\cache\memory\memory.go:
  31  
  32: // TODO(vmarmol): See about refactoring this class, we have an unnecessary redirection of containerCache and InMemoryCache.
  33  // containerCache is used to store per-container information

  89  	for _, backend := range c.backend {
  90: 		// TODO(monnand): To deal with long delay write operations, we
  91  		// may want to start a pool of goroutines to do write

vendor\github.com\google\cadvisor\collector\generic_collector.go:
  66  
  67: 	// TODO : Add checks for validity of config file (eg : Accurate JSON fields)
  68  

vendor\github.com\google\cadvisor\collector\prometheus_collector.go:
   89  
   90: 	// TODO : Add checks for validity of config file (eg : Accurate JSON fields)
   91  	return &PrometheusCollector{

  257  			}
  258: 			// TODO Handle multiple labels nicer. Prometheus metrics can have multiple
  259  			// labels, cadvisor only accepts a single string for the metric label.

vendor\github.com\google\cadvisor\collector\types.go:
  22  
  23: // TODO(vmarmol): Export to a custom metrics type when that is available.
  24  

vendor\github.com\google\cadvisor\container\factory.go:
  212  
  213: // TODO(vmarmol): Consider not making this global.
  214  // Global list of factories.

vendor\github.com\google\cadvisor\container\common\fsHandler.go:
  78  	)
  79: 	// TODO(vishh): Add support for external mounts.
  80  	if fh.rootfs != "" {

vendor\github.com\google\cadvisor\container\containerd\factory.go:
  97  func isContainerName(name string) bool {
  98: 	// TODO: May be check with HasPrefix ContainerdNamespace
  99  	if strings.HasSuffix(name, ".mount") {

vendor\github.com\google\cadvisor\container\containerd\handler.go:
   93  	// race condition.
   94: 	// TODO(random-liu): Use cri-containerd client to talk with cri-containerd
   95  	// instead. cri-containerd has some internal synchronization to make sure

  178  func (h *containerdContainerHandler) GetSpec() (info.ContainerSpec, error) {
  179: 	// TODO: Since we dont collect disk usage stats for containerd, we set hasFilesystem
  180  	// to false. Revisit when we support disk usage stats for containerd

vendor\github.com\google\cadvisor\container\containerd\namespaces\grpc.go:
  63  	if !ok {
  64: 		// TODO(stevvooe): Check outgoing context?
  65  		return "", false

vendor\github.com\google\cadvisor\container\crio\factory.go:
   43  const (
   44: 	// TODO add full set of supported drivers in future..
   45  	overlayStorageDriver  storageDriver = "overlay"

  113  	if strings.HasPrefix(path.Base(name), "crio-conmon") {
  114: 		// TODO(runcom): should we include crio-conmon cgroups?
  115  		return false, false, nil

  145  
  146: 	// TODO determine crio version so we can work differently w/ future versions if needed
  147  

vendor\github.com\google\cadvisor\container\crio\handler.go:
   51  
   52: 	// TODO
   53  	// crio version handling...

   58  	// The network mode of the container
   59: 	// TODO
   60  

  132  	rootfsStorageDir := cInfo.Root
  133: 	// TODO(runcom): CRI-O doesn't strip /merged but we need to in order to
  134  	// get device ID from root, otherwise, it's going to error out as overlay

  152  
  153: 	// TODO: extract object mother method
  154  	handler := &crioContainerHandler{

  172  	handler.image = cInfo.Image
  173: 	// TODO: we wantd to know graph driver DeviceId (dont think this is needed now)
  174  

  188  	}
  189: 	// TODO for env vars we wanted to show from container.Config.Env from whitelist
  190  	//for _, exposedEnv := range metadataEnvAllowList {

vendor\github.com\google\cadvisor\container\raw\watcher.go:
  139  
  140: 	// TODO(vmarmol): We should re-do this once we're done to ensure directories were not added in the meantime.
  141  	// Watch subdirectories as well.

vendor\github.com\google\cadvisor\fs\fs.go:
  322  
  323: 	// TODO(rjnagal): Detect docker root and graphdriver directories from docker info.
  324  	dockerRoot := context.Docker.Root

vendor\github.com\google\cadvisor\info\v1\container.go:
  147  
  148: // TODO(vmarmol): Refactor to not need this equality comparison.
  149  // ContainerInfo may be (un)marshaled by json or other en/decoder. In that

  994  func (a *ContainerStats) StatsEq(b *ContainerStats) bool {
  995: 	// TODO(vmarmol): Consider using this through reflection.
  996  	if !reflect.DeepEqual(a.Cpu, b.Cpu) {

vendor\github.com\google\cadvisor\info\v2\container.go:
  19  
  20: 	// TODO(rjnagal): Remove dependency after moving all stats structs from v1.
  21  	// using v1 now for easy conversion.

  36  	// Cpu affinity mask.
  37: 	// TODO(rjnagal): Add a library to convert mask string to set of cpu bitmask.
  38  	Mask string `json:"mask,omitempty"`

vendor\github.com\google\cadvisor\info\v2\conversion.go:
   93  		}
   94: 		// TODO(rjnagal): Handle load stats.
   95  		stats = append(stats, stat)

  124  		if spec.HasNetwork {
  125: 			// TODO: Handle TcpStats
  126  			stat.Network = &NetworkStats{

  164  		}
  165: 		// TODO(rjnagal): Handle load stats.
  166  		newStats = append(newStats, stat)

  225  		}
  226: 		// TODO(rjnagal): Handle load stats.
  227  		stats = append(stats, stat)

vendor\github.com\google\cadvisor\info\v2\machine.go:
  17  import (
  18: 	// TODO(rjnagal): Move structs from v1.
  19  	"time"

vendor\github.com\google\cadvisor\manager\container.go:
   50  
   51: // TODO: replace regular expressions with something simpler, such as strings.Split().
   52  // cgroup type chosen to fetch the cgroup path of a process.

  239  	}
  240: 	// TODO(rjnagal): Optimize by just reading container's cgroup.proc file when in host namespace.
  241  	rootfs := "/"

  490  		} else if len(stats) == 2 {
  491: 			// TODO(vishnuk): Use no processes as a signal.
  492  			// Raise the interval if usage hasn't changed in the last housekeeping.

  507  
  508: // TODO(vmarmol): Implement stats collecting as a custom collector.
  509  func (cd *containerData) housekeeping() {

  653  	if cd.loadReader != nil {
  654: 		// TODO(vmarmol): Cache this path.
  655  		path, err := cd.handler.GetCgroupPath("cpu")

vendor\github.com\google\cadvisor\manager\manager.go:
  825  func (m *manager) GetVersionInfo() (*info.VersionInfo, error) {
  826: 	// TODO: Consider caching this and periodically updating.  The VersionInfo may change if
  827  	// the docker daemon is started after the cAdvisor client is created.  Caching the value

  856  	}
  857: 	// TODO(rjnagal): handle count? Only if we can do count by type (eg. top 5 cpu users)
  858  	ps := []v2.ProcessInfo{}

vendor\github.com\google\cadvisor\summary\summary.go:
  19  // better
  20: // TODO(rjnagal): Optimize the size if we start running it for every container.
  21  package summary

  70  	s.updateLatestUsage()
  71: 	// TODO(jnagal): Use 'available' to avoid unnecessary computation.
  72  	numSamples := len(s.secondSamples)

vendor\github.com\google\cadvisor\third_party\containerd\api\services\version\v1\version.proto:
  23  
  24: // TODO(stevvooe): Should version service actually be versioned?
  25  option go_package = "github.com/containerd/containerd/api/services/version/v1;version";

vendor\github.com\google\cadvisor\utils\timed_store.go:
  78  	// Remove any elements before eviction time.
  79: 	// TODO(rjnagal): This is assuming that the added entry has timestamp close to now.
  80  	evictTime := timestamp.Add(-s.age)

vendor\github.com\google\cadvisor\utils\cloudinfo\azure\azure.go:
  46  
  47: // TODO: Implement method.
  48  func (provider) GetInstanceType() info.InstanceType {

vendor\github.com\google\cadvisor\utils\cpuload\netlink\netlink.go:
  29  var (
  30: 	// TODO(rjnagal): Verify and fix for other architectures.
  31  

vendor\github.com\google\cadvisor\utils\sysinfo\sysinfo.go:
  55  		// Ignore non-disk devices.
  56: 		// TODO(rjnagal): Maybe just match hd, sd, and dm prefixes.
  57  		if strings.HasPrefix(name, "loop") || strings.HasPrefix(name, "ram") || strings.HasPrefix(name, "sr") {

vendor\github.com\google\cel-go\cel\env.go:
  307  
  308: 	// TODO: functions copy needs to happen here.
  309  	ext := &Env{

  421  //
  422: // TODO: Consider adding an option to generate a Program.Residual to avoid round-tripping to an
  423  // Ast format and then Program again.

vendor\github.com\google\cel-go\checker\cost.go:
  482  	if isScalar(t.Type()) {
  483: 		// TODO: since the logic for size estimation is split between
  484  		// ComputedSize and isScalar, changing one will likely require changing

vendor\github.com\google\cel-go\checker\decls\decls.go:
   49  // Well-known types.
   50: // TODO: Replace with an abstract type registry.
   51  var (

  224  	if primitive == exprpb.Type_PRIMITIVE_TYPE_UNSPECIFIED {
  225: 		// TODO: return an error
  226  		panic("Wrapped type must be a primitive")

vendor\github.com\google\cel-go\checker\decls\scopes.go:
  62  	}
  63: 	// TODO: Consider whether this should be an error / panic.
  64  	return s

vendor\github.com\google\cel-go\common\source.go:
  71  
  72: // TODO(jimlarson) "Character offsets" should index the code points
  73  // within the UTF-8 encoded string.  It currently indexes bytes.

vendor\github.com\google\cel-go\common\overloads\overloads.go:
  118  	IndexMap     = "index_map"
  119: 	IndexMessage = "index_message" // TODO: introduce concept of types.Message
  120  )

  126  	InMap        = "in_map"
  127: 	InMessage    = "in_message" // TODO: introduce concept of types.Message
  128  )

vendor\github.com\google\cel-go\common\types\err.go:
  52  // NewErr creates a new Err described by the format string and args.
  53: // TODO: Audit the use of this function and standardize the error messages and codes.
  54  func NewErr(format string, args ...interface{}) ref.Val {

  75  // ValOrErr either returns the existing error or creates a new one.
  76: // TODO: Audit the use of this function and standardize the error messages and codes.
  77  func ValOrErr(val ref.Val, format string, args ...interface{}) ref.Val {

vendor\github.com\google\cel-go\common\types\provider.go:
  189  	}
  190: 	// TODO: generate an error when the type name is registered more than once.
  191  	return nil

vendor\github.com\google\cel-go\common\types\type.go:
  56  func (t *TypeValue) ConvertToNative(typeDesc reflect.Type) (interface{}, error) {
  57: 	// TODO: replace the internal type representation with a proto-value.
  58  	return nil, fmt.Errorf("type conversion not supported for 'type'")

vendor\github.com\google\cel-go\common\types\pb\file.go:
  96  	enumValues map[string]protoreflect.EnumValueDescriptor
  97: 	// TODO: support enum type definitions for use in future type-check enhancements.
  98  }

vendor\github.com\google\cel-go\interpreter\attributes.go:
  1043  	}
  1044: 	// TODO: If the types.Err value contains more than just an error message at some point in the
  1045  	// future, then it would be reasonable to return error values as ref.Val types rather than

vendor\github.com\google\cel-go\interpreter\coster.go:
  18  
  19: // TODO: remove Coster.
  20  

vendor\github.com\google\cel-go\interpreter\interpretable.go:
   220  	}
   221: 	// TODO: return both values as a set if both are unknown or error.
   222  	// prefer left unknown to right unknown.

   270  	}
   271: 	// TODO: return both values as a set if both are unknown or error.
   272  	// prefer left unknown to right unknown.

  1075  	}
  1076: 	// TODO: Combine the errors into a set in the future.
  1077  	// If the left-hand side is non-boolean return it as the error.

  1121  	}
  1122: 	// TODO: Combine the errors into a set in the future.
  1123  	// If the left-hand side is non-boolean return it as the error.

vendor\github.com\google\cel-go\interpreter\interpreter.go:
  82  
  83: // TODO: Replace all usages of TrackState with EvalStateObserver
  84  

vendor\github.com\google\cel-go\interpreter\prune.go:
   32  
   33: // TODO Consider having a separate walk of the AST that finds common
   34  // subexpressions. This can be called before or after constant folding to find

  174  
  175: 	// TODO(issues/377) To construct message literals, the type provider will need to support
  176  	// the enumeration the fields for a given message.

vendor\github.com\google\cel-go\interpreter\runtimecost.go:
   41  		case ConstantQualifier:
   42: 			// TODO: Push identifiers on to the stack before observing constant qualifiers that apply to them
   43  			// and enable the below pop. Once enabled this can case can be collapsed into the Qualifier case.

  201  
  202: // TODO: Allowing drop and dropArgs to remove stack items above the IDs they are provided is a workaround. drop and dropArgs
  203  // should find and remove only the stack items matching the provided IDs once all attributes are properly pushed and popped from stack.

vendor\github.com\google\cel-go\interpreter\functions\standard.go:
  174  		// Type conversion functions
  175: 		// TODO: verify type conversion safety of numeric values.
  176  

vendor\github.com\google\cel-go\parser\helper.go:
  300  //
  301: // TODO: Consider replacing tree-balancing with variadic logical &&, || within the parser, checker,
  302  // and interpreter.

vendor\github.com\google\cel-go\parser\parser.go:
  300  func (p *parser) parse(expr runes.Buffer, desc string) *exprpb.Expr {
  301: 	// TODO: get rid of these pools once https://github.com/antlr/antlr4/pull/3571 is in a release
  302  	lexer := lexerPool.Get().(*gen.CELLexer)

  818  	}
  819: 	// TODO: Add a method to Source to get location from character offset.
  820  	location := p.helper.getLocation(e.GetId())

  850  func (p *parser) SyntaxError(recognizer antlr.Recognizer, offendingSymbol interface{}, line, column int, msg string, e antlr.RecognitionException) {
  851: 	// TODO: Snippet
  852  	l := p.helper.source.NewLocation(line, column)

vendor\github.com\google\cel-go\parser\gen\cel_lexer.go:
   21  	modeNames    []string
   22: 	// TODO: EOF string
   23  }

  301  	l.GrammarFileName = "CEL.g4"
  302: 	// TODO: l.EOF = antlr.TokenEOF
  303  

vendor\github.com\google\cel-go\parser\gen\cel_parser.go:
  1268  	var _prevctx IRelationContext = localctx
  1269: 	var _ antlr.ParserRuleContext = _prevctx // TODO: To prevent unused variable warning.
  1270  	_startState := 8

  1515  	var _prevctx ICalcContext = localctx
  1516: 	var _ antlr.ParserRuleContext = _prevctx // TODO: To prevent unused variable warning.
  1517  	_startState := 10

  2394  	var _prevctx IMemberContext = localctx
  2395: 	var _ antlr.ParserRuleContext = _prevctx // TODO: To prevent unused variable warning.
  2396  	_startState := 14

vendor\github.com\google\gnostic\compiler\extensions.go:
  62  			Wrapper: &extensions.Wrapper{
  63: 				Version:       "unknown", // TODO: set this to the type/version of spec being parsed.
  64  				Yaml:          string(yamlData),

vendor\github.com\google\go-cmp\cmp\compare.go:
  42  
  43: // TODO(≥go1.18): Use any instead of interface{}.
  44  

vendor\github.com\google\go-cmp\cmp\cmpopts\struct_filter.go:
  21  func filterField(typ interface{}, name string, opt cmp.Option) cmp.Option {
  22: 	// TODO: This is currently unexported over concerns of how helper filters
  23  	// can be composed together easily.
  24: 	// TODO: Add tests for FilterField.
  25  

  35  func newStructFilter(typ interface{}, names ...string) structFilter {
  36: 	// TODO: Perhaps allow * as a special identifier to allow ignoring any
  37  	// number of path steps until the next field match?

vendor\github.com\GoogleCloudPlatform\k8s-cloud-provider\pkg\cloud\filter\filter.go:
  106  
  107: // TODO(rramkumar): Support logical OR
  108  

vendor\github.com\gorilla\websocket\prepared.go:
  73  		// Prepare a frame using a 'fake' connection.
  74: 		// TODO: Refactor code in conn.go to allow more direct construction of
  75  		// the frame.

vendor\github.com\gorilla\websocket\server.go:
  331  	// bufio.Reader.buf[:0].
  332: 	// TODO: Use bufio.Reader.Size() after Go 1.10
  333  	br.Reset(originalReader)

vendor\github.com\grpc-ecosystem\grpc-gateway\runtime\fieldmask.go:
  13  func translateName(name string, md *descriptor.DescriptorProto) (string, *descriptor.DescriptorProto) {
  14: 	// TODO - should really gate this with a test that the marshaller has used json names
  15  	if md != nil {

vendor\github.com\grpc-ecosystem\grpc-gateway\runtime\handler.go:
  205  	}
  206: 	// TODO: log about misbehaving stream error handler?
  207  	return DefaultHTTPStreamErrorHandler(ctx, err)

vendor\github.com\grpc-ecosystem\grpc-gateway\runtime\marshal_jsonpb.go:
  227  		case string:
  228: 			// TODO(yugui) Should use proto.StructProperties?
  229  			return fmt.Errorf("unmarshaling of symbolic enum %q not supported: %T", repr, rv.Interface())

vendor\github.com\grpc-ecosystem\grpc-gateway\v2\runtime\marshal_jsonpb.go:
  305  		case string:
  306: 			// TODO(yugui) Should use proto.StructProperties?
  307  			return fmt.Errorf("unmarshaling of symbolic enum %q not supported: %T", repr, rv.Interface())

vendor\github.com\grpc-ecosystem\grpc-gateway\v2\runtime\mux.go:
   37  	// UnescapingModeDefault is the default escaping type.
   38: 	// TODO(v3): default this to UnescapingModeAllExceptReserved per grpc-httpjson-transcoding's
   39  	// reference implementation

  242  
  243: 	// TODO(v3): remove UnescapingModeLegacy
  244  	if s.unescapingMode != UnescapingModeLegacy && r.URL.RawPath != "" {

vendor\github.com\grpc-ecosystem\grpc-gateway\v2\runtime\pattern.go:
  332  func unescape(s string, mode UnescapingMode, multisegment bool) (string, error) {
  333: 	// TODO(v3): remove UnescapingModeLegacy
  334  	if mode == UnescapingModeLegacy {

vendor\github.com\imdario\mergo\mergo.go:
  95  	}
  96: 	return // TODO refactor
  97  }

vendor\github.com\libopenstorage\openstorage\api\api.go:
  135  // StatPoint represents the basic structure of a single Stat reported
  136: // TODO: This is the first step to introduce stats in openstorage.
  137  //       Follow up task is to introduce an API for logging stats

vendor\github.com\libopenstorage\openstorage\api\client\volume\client.go:
  184  	}
  185: 	// TODO(pedge): this probably should not be embedded in this way
  186  	if response.VolumeCreateResponse != nil &&

vendor\github.com\Microsoft\go-winio\zsyscall_windows.go:
  33  	}
  34: 	// TODO: add more here, after collecting data on the common
  35  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\go-winio\pkg\security\zsyscall_windows.go:
  33  	}
  34: 	// TODO: add more here, after collecting data on the common
  35  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\go-winio\vhd\zvhd_windows.go:
  33  	}
  34: 	// TODO: add more here, after collecting data on the common
  35  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\hcsshim\zsyscall_windows.go:
  32  	}
  33: 	// TODO: add more here, after collecting data on the common
  34  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\hcsshim\computestorage\zsyscall_windows.go:
  32  	}
  33: 	// TODO: add more here, after collecting data on the common
  34  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\hcsshim\hcn\hcnendpoint.go:
  264  	hcnQuery := defaultQuery()
  265: 	// TODO: Once query can convert schema, change to {HostComputeNetwork:networkId}
  266  	mapA := map[string]string{"VirtualNetwork": networkId}

vendor\github.com\Microsoft\hcsshim\hcn\zsyscall_windows.go:
  32  	}
  33: 	// TODO: add more here, after collecting data on the common
  34  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\hcsshim\internal\hcs\schema2\devices.go:
  42  
  43: 	// TODO: This is pre-release support in schema 2.3. Need to add build number
  44  	// docs when a public build with this is out.

vendor\github.com\Microsoft\hcsshim\internal\hcs\schema2\memory_2.go:
  32  	//
  33: 	// TODO: This is pre-release support in schema 2.3. Need to add build number
  34  	// docs when a public build with this is out.

  39  	//
  40: 	// TODO: This is pre-release support in schema 2.3. Need to add build number
  41  	// docs when a public build with this is out.

  45  	//
  46: 	// TODO: This is pre-release support in schema 2.3. Need to add build number
  47  	// docs when a public build with this is out.

vendor\github.com\Microsoft\hcsshim\internal\hcs\schema2\virtual_pci_device.go:
  11  
  12: // TODO: This is pre-release support in schema 2.3. Need to add build number
  13  // docs when a public build with this is out.

vendor\github.com\Microsoft\hcsshim\internal\hcs\schema2\virtual_pci_function.go:
  11  
  12: // TODO: This is pre-release support in schema 2.3. Need to add build number
  13  // docs when a public build with this is out.

vendor\github.com\Microsoft\hcsshim\internal\hns\zsyscall_windows.go:
  32  	}
  33: 	// TODO: add more here, after collecting data on the common
  34  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\hcsshim\internal\interop\zsyscall_windows.go:
  32  	}
  33: 	// TODO: add more here, after collecting data on the common
  34  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\hcsshim\internal\oc\span.go:
  11  	if err != nil {
  12: 		// TODO: JTERRY75 - Handle errors in a non-generic way
  13  		status.Code = trace.StatusCodeUnknown

vendor\github.com\Microsoft\hcsshim\internal\regstate\zsyscall_windows.go:
  32  	}
  33: 	// TODO: add more here, after collecting data on the common
  34  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\hcsshim\internal\vmcompute\zsyscall_windows.go:
  32  	}
  33: 	// TODO: add more here, after collecting data on the common
  34  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\hcsshim\internal\wclayer\zsyscall_windows.go:
  32  	}
  33: 	// TODO: add more here, after collecting data on the common
  34  	// error values see on Windows. (perhaps when running

vendor\github.com\Microsoft\hcsshim\internal\winapi\zsyscall_windows.go:
  32  	}
  33: 	// TODO: add more here, after collecting data on the common
  34  	// error values see on Windows. (perhaps when running

vendor\github.com\moby\spdystream\connection.go:
  174  	// only occurs after all Reads have finished
  175: 	// TODO (dmcgowan): refactor relationship into connection
  176  	i.resetChan <- struct{}{}

  525  
  526: 	// TODO Check for error
  527  	if (frame.CFHeader.Flags & spdy.ControlFlagFin) != 0x00 {

  568  
  569: 	// TODO limit headers while not blocking (use buffered chan or goroutine?)
  570  	select {

  694  func (s *Connection) shutdown(closeTimeout time.Duration) {
  695: 	// TODO Ensure this isn't called multiple times
  696  	s.shutdownLock.Lock()

vendor\github.com\moby\spdystream\stream.go:
  320  
  321: // TODO set per stream values instead of connection-wide
  322  

vendor\github.com\moby\spdystream\spdy\types.go:
  211  
  212: // TODO: Implement credential frame and related methods.
  213  

vendor\github.com\moby\term\term_windows.go:
  71  	// go-ansiterm hasn't switch to x/sys/windows.
  72: 	// TODO: switch back to x/sys/windows once go-ansiterm has switched
  73  	if emulateStdin {

vendor\github.com\moby\term\windows\ansi_reader.go:
  185  	if control {
  186: 		// TODO(azlinux): Implement following control sequences
  187  		// <Ctrl>-D  Signals the end of input from the keyboard; also exits current shell.

vendor\github.com\NYTimes\gziphandler\gzip.go:
  496  
  497: 	// TODO (adammck): Use a proper multi-error struct, so the individual errors
  498  	//                 can be extracted if anyone cares.

vendor\github.com\onsi\gomega\gstruct\elements.go:
  104  // by the Identifier function.
  105: // TODO: Extend this to work with arrays & maps (map the key) as well.
  106  type ElementsMatcher struct {

vendor\github.com\onsi\gomega\matchers\with_transform.go:
  83  func (m *WithTransformMatcher) MatchMayChangeInTheFuture(_ interface{}) bool {
  84: 	// TODO: Maybe this should always just return true? (Only an issue for non-deterministic transformers.)
  85  	//

vendor\github.com\opencontainers\go-digest\algorithm.go:
   43  var (
   44: 	// TODO(stevvooe): Follow the pattern of the standard crypto package for
   45  	// registration of digests. Effectively, we are a registerable set and

  140  func (a Algorithm) Encode(d []byte) string {
  141: 	// TODO(stevvooe): Currently, all algorithms use a hex encoding. When we
  142  	// add support for back registration, we can modify this accordingly.

vendor\github.com\opencontainers\runc\libcontainer\container_linux.go:
  1028  	// (CLI prints a warning)
  1029: 	// TODO(avagin): Figure out how to make this work nicely. CRIU 2.0 has
  1030  	//               support for doing unprivileged dumps, but the setup of

  1279  		// exists. So it cannot be used for other filesystem types.
  1280: 		// TODO: pass something else than nil? Not sure if criu is
  1281  		// impacted by issue #2484

  1382  	// (CLI prints a warning)
  1383: 	// TODO(avagin): Figure out how to make this work nicely. CRIU doesn't have
  1384  	//               support for unprivileged restore at the moment.

vendor\github.com\opencontainers\runc\libcontainer\factory_linux.go:
  181  		if len(pids) != 0 {
  182: 			// TODO: return an error.
  183  			logrus.Warnf("container's cgroup is not empty: %d process(es) found", len(pids))

vendor\github.com\opencontainers\runc\libcontainer\process_linux.go:
  757  // set up for you by libcontainer (TODO: fix that too).
  758: // TODO: This is mostly unnecessary, and should be handled by clients.
  759  func (p *Process) InitializeIO(rootuid, rootgid int) (i *IO, err error) {

vendor\github.com\opencontainers\runc\libcontainer\restored_process.go:
  47  func (p *restoredProcess) wait() (*os.ProcessState, error) {
  48: 	// TODO: how do we wait on the actual process?
  49  	// maybe use --exec-cmd in criu

vendor\github.com\opencontainers\runc\libcontainer\rootfs_linux.go:
  410  		// has been a "fun" attack scenario in the past.
  411: 		// TODO: This won't be necessary once we switch to libpathrs and we can
  412  		//       stop all of these symlink-exchange attacks.

vendor\github.com\opencontainers\runc\libcontainer\setns_init_linux.go:
  42  			//
  43: 			// TODO(cyphar): And we should have logging here too.
  44  			if !errors.Is(err, unix.ENOSYS) {

vendor\github.com\opencontainers\runc\libcontainer\standard_init_linux.go:
  63  			//
  64: 			// TODO(cyphar): Log this so people know what's going on, once we
  65  			//               have proper logging in 'runc init'.

vendor\github.com\opencontainers\runc\libcontainer\cgroups\file.go:
  146  		//
  147: 		// TODO: if such usage will ever be common, amend this
  148  		// to reopen cgroupFd and retry openat2.

vendor\github.com\opencontainers\runc\libcontainer\cgroups\utils.go:
  81  	if IsCgroup2UnifiedMode() {
  82: 		// TODO: remove cgroupv2 case once all external users are converted
  83  		availableControllers, err := GetAllSubsystems()

vendor\github.com\opencontainers\runc\libcontainer\cgroups\devices\devices_emulator.go:
  101  		// the cgroup is in black-list mode.
  102: 		// TODO: Double-check that the entire file is "a *:* rwm".
  103  		return nil, nil

  191  	}
  192: 	// TODO: The actual cgroup code doesn't care if an exception didn't exist
  193  	//       during removal, so not erroring out here is /accurate/ but quite

vendor\github.com\opencontainers\runc\libcontainer\cgroups\ebpf\ebpf_linux.go:
   97  //
   98: // TODO: move this logic to cilium/ebpf
   99  func haveBpfProgReplace() bool {

  205  		}
  206: 		// TODO: Should we attach the old filters back in this case? Otherwise
  207  		//       we fail-open on a security feature, which is a bit scary.

vendor\github.com\opencontainers\runc\libcontainer\cgroups\fs\cpuacct.go:
   93  	}
   94: 	// TODO: use strings.SplitN instead.
   95  	fields := strings.Fields(data)

  115  	}
  116: 	// TODO: use strings.SplitN instead.
  117  	for _, value := range strings.Fields(data) {

vendor\github.com\opencontainers\runc\libcontainer\configs\cgroup_unsupported.go:
  6  // Cgroup holds properties of a cgroup on Linux
  7: // TODO Windows: This can ultimately be entirely factored out on Windows as
  8  // cgroups are a Unix-specific construct.

vendor\github.com\opencontainers\runc\libcontainer\configs\config.go:
  85  
  86: // TODO Windows. Many of these fields should be factored out into those parts
  87  // which are common across platforms, and those which are platform specific.

vendor\github.com\opencontainers\runc\libcontainer\configs\validate\validator.go:
  50  	warns := []check{
  51: 		v.mounts, // TODO (runc v1.x.x): make this an error instead of a warning
  52  	}

vendor\github.com\opencontainers\runc\libcontainer\intelrdt\intelrdt.go:
  723  
  724: 		// TODO: verify that l3CacheSchema and/or memBwSchema match the
  725  		// existing schemata if ClosID has been specified. This is a more

vendor\github.com\opencontainers\runc\libcontainer\seccomp\patchbpf\enosys_linux.go:
  505  	//
  506: 	// TODO: Maybe we want to optimise to avoid long jumps here? So sort the
  507  	//       architectures based on how large the jumps are going to be, or

  632  
  633: 	// TODO: Support seccomp flags not yet added to libseccomp-golang...
  634  

vendor\github.com\pquerna\cachecontrol\cacheobject\directive.go:
   28  
   29: // TODO(pquerna): add extensions from here: http://www.iana.org/assignments/http-cache-directives/http-cache-directives.xhtml
   30  

  289  	default:
  290: 		// TODO(pquerna): this sucks, making user re-parse
  291  		cd.Extensions = append(cd.Extensions, token+"="+v)

  540  	default:
  541: 		// TODO(pquerna): this sucks, making user re-parse, and its technically not 'quoted' like the original,
  542  		// but this is still easier, just a SplitN on "="

vendor\github.com\pquerna\cachecontrol\cacheobject\object.go:
   49  //
   50: // TODO(pquerna): decide if this is a good idea or bad
   51  type ObjectResults struct {

  245  	} else {
  246: 		// TODO(pquerna): what should the default behavior be for expiration time?
  247  	}

vendor\github.com\pquerna\cachecontrol\cacheobject\warning.go:
   79  	} else {
   80: 		// TODO(pquerna): this doesn't escape agent if it contains bad things.
   81  		agent = `"` + agent + `"`

   96  	case WarningMiscellaneousWarning:
   97: 		// TODO(pquerna): ideally had a better way to override this one code.
   98  		return "Miscellaneous Warning"

  101  	case WarningMiscellaneousPersistentWarning:
  102: 		// TODO(pquerna): same as WarningMiscellaneousWarning
  103  		return "Miscellaneous Persistent Warning"

vendor\github.com\prometheus\client_golang\prometheus\histogram.go:
  390  func (h *histogram) findBucket(v float64) int {
  391: 	// TODO(beorn7): For small numbers of buckets (<30), a linear search is
  392  	// slightly faster than the binary search. If we really care, we could

vendor\github.com\prometheus\client_golang\prometheus\metric.go:
   56  	Write(*dto.Metric) error
   57: 	// TODO(beorn7): The original rationale of passing in a pre-allocated
   58  	// dto.Metric protobuf to save allocations has disappeared. The

  197  	default:
  198: 		// TODO(bwplotka): Implement Gauge?
  199  		return errors.New("cannot inject exemplar into Gauge, Summary or Untyped")

vendor\github.com\prometheus\client_golang\prometheus\registry.go:
  615  		}
  616: 		// TODO(beorn7): Simplify switch once Desc has type.
  617  		switch metricFamily.GetType() {

  659  		metricFamily.Help = proto.String(desc.help)
  660: 		// TODO(beorn7): Simplify switch once Desc has type.
  661  		switch {

  982  	dFns := make([]func(), 0, len(r.tGatherers))
  983: 	// TODO(bwplotka): Implement concurrency for those?
  984  	for _, g := range r.tGatherers {
  985: 		// TODO(bwplotka): Check for duplicates?
  986  		m, d, err := g.Gather()

  992  
  993: 	// TODO(bwplotka): Consider sort in place, given metric family in gather is sorted already.
  994  	sort.Slice(mfs, func(i, j int) bool {

vendor\github.com\prometheus\client_golang\prometheus\collectors\go_collector_latest.go:
  86  // GoRuntimeMetricsRule allow enabling and configuring particular group of runtime/metrics.
  87: // TODO(bwplotka): Consider adding ability to adjust buckets.
  88  type GoRuntimeMetricsRule struct {

vendor\github.com\prometheus\client_golang\prometheus\promhttp\delegator.go:
  122  func init() {
  123: 	// TODO(beorn7): Code generation would help here.
  124  	pickDelegator[0] = func(d *responseWriterDelegator) delegator { // 0

vendor\github.com\prometheus\client_golang\prometheus\promhttp\instrument_server.go:
  298  func checkLabels(c prometheus.Collector) (code, method bool) {
  299: 	// TODO(beorn7): Remove this hacky way to check for instance labels
  300  	// once Descriptors can have their dimensionality queried.

vendor\github.com\prometheus\client_golang\prometheus\testutil\promlint\promlint.go:
  129  
  130: 	// TODO(mdlayher): lint rules for specific metrics types.
  131  	return problems

vendor\github.com\prometheus\common\expfmt\decode.go:
  123  func (d *textDecoder) Decode(v *dto.MetricFamily) error {
  124: 	// TODO(fabxc): Wrap this as a line reader to make streaming safer.
  125  	if len(d.fams) == 0 {

vendor\github.com\prometheus\common\expfmt\openmetrics_create.go:
  345  		}
  346: 		// TODO(beorn7): Format this directly without converting to a float first.
  347  		n, err = writeOpenMetricsFloat(w, float64(*metric.TimestampMs)/1000)

  479  		ts := (*e).Timestamp.AsTime()
  480: 		// TODO(beorn7): Format this directly from components of ts to
  481  		// avoid overflow/underflow and precision issues of the float

vendor\github.com\prometheus\procfs\net_unix.go:
  29  // Constants for the various /proc/net/unix enumerations.
  30: // TODO: match against x/sys/unix or similar?
  31  const (

vendor\github.com\prometheus\procfs\slab.go:
  141  func (fs FS) SlabInfo() (SlabInfo, error) {
  142: 	// TODO: Consider passing options to allow for parsing different
  143  	// slabinfo versions. However, slabinfo 2.1 has been stable since

vendor\github.com\prometheus\procfs\internal\util\valueparser.go:
  19  
  20: // TODO(mdlayher): util packages are an anti-pattern and this should be moved
  21  // somewhere else that is more focused in the future.

  50  // int64 interprets the underlying value as an int64 and returns that value.
  51: // TODO: export if/when necessary.
  52  func (vp *ValueParser) int64() int64 {

vendor\github.com\robfig\cron\v3\parser.go:
  195  		case options&DowOptional > 0:
  196: 			fields = append(fields, defaults[5]) // TODO: improve access to default
  197  		case options&SecondOptional > 0:

vendor\github.com\russross\blackfriday\v2\block.go:
   606  
   607: 	// TODO(shurcooL): It's probably a good idea to simplify the 2 code paths here
   608  	// into one, always get the info string, and discard it if the caller doesn't care.

   706  	if doRender {
   707: 		block := p.addBlock(CodeBlock, work.Bytes()) // TODO: get rid of temp buffer
   708  		block.IsFenced = true

  1059  
  1060: 	block := p.addBlock(CodeBlock, work.Bytes()) // TODO: get rid of temp buffer
  1061  	block.IsFenced = false

  1166  func endsWithBlankLine(block *Node) bool {
  1167: 	// TODO: figure this out. Always false now.
  1168  	for block != nil {

vendor\github.com\russross\blackfriday\v2\html.go:
  524  		r.cr(w)
  525: 		// TODO: make it configurable via out(renderer.softbreak)
  526  	case Hardbreak:

  630  		if entering {
  631: 			// TODO: untangle this clusterfuck about when the newlines need
  632  			// to be added and when not.

vendor\github.com\russross\blackfriday\v2\inline.go:
   919  	for _, prefix := range validUris {
   920: 		// TODO: handle unicode here
   921  		// case-insensitive prefix test

  1226  func normalizeURI(s []byte) []byte {
  1227: 	return s // TODO: implement
  1228  }

vendor\github.com\russross\blackfriday\v2\markdown.go:
   70  	ListItemContainsBlock
   71: 	ListItemBeginningOfList // TODO: figure out if this is of any use now
   72  	ListItemEndOfList

  523  //
  524: // TODO: As you can see, it begs for splitting into two dedicated structures
  525  // for refs and for footnotes.

  834  // Test if a character is a letter or a digit.
  835: // TODO: check when this is looking for ASCII alnum and when it should use unicode
  836  func isalnum(c byte) bool {

vendor\github.com\seccomp\libseccomp-golang\seccomp_internal.go:
  428  		// libseccomp >= v2.5.0 returns EACCES, older versions return EPERM.
  429: 		// TODO: remove EPERM once libseccomp < v2.5.0 is not supported.
  430  		case syscall.EPERM, syscall.EACCES:

vendor\github.com\spf13\cobra\command.go:
  704  		case strings.HasPrefix(arg, "--") && !strings.Contains(arg, "="):
  705: 			// TODO: this isn't quite right, we should really check ahead for 'true' or 'false'
  706  			inFlag = !hasNoOptDefVal(arg[2:], c.Flags())

vendor\github.com\spf13\cobra\doc\yaml_docs.go:
  151  	flags.VisitAll(func(flag *pflag.Flag) {
  152: 		// Todo, when we mark a shorthand is deprecated, but specify an empty message.
  153  		// The flag.ShorthandDeprecated is empty as the shorthand is deprecated.

vendor\github.com\stretchr\testify\assert\assertion_compare_can_convert.go:
  3  
  4: // TODO: once support for Go 1.16 is dropped, this file can be
  5  //       merged/removed with assertion_compare_go1.17_test.go and

vendor\github.com\stretchr\testify\assert\assertion_compare_legacy.go:
  3  
  4: // TODO: once support for Go 1.16 is dropped, this file can be
  5  //       merged/removed with assertion_compare_go1.17_test.go and

vendor\github.com\stretchr\testify\mock\mock.go:
  458  	m.mutex.Lock()
  459: 	// TODO: could combine expected and closes in single loop
  460  	found, call := m.findExpectedCall(methodName, arguments...)

  863  func (args Arguments) Diff(objects []interface{}) (string, int) {
  864: 	// TODO: could return string as error and nil for No difference
  865  

vendor\github.com\tmc\grpc-websocket-proxy\wsproxy\websocket_proxy.go:
  151  
  152: // TODO(tmc): allow modification of upgrader settings?
  153  var upgrader = websocket.Upgrader{

  169  	// If Sec-WebSocket-Protocol starts with "Bearer", respond in kind.
  170: 	// TODO(tmc): consider customizability/extension point here.
  171  	if strings.HasPrefix(r.Header.Get("Sec-WebSocket-Protocol"), "Bearer") {

vendor\github.com\vishvananda\netlink\class_linux.go:
  157  		opt.Prio = htb.Prio
  158: 		// TODO: Handle Debug properly. For now default to 0
  159  		/* Calculate {R,C}Tab and set Rate and Ceil */

vendor\github.com\vishvananda\netlink\class.go:
  77  type HtbClassAttrs struct {
  78: 	// TODO handle all attributes
  79  	Rate    uint64

vendor\github.com\vishvananda\netlink\filter_linux.go:
  58  	ClassId uint32
  59: 	// TODO remove nl type from interface
  60  	Police nl.TcPolice
  61  	InDev  string
  62: 	// TODO Action
  63  	Mask   uint32

vendor\github.com\vishvananda\netlink\link_linux.go:
  1051  func (h *Handle) linkModify(link Link, flags int) error {
  1052: 	// TODO: support extra data for macvlan
  1053  	base := link.Attrs()

  1062  	if isTuntap {
  1063: 		// TODO: support user
  1064: 		// TODO: support group
  1065  		if tuntap.Mode < unix.IFF_TUN || tuntap.Mode > unix.IFF_TAP {

  1131  		if base.MasterIndex != 0 {
  1132: 			// TODO: verify MasterIndex is actually a bridge?
  1133  			err := h.LinkSetMasterByIndex(link, base.MasterIndex)

  1156  	msg := nl.NewIfInfomsg(unix.AF_UNSPEC)
  1157: 	// TODO: make it shorter
  1158  	if base.Flags&net.FlagUp != 0 {

  1333  	if base.MasterIndex != 0 {
  1334: 		// TODO: verify MasterIndex is actually a bridge?
  1335  		return h.LinkSetMasterByIndex(link, base.MasterIndex)

  2186  		case nl.IFLA_BOND_AD_INFO:
  2187: 			// TODO: implement
  2188  		case nl.IFLA_BOND_AD_ACTOR_SYS_PRIO:

vendor\github.com\vishvananda\netlink\qdisc_linux.go:
  192  		opt.Defcls = qdisc.Defcls
  193: 		// TODO: Handle Debug properly. For now default to 0
  194  		opt.Debug = qdisc.Debug

  460  		case nl.TCA_HTB_DIRECT_QLEN:
  461: 			// TODO
  462  			//htb.DirectQlen = native.uint32(datum.Value)

  513  		case nl.TCA_FQ_ORPHAN_MASK:
  514: 			// TODO
  515  		case nl.TCA_FQ_FLOW_REFILL_DELAY:

vendor\github.com\vishvananda\netlink\qdisc.go:
  201  	Minburst uint32
  202: 	// TODO: handle other settings
  203  }

vendor\github.com\vishvananda\netlink\route_linux.go:
  641  	var metrics []*nl.RtAttr
  642: 	// TODO: support other rta_metric values
  643  	if route.MTU > 0 {

vendor\github.com\vishvananda\netlink\nl\nl_linux.go:
  527  //  }
  528: // TODO: his function probably belongs to netns pkg.
  529  func executeInNetns(newNs, curNs netns.NsHandle) (func(), error) {

vendor\github.com\vmware\govmomi\find\recurser.go:
  71  		if f, ok := o.(mo.Folder); ok {
  72: 			// TODO: Not making use of this yet, but here we can optimize when searching the entire
  73  			// inventory across Datacenters for specific types, for example: 'govc ls -t VirtualMachine /**'

vendor\github.com\vmware\govmomi\nfc\lease.go:
  120  		if device.SslThumbprint != "" {
  121: 			// TODO: prefer host management IP
  122  			l.c.SetThumbprint(u.Host, device.SslThumbprint)

vendor\github.com\vmware\govmomi\object\datastore_file.go:
  168  func (f *DatastoreFile) Stat() (os.FileInfo, error) {
  169: 	// TODO: consider using Datastore.Stat() instead
  170  	u, p, err := f.d.downloadTicket(f.ctx, f.name, &soap.Download{Method: "HEAD"})

vendor\github.com\vmware\govmomi\object\distributed_virtual_switch.go:
  37  func (s DistributedVirtualSwitch) EthernetCardBackingInfo(ctx context.Context) (types.BaseVirtualDeviceBackingInfo, error) {
  38: 	return nil, ErrNotSupported // TODO: just to satisfy NetworkReference interface for the finder
  39  }

vendor\github.com\vmware\govmomi\property\filter.go:
  107  		if s == "*" {
  108: 			return true // TODO: path.Match fails if s contains a '/'
  109  		}

vendor\github.com\vmware\govmomi\session\manager.go:
  108  		// The only easy way around this is to disable verification for the call to LoginExtensionByCertificate().
  109: 		// TODO: find a way to avoid disabling InsecureSkipVerify.
  110  		c.Transport.(*http.Transport).TLSClientConfig.InsecureSkipVerify = true

vendor\github.com\vmware\govmomi\simulator\dvs.go:
  203  func (s *DistributedVirtualSwitch) dvPortgroups(_ *types.DistributedVirtualSwitchPortCriteria) []types.DistributedVirtualPort {
  204: 	// TODO(agui): Filter is not implemented yet
  205  	var res []types.DistributedVirtualPort

vendor\github.com\vmware\govmomi\simulator\event_manager.go:
  326  
  327: 	// TODO: spec.Time, spec.UserName, etc
  328  

vendor\github.com\vmware\govmomi\simulator\host_datastore_browser.go:
   89  		case ".vmdk":
   90: 			// TODO: lookup device to set other fields
   91  			finfo = &types.VmDiskFileInfo{FileInfo: info}

  125  			if ext == ".vmx" {
  126: 				// TODO: check Filter and Details fields
  127  				return true

  134  				}
  135: 				// TODO: check Filter and Details fields
  136  				return true

  201  	ds := ref.(*Datastore)
  202: 	task.Info.Entity = &ds.Self // TODO: CreateTask() should require mo.Entity, rather than mo.Reference
  203  	task.Info.EntityName = ds.Name

vendor\github.com\vmware\govmomi\simulator\host_datastore_system.go:
  65  	ds.Self.Value += "@" + folder.Self.Value
  66: 	// TODO: name should be made unique in the case of Local ds type
  67  

vendor\github.com\vmware\govmomi\simulator\option_manager.go:
  79  		// Real vCenter seems to only allow new options if Key has a "config." prefix.
  80: 		// TODO: consider behaving the same, which would require including 2 long lists of options in vpx.Setting and esx.Setting
  81  		if strings.HasPrefix(setting.Key, "ENOENT.") {

vendor\github.com\vmware\govmomi\simulator\performance_manager.go:
  213  		if interval == -1 || interval == 0 {
  214: 			interval = 20 // TODO: Determine from entity type
  215  		}

vendor\github.com\vmware\govmomi\simulator\service_instance.go:
  76  	case "HostVStorageObjectManager":
  77: 		// TODO: NewHostVStorageObjectManager(*content.VStorageObjectManager)
  78  	case "VcenterVStorageObjectManager":

vendor\github.com\vmware\govmomi\simulator\session_manager.go:
  344  
  345: 		// TODO: we could maintain SessionList as part of the SessionManager singleton
  346  		for _, session := range m.sessions {

vendor\github.com\vmware\govmomi\simulator\snapshot.go:
  74  func (v *VirtualMachineSnapshot) removeSnapshotFiles(ctx *Context) types.BaseMethodFault {
  75: 	// TODO: also remove delta disks that were created when snapshot was taken
  76  

vendor\github.com\vmware\govmomi\simulator\task.go:
  64  	task.Info.EntityName = ref.Value
  65: 	task.Info.Reason = &types.TaskReasonUser{UserName: "vcsim"} // TODO: Context.Session.User
  66  	task.Info.QueueTime = time.Now()

vendor\github.com\vmware\govmomi\simulator\virtual_disk_manager.go:
  215  	body := new(methods.SetVirtualDiskUuidBody)
  216: 	// TODO: validate uuid format and persist
  217  	body.Res = new(types.SetVirtualDiskUuidResponse)

vendor\github.com\vmware\govmomi\simulator\virtual_machine.go:
  1448  			case *types.VirtualDisk:
  1449: 				// TODO: consider VirtualMachineCloneSpec.DiskMoveType
  1450  				fop = types.VirtualDeviceConfigSpecFileOperationCreate

  1505  
  1506: 			// TODO: migrate vm.Config.Files, vm.Summary.Config.VmPathName, vm.Layout and vm.LayoutEx
  1507  

vendor\github.com\vmware\govmomi\vapi\rest\client.go:
  74  		case http.StatusBadRequest:
  75: 			// TODO: structured error types
  76  			detail, err := ioutil.ReadAll(res.Body)

vendor\github.com\vmware\govmomi\vim25\xml\read.go:
  413  	case reflect.Interface:
  414: 		// TODO: For now, simply ignore the field. In the near
  415  		//       future we may choose to unmarshal the start

vendor\github.com\vmware\govmomi\vim25\xml\xml.go:
    12  
    13: // TODO(rsc):
    14  //	Test error handling.

   554  		// <?: Processing instruction.
   555: 		// TODO(rsc): Should parse the <?xml declaration to make sure the version is 1.0.
   556  		var target string

  1920  func procInstEncoding(s string) string {
  1921: 	// TODO: this parsing is somewhat lame and not exact.
  1922  	// It works for all actual cases, though.

vendor\go.etcd.io\bbolt\compact.go:
  6  // commits. A value of zero will ignore transaction sizes.
  7: // TODO: merge with: https://github.com/etcd-io/etcd/blob/b7f0f52a16dbf83f18ca1d803f7892d750366a94/mvcc/backend/backend.go#L349
  8  func Compact(dst, src *DB, txMaxSize int64) error {

vendor\go.etcd.io\bbolt\cursor.go:
  270  	index := sort.Search(len(n.inodes), func(i int) bool {
  271: 		// TODO(benbjohnson): Optimize this range search. It's a bit hacky right now.
  272  		// sort.Search() finds the lowest index where f() != -1 but we need the highest index.

  293  	index := sort.Search(int(p.count), func(i int) bool {
  294: 		// TODO(benbjohnson): Optimize this range search. It's a bit hacky right now.
  295  		// sort.Search() finds the lowest index where f() != -1 but we need the highest index.

vendor\go.etcd.io\bbolt\db.go:
   264  		//
   265: 		// TODO: scan for next page
   266  		if bw, err := db.file.ReadAt(buf[:], 0); err == nil && bw == len(buf) {

  1205  	} else if m.freelist >= m.pgid && m.freelist != pgidNoFreelist {
  1206: 		// TODO: reject pgidNoFreeList if !NoFreelistSync
  1207  		panic(fmt.Sprintf("freelist pgid (%d) above high water mark (%d)", m.freelist, m.pgid))

vendor\go.etcd.io\bbolt\tx.go:
  148  
  149: 	// TODO(benbjohnson): Use vectorized I/O to write out dirty pages.
  150  

vendor\go.etcd.io\etcd\api\v3\etcdserverpb\rpc.proto:
  589    bytes range_end = 64;
  590:   // TODO: fill out with most of the rest of RangeRequest fields when needed.
  591  }

  857    int64 ID = 1;
  858:   // TODO: int64 TTL = 2;
  859  }

vendor\go.etcd.io\etcd\api\v3\v3rpc\rpctypes\error.go:
  231  // Code returns grpc/codes.Code.
  232: // TODO: define clientv3/codes.Code.
  233  func (e EtcdError) Code() codes.Code {

vendor\go.etcd.io\etcd\api\v3\version\version.go:
  45  	Cluster string `json:"etcdcluster"`
  46: 	// TODO: raft state machine version
  47  }

vendor\go.etcd.io\etcd\client\pkg\v3\fileutil\fileutil.go:
  102  func ZeroToEnd(f *os.File) error {
  103: 	// TODO: support FALLOC_FL_ZERO_RANGE
  104  	off, err := f.Seek(0, io.SeekCurrent)

vendor\go.etcd.io\etcd\client\pkg\v3\fileutil\preallocate_darwin.go:
  35  	// allocate all requested space or no space at all
  36: 	// TODO: allocate contiguous space on disk with F_ALLOCATECONTIG flag
  37  	fstore := &unix.Fstore_t{

vendor\go.etcd.io\etcd\client\pkg\v3\transport\listener_tls.go:
  169  func checkCRL(crlPath string, cert []*x509.Certificate) error {
  170: 	// TODO: cache
  171  	crlBytes, err := ioutil.ReadFile(crlPath)

vendor\go.etcd.io\etcd\client\pkg\v3\transport\listener.go:
  419  	// this only reloads certs when there's a client request
  420: 	// TODO: support server-side refresh (e.g. inotify, SIGHUP), caching
  421  	cfg.GetCertificate = func(clientHello *tls.ClientHelloInfo) (cert *tls.Certificate, err error) {

vendor\go.etcd.io\etcd\client\v2\client.go:
  291  
  292: 	return leader.ClientURLs[0], nil // TODO: how to handle multiple client URLs?
  293  }

  376  			case http.StatusInternalServerError, http.StatusServiceUnavailable:
  377: 				// TODO: make sure this is a no leader response
  378  				cerr.Errors = append(cerr.Errors, fmt.Errorf("client: etcd member %s has no leader", eps[k].String()))

vendor\go.etcd.io\etcd\client\v3\client.go:
  234  	// Interceptor retry and backoff.
  235: 	// TODO: Replace all of clientv3/retry.go with RetryPolicy:
  236  	// https://github.com/grpc/grpc-proto/blob/cdd9ed5c3d3f87aef62f373b93361cf7bddc620d/grpc/service_config/service_config.proto#L130

  298  		dctx, cancel = context.WithTimeout(c.ctx, c.cfg.DialTimeout)
  299: 		defer cancel() // TODO: Is this right for cases where grpc.WithBlock() is not set on the dial options?
  300  	}

  416  		client.resolver.Close()
  417: 		// TODO: Error like `fmt.Errorf(dialing [%s] failed: %v, strings.Join(cfg.Endpoints, ";"), err)` would help with debugging a lot.
  418  		return nil, err

  538  	// (e.g., failed in middle of send, corrupted frame)
  539: 	// TODO: are permanent Internal errors possible from grpc?
  540  	return ev.Code() != codes.Unavailable && ev.Code() != codes.Internal

vendor\go.etcd.io\etcd\client\v3\config.go:
  84  	// If nil, use the default logger.
  85: 	// TODO: configure gRPC logger
  86  	LogConfig *zap.Config

  90  
  91: 	// TODO: support custom balancer picker
  92  }

vendor\go.etcd.io\etcd\client\v3\lease.go:
   67  	ID LeaseID `json:"id"`
   68: 	// TODO: TTL int64
   69  }

  133  	//
  134: 	// TODO(v4.0): post errors to last keep alive message before closing
  135  	// (see https://github.com/etcd-io/etcd/pull/7866)

  582  			if err := stream.Send(r); err != nil {
  583: 				// TODO do something with this error?
  584  				return

vendor\go.etcd.io\etcd\client\v3\retry_interceptor.go:
  114  		// getToken automatically
  115: 		// TODO(cfc4n): keep this code block, remove codes about getToken in client.go after pr #12165 merged.
  116  		if c.authTokenBundle != nil {

  135  			c.GetLogger().Error("streamer failed to create ClientStream", zap.Error(err))
  136: 			return nil, err // TODO(mwitkow): Maybe dial and transport errors should be retriable?
  137  		}

  226  			s.client.lg.Error("failed reestablishStreamAndResendBuffer", zap.Error(err))
  227: 			return err // TODO(mwitkow): Maybe dial and transport errors should be retriable?
  228  		}

vendor\go.etcd.io\etcd\client\v3\retry.go:
  67  		// it could be from "Dial"
  68: 		// TODO: do not retry for now
  69  		// ref. https://github.com/grpc/grpc-go/issues/1581

vendor\go.etcd.io\etcd\client\v3\watch.go:
   70  	//
   71: 	// TODO: explicitly set context error in the last "WatchResponse" message and close channel?
   72  	// Currently, client contexts are overwritten with "valCtx" that never closes.
   73: 	// TODO(v3.4): configure watch retry policy, limit maximum retry number
   74  	// (see https://github.com/etcd-io/etcd/issues/8980)

  542  				outc := make(chan WatchResponse, 1)
  543: 				// TODO: pass custom watch ID?
  544  				ws := &watcherStream{

  708  	}
  709: 	// TODO: return watch ID?
  710  	wr := &WatchResponse{

  855  
  856: 			// TODO pause channel if buffer gets too large
  857  			ws.buf = append(ws.buf, wr)

  967  // manually retry in case "ws==nil && err==nil"
  968: // TODO: remove FailFast=false
  969  func (w *watchGrpcStream) openWatchClient() (ws pb.Watch_WatchClient, err error) {

vendor\go.etcd.io\etcd\client\v3\concurrency\mutex.go:
  83  	// wait for deletion revisions prior to myKey
  84: 	// TODO: early termination if the session key is deleted before other session keys with smaller revisions.
  85  	_, werr := waitDeletes(ctx, client, m.pfx, m.myRev-1)

vendor\go.etcd.io\etcd\pkg\v3\adt\interval_tree.go:
   51  // Interval implements a Comparable interval [begin, end)
   52: // TODO: support different sorts of intervals: (a,b), [a,b], (a, b]
   53  type Interval struct {

  239  
  240: // TODO: make this consistent with textbook implementation
  241  //

  437  
  438: // TODO: make this consistent with textbook implementation
  439  //

vendor\go.etcd.io\etcd\pkg\v3\schedule\schedule.go:
  127  func (f *fifo) run() {
  128: 	// TODO: recover from job panic?
  129  	defer func() {

vendor\go.etcd.io\etcd\pkg\v3\traceutil\trace.go:
  77  
  78: // TODO returns a non-nil, empty Trace
  79  func TODO() *Trace {

vendor\go.etcd.io\etcd\raft\v3\bootstrap.go:
  47  
  48: 	// TODO(tbg): remove StartNode and give the application the right tools to
  49  	// bootstrap the initial membership in a cleaner way.

  72  	//
  73: 	// TODO(bdarnell): These entries are still unstable; do we need to preserve
  74  	// the invariant that committed < unstable?

vendor\go.etcd.io\etcd\raft\v3\log.go:
   66  	if err != nil {
   67: 		panic(err) // TODO(bdarnell)
   68  	}

   70  	if err != nil {
   71: 		panic(err) // TODO(bdarnell)
   72  	}

  216  	if err != nil {
  217: 		panic(err) // TODO(bdarnell)
  218  	}

  227  	if err != nil {
  228: 		panic(err) // TODO(bdarnell)
  229  	}

  268  	if i < dummyIndex || i > l.lastIndex() {
  269: 		// TODO: return an error instead?
  270  		return 0, nil

  283  	}
  284: 	panic(err) // TODO(bdarnell)
  285  }

  302  	}
  303: 	// TODO (xiangli): handle error?
  304  	panic(err)

  355  		} else if err != nil {
  356: 			panic(err) // TODO(bdarnell)
  357  		}

vendor\go.etcd.io\etcd\raft\v3\node.go:
  341  		select {
  342: 		// TODO: maybe buffer the config propose if there exists one (the way
  343  		// described in raft dissertation)

  426  	if IsLocalMsg(m.Type) {
  427: 		// TODO: return an error?
  428  		return nil

vendor\go.etcd.io\etcd\raft\v3\raft.go:
   255  	maxUncommittedSize uint64
   256: 	// TODO(tbg): rename to trk.
   257  	prs tracker.ProgressTracker

   324  	if err != nil {
   325: 		panic(err) // TODO(bdarnell)
   326  	}

   458  			}
   459: 			panic(err) // TODO(bdarnell)
   460  		}

   689  func (r *raft) becomeCandidate() {
   690: 	// TODO(xiangli) remove the panic when the raft implementation is stable
   691  	if r.state == StateLeader {

   702  func (r *raft) becomePreCandidate() {
   703: 	// TODO(xiangli) remove the panic when the raft implementation is stable
   704  	if r.state == StateLeader {

   718  func (r *raft) becomeLeader() {
   719: 	// TODO(xiangli) remove the panic when the raft implementation is stable
   720  	if r.state == StateFollower {

   995  		//
   996: 		// TODO(tbg): I added a TODO in removeNode, it doesn't seem that the
   997  		// leader steps down when removing itself. I might be missing something.

  1237  				case pr.State == tracker.StateSnapshot && pr.Match >= pr.PendingSnapshot:
  1238: 					// TODO(tbg): we should also enter this branch if a snapshot is
  1239  					// received that is below pr.PendingSnapshot but which makes it

  1307  		}
  1308: 		// TODO(tbg): this code is very similar to the snapshot handling in
  1309  		// MsgAppResp above. In fact, the code there is more correct than the

  1602  	pr := r.prs.Progress[r.id]
  1603: 	pr.MaybeUpdate(pr.Next - 1) // TODO(tbg): this is untested and likely unneeded
  1604  

  1631  	if err != nil {
  1632: 		// TODO(tbg): return the error to the caller.
  1633  		panic(err)

  1661  		//
  1662: 		// TODO(tbg): step down (for sanity) and ask follower with largest Match
  1663  		// to TimeoutNow (to avoid interruption). This might still drop some

  1665  		//
  1666: 		// TODO(tbg): test this branch. It is untested at the time of writing.
  1667  		return cs

vendor\go.etcd.io\etcd\raft\v3\status.go:
  78  // MarshalJSON translates the raft status into JSON.
  79: // TODO: try to simplify this by introducing ID type into raft
  80  func (s Status) MarshalJSON() ([]byte, error) {

vendor\go.etcd.io\etcd\raft\v3\storage.go:
   46  type Storage interface {
   47: 	// TODO(tbg): split this into two interfaces, LogStorage and StateStorage.
   48  

  238  // Append the new entries to storage.
  239: // TODO (xiangli): ensure the entries are continuous and
  240  // entries[0].Index > ms.entries[0].Index

vendor\go.etcd.io\etcd\raft\v3\util.go:
  171  	formatConfChange := func(cc pb.ConfChangeI) string {
  172: 		// TODO(tbg): give the EntryFormatter a type argument so that it gets
  173  		// a chance to expose the Context.

vendor\go.etcd.io\etcd\raft\v3\confchange\confchange.go:
  258  		//
  259: 		// TODO(tbg): seems awfully optimistic. Using the first index would be
  260  		// better. The general expectation here is that the follower has no log

vendor\go.etcd.io\etcd\raft\v3\confchange\restore.go:
  114  //
  115: // TODO(tbg) it's silly that this takes a Changer. Unravel this by making sure
  116  // the Changer only needs a ProgressMap (not a whole Tracker) at which point

vendor\go.etcd.io\etcd\raft\v3\tracker\progress.go:
   55  	//
   56: 	// TODO(tbg): the leader should always have this set to true.
   57  	RecentActive bool

  178  		//
  179: 		// TODO(tbg): why not use matchHint if it's larger?
  180  		pr.Next = pr.Match + 1

vendor\go.etcd.io\etcd\server\v3\auth\simple_token.go:
  38  // var for testing purposes
  39: // TODO: Remove this mutable global state - as it's race-prone.
  40  var (

vendor\go.etcd.io\etcd\server\v3\auth\store.go:
  835  func (as *authStore) isOpPermitted(userName string, revision uint64, key, rangeEnd []byte, permTyp authpb.Permission_Type) error {
  836: 	// TODO(mitake): this function would be costly so we need a caching mechanism
  837  	if !as.IsAuthEnabled() {

vendor\go.etcd.io\etcd\server\v3\embed\config.go:
  158  	// TickMs is the number of milliseconds between heartbeat ticks.
  159: 	// TODO: decouple tickMs and heartbeat tick (current heartbeat tick = 1).
  160  	// make ticks a cluster wide configuration.

  232  	// EnableV2 exposes the deprecated V2 API surface.
  233: 	// TODO: Delete in 3.6 (https://github.com/etcd-io/etcd/issues/12913)
  234  	// Deprecated in 3.5.

  322  	// Deprecated in v3.5.
  323: 	// TODO: Delete in v3.6 (https://github.com/etcd-io/etcd/issues/12913)
  324  	ExperimentalEnableV2V3 string `json:"experimental-enable-v2v3"`

  329  	// Deprecated in v3.6.
  330: 	// TODO: Delete in v3.7
  331  	ExperimentalEnableLeaseCheckpointPersist bool          `json:"experimental-enable-lease-checkpoint-persist"`

  884  // It returns the default hostname, if used, and the error, if any, from getting the machine's default host.
  885: // TODO: check whether fields are set instead of whether fields have default value
  886  func (cfg *Config) UpdateDefaultClusterFromName(defaultInitialCluster string) (string, error) {

  929  			// special case for local address
  930: 			// TODO: support /etc/hosts ?
  931  			continue

vendor\go.etcd.io\etcd\server\v3\embed\serve.go:
  182  		}
  183: 		// TODO: add debug flag; enable logging when debug flag is set
  184  		httpmux := sctx.createMux(gwmux, handler)

  208  func configureHttpServer(srv *http.Server, cfg config.ServerConfig) error {
  209: 	// todo (ahrtr): should we support configuring other parameters in the future as well?
  210  	return http2.ConfigureServer(srv, &http2.Server{

  396  // WrapCORS wraps existing handler with CORS.
  397: // TODO: deprecate this after v2 proxy deprecate
  398  func WrapCORS(cors map[string]struct{}, h http.Handler) http.Handler {

vendor\go.etcd.io\etcd\server\v3\etcdserver\apply_v2.go:
  96  		}
  97: 		// TODO remove v2 version set to avoid the conflict between v2 and v3 in etcd 3.6
  98  		if r.Path == membership.StoreClusterVersionKey() {

vendor\go.etcd.io\etcd\server\v3\etcdserver\apply.go:
  562  func applyCompare(rv mvcc.ReadView, c *pb.Compare) bool {
  563: 	// TODO: possible optimizations
  564  	// * chunk reads for large ranges to conserve memory

  773  		case pb.AlarmType_NOSPACE, pb.AlarmType_CORRUPT:
  774: 			// TODO: check kv hash before deactivating CORRUPT?
  775  			lg.Warn("alarm disarmed", zap.String("alarm", m.Alarm.String()), zap.String("from", types.ID(m.MemberID).String()))

vendor\go.etcd.io\etcd\server\v3\etcdserver\cluster_util.go:
  210  	if downgradeEnabled {
  211: 		// Todo: handle the case that downgrading from higher major version(e.g. downgrade from v4.0 to v3.x)
  212  		maxV.Minor = maxV.Minor + 1

  324  	cc := &http.Client{Transport: peerRt}
  325: 	// TODO: refactor member http handler code
  326  	// cannot import etcdhttp, so manually construct url

vendor\go.etcd.io\etcd\server\v3\etcdserver\corrupt.go:
  359  func (s *EtcdServer) getPeerHashKVs(rev int64) []*peerHashKVResp {
  360: 	// TODO: handle the case when "s.cluster.Members" have not
  361  	// been populated (e.g. no snapshot to load from disk)

vendor\go.etcd.io\etcd\server\v3\etcdserver\quota.go:
  127  func (b *backendQuota) Available(v interface{}) bool {
  128: 	// TODO: maybe optimize backend.Size()
  129  	return b.s.Backend().Size()+int64(b.Cost(v)) < b.maxBackendBytes

vendor\go.etcd.io\etcd\server\v3\etcdserver\raft.go:
   45  	// Never overflow the rafthttp buffer, which is 4096.
   46: 	// TODO: a better const?
   47  	maxInflightMsgs = 4096 / 8

  413  			if !ok {
  414: 				// TODO: limit request rate.
  415  				r.lg.Warn(

vendor\go.etcd.io\etcd\server\v3\etcdserver\server.go:
   620  	if beExist {
   621: 		// TODO: remove kvindex != 0 checking when we do not expect users to upgrade
   622  		// etcd from pre-3.0 release.

   669  
   670: 	// TODO: move transport initialization near the definition of remote
   671  	tr := &rafthttp.Transport{

   799  	s.GoAttach(func() { s.adjustTicks() })
   800: 	// TODO: Switch to publishV3 in 3.6.
   801  	// Support for cluster_member_set_attr was added in 3.5.

   861  
   862: 	// TODO: if this is an empty log, writes all peer infos
   863  	// into the first entry

  1005  // and helps decouple state machine logic from Raft algorithms.
  1006: // TODO: add a state machine interface to apply the commit entries and do snapshot/recover
  1007  type raftReadyHandler struct {

  1070  			}
  1071: 			// TODO: remove the nil checking
  1072  			// current test utility does not provide the stats

  1440  
  1441: 	// TODO: drain all requests, or drop all messages to the old leader
  1442  	lg.Info(

  1569  
  1570: 	// TODO: move Member to protobuf type
  1571  	b, err := json.Marshal(memb)

  2032  // process publish requests through rafthttp
  2033: // TODO: Remove in 3.6 (start using publishV3)
  2034  func (s *EtcdServer) publish(timeout time.Duration) {

  2364  
  2365: // TODO: non-blocking snapshot
  2366  func (s *EtcdServer) snapshot(snapi uint64, confState raftpb.ConfState) {

  2382  		d, err := clone.SaveNoCopy()
  2383: 		// TODO: current store will never fail to do a snapshot
  2384  		// what should we do if the store might fail?

  2472  // local version.
  2473: // TODO switch to updateClusterVersionV3 in 3.6
  2474  func (s *EtcdServer) monitorVersions() {

  2685  		case types.ID(raft.None):
  2686: 			// TODO: return error to specify it happens because the cluster does not have leader now
  2687  		case s.ID():

vendor\go.etcd.io\etcd\server\v3\etcdserver\v3_server.go:
  348  		}
  349: 		// TODO: fill out ResponseHeader
  350  		resp := &pb.LeaseTimeToLiveResponse{Header: &pb.ResponseHeader{}, ID: r.ID, TTL: int64(le.Remaining().Seconds()), GrantedTTL: le.TTL()}

  966  	if downgradeInfo.Enabled {
  967: 		// Todo: return the downgrade status along with the error msg
  968  		return nil, ErrDowngradeInProcess

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\etcdhttp\metrics.go:
  115  // Health defines etcd server health status.
  116: // TODO: remove manual parsing in etcdctl cluster-health
  117  type Health struct {

  141  
  142: // TODO: etcdserver.ErrNoLeader in health API
  143  

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\membership\cluster.go:
  296  func (c *RaftCluster) ValidateConfigurationChange(cc raftpb.ConfChange) error {
  297: 	// TODO: this must be switched to backend as well.
  298  	members, removed := membersFromStore(c.lg, c.v2store)

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\membership\downgrade.go:
  77  func AllowedDowngradeVersion(ver *semver.Version) *semver.Version {
  78: 	// Todo: handle the case that downgrading from higher major version(e.g. downgrade from v4.0 to v3.x)
  79  	return &semver.Version{Major: ver.Major, Minor: ver.Minor - 1}

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\membership\member.go:
  31  	// PeerURLs is the list of peers in the raft cluster.
  32: 	// TODO(philips): ensure these are URLs
  33  	PeerURLs []string `json:"peerURLs"`

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\rafthttp\transport.go:
  365  	defer t.mu.Unlock()
  366: 	// TODO: return error or just panic?
  367  	if _, ok := t.peers[id]; !ok {

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v2auth\auth_requests.go:
  129  		Path:   p,
  130: 		Dir:    false, // TODO: always false?
  131  	}

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v2discovery\discovery.go:
  134  
  135: 	// TODO: add ResponseHeaderTimeout back when watch on discovery service writes header early
  136  	tr, err := transport.NewTransport(transport.TLSInfo{}, 30*time.Second)

  168  		// Fails, even on a timeout, if createSelf times out.
  169: 		// TODO(barakmich): Retrying the same node might want to succeed here
  170  		// (ie, createSelf should be idempotent for discovery).

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v2http\capability.go:
  37  	if err := herr.WriteTo(w); err != nil {
  38: 		// TODO: the following plog was removed, add the logging back if possible
  39  		// plog.Debugf("error writing HTTPError (%v) to %s", err, r.RemoteAddr)

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v2http\client.go:
  398  	}
  399: 	// TODO(jonboulle): define what parameters dir is/isn't compatible with?
  400  	if dir, err = getBool(r.Form, "dir"); err != nil {

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v2stats\leader.go:
  35  	// Leader is the ID of the leader in the etcd cluster.
  36: 	// TODO(jonboulle): clarify that these are IDs, not names
  37  	Leader    string                    `json:"leader"`

  59  	b, err := json.Marshal(stats)
  60: 	// TODO(jonboulle): appropriate error handling?
  61  	if err != nil {

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v2stats\server.go:
  50  	// ID is the raft ID of the node.
  51: 	// TODO(jonboulle): use ID instead of name?
  52  	ID        string         `json:"id"`

  81  	b, err := json.Marshal(stats)
  82: 	// TODO(jonboulle): appropriate error handling?
  83  	if err != nil {

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v2v3\cluster.go:
  24  func (s *v2v3Server) ID() types.ID {
  25: 	// TODO: use an actual member ID
  26  	return types.ID(0xe7cd2f00d)

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v2v3\store.go:
  564  
  565: // TODO: move this out of the Store interface?
  566  

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v2v3\watcher.go:
  29  		ctx,
  30: 		// TODO: very pricey; use a single store-wide watch in future
  31  		s.pfx,

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v3rpc\interceptor.go:
  245  					smap.mu.Unlock()
  246: 					// TODO: investigate whether the reason for cancellation here is useful to know
  247  					ctx.Cancel(nil)

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v3rpc\key.go:
  256  func checkRequestOp(u *pb.RequestOp, maxTxnOps int) error {
  257: 	// TODO: ensure only one of the field is set.
  258  	switch uv := u.Request.(type) {

vendor\go.etcd.io\etcd\server\v3\etcdserver\api\v3rpc\watch.go:
  137  	// tracks the watchID that stream might need to send progress to
  138: 	// TODO: combine progress and prevKV into a single struct?
  139  	progress map[mvcc.WatchID]bool

  199  
  200: 	// TODO: There's a race here. When a stream  is closed (e.g. due to a cancellation),
  201  	// the underlying error (e.g. a gRPC stream error) may be returned and handled

  383  
  384: 			// TODO: evs is []mvccpb.Event type
  385  			// either return []*mvccpb.Event from the mvcc package

vendor\go.etcd.io\etcd\server\v3\lease\lessor.go:
  145  // lessor implements Lessor interface.
  146: // TODO: use clockwork for testability.
  147  type lessor struct {

  250  //
  251: // TODO: raft follower do not forward lease management proposals. There might be a
  252  // very small window (within second normally which depends on go scheduling) that

  281  
  282: 	// TODO: when lessor is under high load, it should give out lease
  283  	// with longer TTL to reduce renew load.

  864  // RemainingTTL returns the last checkpointed remaining TTL of the lease.
  865: // TODO(jpbetz): do not expose this utility method
  866  func (l *Lease) RemainingTTL() int64 {

vendor\go.etcd.io\etcd\server\v3\lease\leasehttp\http.go:
   85  		}
   86: 		// TODO: fill out ResponseHeader
   87  		resp := &pb.LeaseKeepAliveResponse{ID: lreq.ID, TTL: ttl}

  110  		}
  111: 		// TODO: fill out ResponseHeader
  112  		resp := &leasepb.LeaseInternalResponse{

  144  // RenewHTTP renews a lease at a given primary server.
  145: // TODO: Batch request in future?
  146  func RenewHTTP(ctx context.Context, id lease.LeaseID, url string, rt http.RoundTripper) (int64, error) {

vendor\go.etcd.io\etcd\server\v3\mvcc\kvstore.go:
  131  	if err := s.restore(); err != nil {
  132: 		// TODO: return the error instead of panic here?
  133  		panic("failed to recover store from backend")

  158  func (s *store) hash() (hash uint32, revision int64, err error) {
  159: 	// TODO: hash and revision could be inconsistent, one possible fix is to add s.revMu.RLock() at the beginning of function, which is costly
  160  	start := time.Now()

vendor\go.etcd.io\etcd\server\v3\mvcc\metrics_txn.go:
  63  	rangeCounter.Add(ranges)
  64: 	rangeCounterDebug.Add(ranges) // TODO: remove in 3.5 release
  65  

vendor\go.etcd.io\etcd\server\v3\mvcc\backend\backend.go:
  258  
  259: 	// TODO: might want to copy the read buffer lazily - create copy when A) end of a write transaction B) end of a batch interval.
  260  

  453  
  454: 	// TODO: make this non-blocking?
  455  	// lock batchTx to ensure nobody is using previous tx, and then

vendor\go.etcd.io\etcd\server\v3\mvcc\backend\batch_tx.go:
  104  // have appropriate semantics in BatchTx interface. Therefore should not be called.
  105: // TODO: might want to decouple ReadTx and BatchTx
  106  

vendor\go.etcd.io\etcd\server\v3\mvcc\backend\read_tx.go:
  43  
  44: 	// TODO: group and encapsulate {txMu, tx, buckets, txWg}, as they share the same lifecycle.
  45  	// txMu protects accesses to buckets and tx on Range requests.

vendor\go.etcd.io\etcd\server\v3\mvcc\backend\tx_buffer.go:
  52  func (txw *txWriteBuffer) putSeq(bucket Bucket, k, v []byte) {
  53: 	// TODO: Add (in tests?) verification whether k>b[len(b)]
  54  	txw.putInternal(bucket, k, v)

vendor\go.etcd.io\etcd\server\v3\verify\verify.go:
  83  
  84: 	// TODO: Perform validation of consistency of membership between
  85  	// backend/members & WAL confstate (and maybe storev2 if still exists).

vendor\go.etcd.io\etcd\server\v3\wal\wal.go:
  421  // all the records and error ErrSnapshotMismatch.
  422: // TODO: detect not-last-snap error.
  423: // TODO: maybe loose the checking of match.
  424  // After ReadAll, the WAL will be ready for appending new records.

  894  func (w *WAL) saveEntry(e *raftpb.Entry) error {
  895: 	// TODO: add MustMarshalTo to reduce one allocation.
  896  	b := pbutil.MustMarshal(e)

  925  
  926: 	// TODO(xiangli): no more reference operator
  927  	for i := range ents {

vendor\go.opencensus.io\internal\traceinternals.go:
  21  // Trace allows internal access to some trace functionality.
  22: // TODO(#412): remove this
  23  var Trace interface{}

vendor\go.opencensus.io\plugin\ochttp\client_stats.go:
  48  	if req.Body == nil {
  49: 		// TODO: Handle cases where ContentLength is not set.
  50  		track.reqSize = -1

vendor\go.opencensus.io\plugin\ochttp\client.go:
  63  
  64: 	// TODO: Implement tag propagation for HTTP.
  65  }

  72  	}
  73: 	// TODO: remove excessive nesting of http.RoundTrippers here.
  74  	format := t.Propagation

vendor\go.opencensus.io\plugin\ochttp\server.go:
  133  	if r.Body == nil {
  134: 		// TODO: Handle cases where ContentLength is not set.
  135  	} else if r.ContentLength > 0 {

  159  	if r.Body == nil {
  160: 		// TODO: Handle cases where ContentLength is not set.
  161  		track.reqSize = -1

vendor\go.opencensus.io\plugin\ochttp\span_annotating_client_trace.go:
  29  
  30: // TODO: Remove NewSpanAnnotator at the next release.
  31  

vendor\go.opencensus.io\plugin\ochttp\trace.go:
  26  
  27: // TODO(jbd): Add godoc examples.
  28  

  49  
  50: // TODO(jbd): Add message events for request and response size.
  51  

  56  	name := t.formatSpanName(req)
  57: 	// TODO(jbd): Discuss whether we want to prefix
  58  	// outgoing requests with Sent.

vendor\go.opencensus.io\stats\view\aggregation_data.go:
  168  
  169: // TODO(songy23): support exemplar attachments.
  170  func (a *DistributionData) addSample(v float64, attachments map[string]interface{}, t time.Time) {

  272  	default:
  273: 		// TODO: [rghetia] when we have a use case for TypeGaugeDistribution.
  274  		panic("unsupported metricdata.Type")

vendor\go.opencensus.io\stats\view\doc.go:
  45  
  46: // TODO(acetechnologist): Add a link to the language independent OpenCensus
  47  // spec when it is available.

vendor\go.opencensus.io\stats\view\worker.go:
  231  func (w *worker) SetReportingPeriod(d time.Duration) {
  232: 	// TODO(acetechnologist): ensure that the duration d is more than a certain
  233  	// value. e.g. 1s

vendor\go.opencensus.io\trace\spanbucket.go:
  24  // defaultLatencies contains the default latency bucket bounds.
  25: // TODO: consider defaults, make configurable
  26  var defaultLatencies = [...]time.Duration{

vendor\go.opencensus.io\trace\trace.go:
  104  // SpanContext is not an implementation of context.Context.
  105: // TODO: add reference to external Census docs for SpanContext.
  106  type SpanContext struct {

vendor\go.opencensus.io\trace\propagation\propagation.go:
   17  
   18: // TODO: link to external spec document.
   19  

  107  
  108: // TODO(jbd): Find a more representative but short name for HTTPFormat.

vendor\go.opentelemetry.io\contrib\instrumentation\net\http\otelhttp\handler.go:
  221  
  222: 	// TODO: Consider adding an event after each read and write, possibly as an
  223  	// option (defaulting to off), so as to not create needlessly verbose spans.

vendor\go.opentelemetry.io\contrib\instrumentation\net\http\otelhttp\wrap.go:
  53  // bytes written, the last error, and to catch the returned statusCode
  54: // TODO: The wrapped http.ResponseWriter doesn't implement any of the optional
  55  // types (http.Hijacker, http.Pusher, http.CloseNotifier, http.Flusher, etc)

vendor\go.starlark.net\internal\compile\compile.go:
   150  
   151: // TODO(adonovan): add dynamic checks for missing opcodes in the tables below.
   152  

   823  // addUint32 encodes x as 7-bit little-endian varint.
   824: // TODO(adonovan): opt: steal top two bits of opcode
   825  // to encode the number of complete bytes that follow.

   996  	case resolve.Cell:
   997: 		// TODO(adonovan): opt: make a single op for LOCAL<n>, SETCELL.
   998  		fcomp.emit1(LOCAL, uint32(bind.Index))

  1016  	case resolve.Free:
  1017: 		// TODO(adonovan): opt: make a single op for FREE<n>, CELL.
  1018  		fcomp.emit1(FREE, uint32(bind.Index))

  1020  	case resolve.Cell:
  1021: 		// TODO(adonovan): opt: make a single op for LOCAL<n>, CELL.
  1022  		fcomp.emit1(LOCAL, uint32(bind.Index))

  1382  		// short-circuit operators
  1383: 		// TODO(adonovan): use ifelse to simplify conditions.
  1384  		case syntax.OR:

  1498  	// However, no gain was measured on a workload analogous to Bazel loading;
  1499: 	// TODO(adonovan): opt: re-evaluate on a Bazel analysis-like workload.
  1500  	//

  1531  	case *syntax.Literal:
  1532: 		// TODO(adonovan): opt: support INT/FLOAT/BIGINT constant folding.
  1533  		switch e.Token {

  1579  func (fcomp *fcomp) binop(pos syntax.Position, op syntax.Token) {
  1580: 	// TODO(adonovan): simplify by assuming syntax and compiler constants align.
  1581  	fcomp.setPos(pos)

  1626  func (fcomp *fcomp) call(call *syntax.CallExpr) {
  1627: 	// TODO(adonovan): opt: Use optimized path for calling methods
  1628  	// of built-ins: x.f(...) to avoid materializing a closure.

  1704  
  1705: 	// TODO(adonovan): avoid this with a more flexible encoding.
  1706  	if p >= 256 || n >= 256 {

  1830  	if debug {
  1831: 		// TODO(adonovan): do compilations sequentially not as a tree,
  1832  		// to make the log easier to read.

vendor\go.starlark.net\starlark\eval.go:
  1122  
  1123: 	// TODO(adonovan): opt: preallocate result array.
  1124  

vendor\go.starlark.net\starlark\hashtable.go:
  156  	// Double the number of buckets and rehash.
  157: 	// TODO(adonovan): opt:
  158  	// - avoid reentrant calls to ht.insert, and specialize it.

  274  
  275: 	// TODO(adonovan): opt: remove completely empty bucket from bucket list.
  276  

vendor\go.starlark.net\starlark\interp.go:
  14  
  15: const vmdebug = false // TODO(adonovan): use a bitfield of specific kinds of error.
  16  
  17: // TODO(adonovan):
  18  // - optimize position table.

  72  
  73: 	// TODO(adonovan): add static check that beneath this point
  74  	// - there is exactly one return statement

  90  		if op >= compile.OpcodeArgMin {
  91: 			// TODO(adonovan): opt: profile this.
  92  			// Perhaps compiling big endian would be less work to decode?

vendor\go.starlark.net\starlark\library.go:
   709  
   710: 	// TODO(adonovan): analyze overflow/underflows cases for 32-bit implementations.
   711  	if len(args) == 1 {

  1968  	if s := string(b.Receiver().(String)); s != "" {
  1969: 		// TODO(adonovan): handle CRLF correctly.
  1970  		if keepends {

vendor\go.starlark.net\starlark\profile.go:
   55  
   56: // TODO(adonovan):
   57  // - make Start/Stop fully thread-safe.

   89  
   90: 	// TODO(adonovan): make the API fully concurrency-safe.
   91  	// The main challenge is racy reads/writes of profiler.events,

  135  
  136: // TODO(adonovan): experiment with smaller values,
  137  // which trade space and time for greater precision.

  297  		// in large functions or if functions are numerous.
  298: 		// TODO(adonovan): fix: try making this cleaner by treating
  299  		// each bytecode segment as a Profile.Mapping.

vendor\go.starlark.net\starlark\value.go:
  393  	// Equal float and int values must yield the same hash.
  394: 	// TODO(adonovan): opt: if f is non-integral, and thus not equal
  395  	// to any Int, we can avoid the Int conversion and use a cheaper hash.

vendor\go.starlark.net\syntax\parse.go:
   9  //
  10: // TODO(adonovan): use syntax.Error more systematically throughout the
  11  // package.  Verify that error positions are correct using the

vendor\go.starlark.net\syntax\scan.go:
  346  func (sc *scanner) peekRune() rune {
  347: 	// TODO(adonovan): opt: measure and perhaps inline eof.
  348  	if sc.eof() {

vendor\go.starlark.net\syntax\walk.go:
  19  
  20: 	// TODO(adonovan): opt: order cases using profile data.
  21  	switch n := n.(type) {

vendor\go.uber.org\zap\zapcore\encoder.go:
  265  func FullCallerEncoder(caller EntryCaller, enc PrimitiveArrayEncoder) {
  266: 	// TODO: consider using a byte-oriented API to save an allocation.
  267  	enc.AppendString(caller.String())

  272  func ShortCallerEncoder(caller EntryCaller, enc PrimitiveArrayEncoder) {
  273: 	// TODO: consider using a byte-oriented API to save an allocation.
  274  	enc.AppendString(caller.TrimmedPath())

vendor\golang.org\x\crypto\chacha20\xor.go:
  22  		// 32-bit unaligned little endian loads and stores.
  23: 		// TODO: delete once the compiler does a reliably
  24  		// good job with the generic code below.

vendor\golang.org\x\crypto\internal\poly1305\sum_s390x.s:
  352  	// reduce again after summation
  353: 	// TODO(mundaym): there might be a more efficient way to do this
  354  	// now that we only have 1 active lane. For example, we could

  358  	// carry h[1] through to h[4] so that only h[4] can exceed 2²⁶ - 1
  359: 	// TODO(mundaym): in testing this final carry was unnecessary.
  360  	// Needs a proof before it can be removed though.

vendor\golang.org\x\crypto\pkcs12\internal\rc2\rc2.go:
  27  func New(key []byte, t1 int) (cipher.Block, error) {
  28: 	// TODO(dgryski): error checking for key length
  29  	return &rc2Cipher{

vendor\golang.org\x\crypto\ssh\channel.go:
  306  	if length > ch.maxIncomingPayload {
  307: 		// TODO(hanwen): should send Disconnect?
  308  		return errors.New("ssh: incoming packet exceeds maximum payload size")

  318  		ch.windowMu.Unlock()
  319: 		// TODO(hanwen): should send Disconnect with reason?
  320  		return errors.New("ssh: remote side wrote too much")

vendor\golang.org\x\crypto\ssh\cipher.go:
  24  const (
  25: 	packetSizeMultiple = 16 // TODO(huin) this should be determined by the cipher.
  26  

vendor\golang.org\x\crypto\ssh\connection.go:
  71  
  72: 	// TODO(hanwen): consider exposing:
  73  	//   RequestKeyChange

vendor\golang.org\x\mod\module\module.go:
  248  //
  249: // TODO(rsc): We would like to allow Unicode letters, but that requires additional
  250  // care in the safe encoding (see "escaped paths" above).

  592  func CheckPathMajor(v, pathMajor string) error {
  593: 	// TODO(jayconrod): return errors or panic for invalid inputs. This function
  594  	// (and others) was covered by integration tests for cmd/go, and surrounding

vendor\golang.org\x\net\bpf\constants.go:
   66  //
   67: // TODO: should we prune this list? Some of these extensions seem
   68  // either broken or near-impossible to use correctly, whereas other

   82  	//
   83: 	// TODO: better documentation. How nice an API do we want to
   84  	// provide for these esoteric extensions?

  107  	//
  108: 	// TODO: figure out what this rxhash actually is.
  109  	ExtRXHash Extension = 32

  117  	//
  118: 	// TODO: I think this might be a lie: it reads bit 0x1000 of the
  119  	// VLAN header, which changed meaning in recent revisions of the

vendor\golang.org\x\net\bpf\vm.go:
   96  
   97: 	// TODO(mdlayher): implement:
   98  	// - NegateA:

  101  
  102: 	// TODO(mdlayher): add interop tests that check signedness of ALU
  103  	// operations against kernel implementation, and make sure Go

vendor\golang.org\x\net\context\context.go:
  48  
  49: // TODO returns a non-nil, empty Context. Code should use context.TODO when
  50  // it's unclear which Context to use or it is not yet available (because the

vendor\golang.org\x\net\html\doc.go:
  104  
  105: // TODO(nigeltao): Does a DOM API belong in this package or a separate one?
  106: // TODO(nigeltao): How does parsing interact with a JavaScript engine?

vendor\golang.org\x\net\html\entity.go:
  2158  var entity2 = map[string][2]rune{
  2159: 	// TODO(nigeltao): Handle replacements that are wider than their names.
  2160  	// "nLt;":                     {'\u226A', '\u20D2'},

vendor\golang.org\x\net\html\parse.go:
   189  // https://html.spec.whatwg.org/multipage/parsing.html#parsing-elements-that-contain-only-text
   190: // TODO: Since both RAWTEXT and RCDATA states are treated as tokenizer's part
   191  // officially, need to make tokenizer consider both states.

   465  		case a.Td, a.Th:
   466: 			// TODO: remove this divergence from the HTML5 spec.
   467  			//

   480  		case a.Template:
   481: 			// TODO: remove this divergence from the HTML5 spec.
   482  			if n.Namespace != "" {

   486  		case a.Head:
   487: 			// TODO: remove this divergence from the HTML5 spec.
   488  			//

   665  		case a.Template:
   666: 			// TODO: remove this divergence from the HTML5 spec.
   667  			//

   703  			}
   704: 			// TODO: remove this further divergence from the HTML5 spec.
   705  			//

  1191  	case ErrorToken:
  1192: 		// TODO: remove this divergence from the HTML5 spec.
  1193  		if len(p.templateStack) > 0 {

  1213  
  1214: 	// TODO: this is a fairly literal line-by-line translation of that algorithm.
  1215  	// Once the code successfully parses the comprehensive test suite, we should

  1937  		}
  1938: 		// TODO: remove this divergence from the HTML5 spec.
  1939  		//

vendor\golang.org\x\net\html\charset\charset.go:
  101  
  102: 	// TODO: change default depending on user's locale?
  103  	return charmap.Windows1252, "windows-1252", false

vendor\golang.org\x\net\http\httpguts\httplex.go:
  121  func trimOWS(x string) string {
  122: 	// TODO: consider using strings.Trim(x, " \t") instead,
  123  	// if and when it's fast enough. See issue 10292.

vendor\golang.org\x\net\http2\client_conn_pool.go:
   40  
   41: // TODO: use singleflight for dialing and addConnCalls?
   42  type clientConnPool struct {

   44  
   45: 	mu sync.Mutex // TODO: maybe switch to RWMutex
   46: 	// TODO: add support for sharing conns based on cert names
   47  	// (e.g. share conn for googleapis.com and appspot.com)

   63  func (p *clientConnPool) getClientConn(req *http.Request, addr string, dialOnMiss bool) (*ClientConn, error) {
   64: 	// TODO(dneil): Dial a new connection when t.DisableKeepAlives is set?
   65  	if isConnectionCloseRequest(req) && dialOnMiss {

  250  	defer p.mu.Unlock()
  251: 	// TODO: don't close a cc if it was just added to the pool
  252  	// milliseconds ago and has never been used. There's currently

vendor\golang.org\x\net\http2\databuffer.go:
  19  //
  20: // TODO: Benchmark to determine if the pools are necessary. The GC may have
  21  // improved enough that we can instead allocate chunks like this:

vendor\golang.org\x\net\http2\frame.go:
  281  
  282: 	// TODO: let getReadBuf be configurable, and use a less memory-pinning
  283  	// allocator in server.go to minimize memory pinned for many idle conns.

  318  
  319: 	// TODO: track which type of frame & with which flags was sent
  320  	// last. Then return an error (unless AllowIllegalWrites) if

vendor\golang.org\x\net\http2\http2.go:
  255  //
  256: // TODO: pick a less arbitrary value? this is a bit under
  257  // (3 x typical 1500 byte MTU) at least. Other than that,

vendor\golang.org\x\net\http2\server.go:
     4  
     5: // TODO: turn off the serve goroutine when idle, so
     6  // an idle conn only has the readFrames goroutine active. (which could

    16  
    17: // TODO (maybe): add a mechanism for Handlers to going into
    18  // half-closed-local mode (rw.(io.Closer) test?) but not exit their

    57  	handlerChunkWriteSize  = 4 << 10
    58: 	defaultMaxStreams      = 250 // TODO: make this 100 as the GFE seems to?
    59  	maxQueuedControlFrames = 10000

    89  	// Negative or zero no limit.
    90: 	// TODO: implement
    91  	MaxHandlers int

   176  func (s *Server) maxQueuedControlFrames() int {
   177: 	// TODO: if anybody asks, add a Server field, and remember to define the
   178  	// behavior of negative values.

   459  			//
   460: 			// TODO: optionally enforce? Or enforce at the time we receive
   461  			// a new request, and verify the ServerName matches the :authority?

   686  //
   687: // TODO: remove this helper function once http2 can use build
   688  // tags. See comment in isClosedConnError.

   702  
   703: 	// TODO: remove this string search and be more like the Windows
   704  	// case below. That might involve modifying the standard library

   710  
   711: 	// TODO(bradfitz): x/tools/cmd/bundle doesn't really support
   712  	// build tags, so I can't make an http2_windows.go file with

  1025  	}()
  1026: 	timer := time.NewTimer(prefaceTimeout) // TODO: configurable on *Server?
  1027  	defer timer.Stop()

  1363  //
  1364: // TODO: configurable?
  1365  var goAwayTimeout = 1 * time.Second

  1407  		if clientGone {
  1408: 			// TODO: could we also get into this state if
  1409  			// the peer does a half close

  1412  			// our open replies?  Investigate.
  1413: 			// TODO: add CloseWrite to crypto/tls.Conn first
  1414  			// so we have a way to test this? I suppose

  1616  	}
  1617: 	// TODO: judging by RFC 7540, Section 6.5.3 each SETTINGS frame should be
  1618  	// acknowledged individually, even if multiple are received before the ACK.

  1992  			if !httpguts.ValidTrailerHeader(key) {
  1993: 				// TODO: send more details to the peer somehow. But http2 has
  1994  				// no way to send debug data at a stream level. Discuss with

  2434  
  2435: 	// TODO: adjust buffer writing sizes based on server config, frame size updates from peer, etc
  2436  	bw *bufio.Writer // writing to a chunkWriter{this *responseWriterState}

  2520  		if _, ok := rws.snapHeader["Date"]; !ok {
  2521: 			// TODO(bradfitz): be faster here, like net/http? measure.
  2522  			date = time.Now().UTC().Format(http.TimeFormat)

  2531  		// down the TCP connection when idle, like we do for HTTP/1.
  2532: 		// TODO: remove more Connection-specific header fields here, in addition
  2533  		// to "Connection".

  2804  	if rws.sentContentLen != 0 && rws.wroteBytes > rws.sentContentLen {
  2805: 		// TODO: send a RST_STREAM
  2806  		return 0, errors.New("http2: handler wrote more than declared Content-Length")

vendor\golang.org\x\net\http2\transport.go:
   381  	}
   382: 	// TODO(dneil): Clean up tests where cs.cc.cond is nil.
   383  	if cs.cc.cond != nil {

   679  
   680: 	// TODO: adjust this writer size to account for frame size +
   681  	// MTU + crypto/tls record padding.

   694  
   695: 	// TODO: SetMaxDynamicTableSize, SetMaxDynamicTableSizeLimit on
   696  	// henc in response to SETTINGS frames?

   938  	nextID := cc.nextStreamID
   939: 	// TODO: do clients send GOAWAY too? maybe? Just Close:
   940  	cc.mu.Unlock()

  1254  
  1255: 	// TODO(bradfitz): this is a copy of the logic in net/http. Unify somewhere?
  1256  	if !cc.t.disableCompression() &&

  1416  
  1417: 	// TODO: write h12Compare test showing whether
  1418  	// Request.Body is closed by the Transport,

  1631  			if err == nil {
  1632: 				// TODO(bradfitz): this flush is for latency, not bandwidth.
  1633  				// Most requests won't need this. Make this opt-in or

  2058  	// Close any response bodies if the server closes prematurely.
  2059: 	// TODO: also do this if we've written the headers but not
  2060  	// gotten a response yet.

  2199  		if cs.trace != nil {
  2200: 			// TODO(bradfitz): move first response byte earlier,
  2201  			// when we first read the 9 byte header, not waiting

  2326  		} else {
  2327: 			// TODO: care? unlike http/1, it won't mess up our framing, so it's
  2328  			// more safe smuggling-wise to ignore.

  2330  	} else if len(clens) > 1 {
  2331: 		// TODO: care? unlike http/1, it won't mess up our framing, so it's
  2332  		// more safe smuggling-wise to ignore.

  2377  		// No pseudo header fields are defined for trailers.
  2378: 		// TODO: ConnectionError might be overly harsh? Check.
  2379  		return ConnectionError(ErrCodeProtocol)

  2476  
  2477: 		// TODO(dneil): Acquiring this mutex can block indefinitely.
  2478  		// Move flow control return to a goroutine?

  2517  		// We probably did ask for this, but canceled. Just ignore it.
  2518: 		// TODO: be stricter here? only silently ignore things which
  2519  		// we canceled, but not things which were closed normally

  2616  func (rl *clientConnReadLoop) endStream(cs *clientStream) {
  2617: 	// TODO: check that any declared content-length matches, like
  2618  	// server.go's (*stream).endStream method.

  2660  	if f.ErrCode != 0 {
  2661: 		// TODO: deal with GOAWAY more. particularly the error code
  2662  		cc.vlogf("transport got GOAWAY with error code = %v", f.ErrCode)

  2731  		default:
  2732: 			// TODO(bradfitz): handle more settings? SETTINGS_HEADER_TABLE_SIZE probably.
  2733  			cc.vlogf("Unhandled Setting: %v", s)

  2778  	if cs == nil {
  2779: 		// TODO: return error if server tries to RST_STREAM an idle stream
  2780  		return nil

  2872  func (cc *ClientConn) writeStreamReset(streamID uint32, code ErrCode, err error) {
  2873: 	// TODO: map err to more interesting error codes, once the
  2874  	// HTTP community comes up with some. But currently for

vendor\golang.org\x\net\http2\write.go:
   33  //
   34: // TODO: decide whether to a) use this in the client code (which didn't
   35  // end up using this yet, because it has a simpler design, not

  198  func (w *writeResHeaders) staysWithinBuffer(max int) bool {
  199: 	// TODO: this is a common one. It'd be nice to return true
  200  	// here and get into the fast path if we could be clever and

  263  func (w *writePushPromise) staysWithinBuffer(max int) bool {
  264: 	// TODO: see writeResHeaders.staysWithinBuffer
  265  	return false

  358  			if !httpguts.ValidHeaderFieldValue(v) {
  359: 				// TODO: return an error? golang.org/issue/14048
  360  				// For now just omit it.

  362  			}
  363: 			// TODO: more of "8.1.2.2 Connection-Specific Header Fields"
  364  			if isTE && v != "trailers" {

vendor\golang.org\x\net\http2\writesched.go:
  200  	wr := q.s[0]
  201: 	// TODO: less copy-happy queue.
  202  	copy(q.s, q.s[1:])

vendor\golang.org\x\net\http2\hpack\hpack.go:
  145  
  146: // TODO: add method *Decoder.Reset(maxSize, emitFunc) to let callers re-use Decoders and their
  147  // underlying buffers for garbage reasons.

  215  //
  216: // TODO: remove this method and make it incremental later? This is
  217  // easier for debugging now.

  454  		m += 7
  455: 		if m >= 63 { // TODO: proper overflow check. making this up.
  456  			return 0, origP, errVarintOverflow

vendor\golang.org\x\net\idna\idna9.0.0.go:
   32  // evaluated string as lookup.
   33: // TODO: the current error handling is, in my opinion, the least opinionated.
   34  // Other strategies are also viable, though:

  317  
  318: 	// TODO: profiles
  319  	// Register: recommended for approving domain names: don't do any mappings

  430  		switch p.simplify(info(v).category()) {
  431: 		// TODO: handle the NV8 defined in the Unicode idna data set to allow
  432  		// for strict conformance to IDNA2008.

  482  		}
  483: 		// TODO: the punycode converters require strings as input.
  484  		s = string(b)

  570  	case validNV8, validXV8:
  571: 		// TODO: handle V2008
  572  		cat = valid

  676  	trie := p.trie // p.checkJoiners is only set if trie is set.
  677: 	// TODO: merge the use of this in the trie.
  678  	v, sz := trie.lookupString(s)

vendor\golang.org\x\net\idna\idna10.0.0.go:
   33  // evaluated string as lookup.
   34: // TODO: the current error handling is, in my opinion, the least opinionated.
   35  // Other strategies are also viable, though:

  315  
  316: 	// TODO: profiles
  317  	// Register: recommended for approving domain names: don't do any mappings

  347  	}
  348: 	// TODO: allow for a quick check of the tables data.
  349  	// It seems like we should only create this error on ToASCII, but the

  428  func normalize(p *Profile, s string) (mapped string, isBidi bool, err error) {
  429: 	// TODO: consider first doing a quick check to see if any of these checks
  430  	// need to be done. This will make it slower in the general case, but

  437  func validateRegistration(p *Profile, s string) (idem string, bidi bool, err error) {
  438: 	// TODO: filter need for normalization in loop below.
  439  	if !norm.NFC.IsNormalString(s) {

  449  		switch p.simplify(info(v).category()) {
  450: 		// TODO: handle the NV8 defined in the Unicode idna data set to allow
  451  		// for strict conformance to IDNA2008.

  465  	}
  466: 	// TODO: also store bidi info for mapped data. This is possible, but a bit
  467  	// cumbersome and not for the common case.

  532  		}
  533: 		// TODO: the punycode converters require strings as input.
  534  		s = string(b)

  620  	case validNV8, validXV8:
  621: 		// TODO: handle V2008
  622  		cat = valid

  630  	}
  631: 	// TODO: detect whether string may have to be normalized in the following
  632  	// loop.

  728  	trie := p.trie // p.checkJoiners is only set if trie is set.
  729: 	// TODO: merge the use of this in the trie.
  730  	v, sz := trie.lookupString(s)

vendor\golang.org\x\net\idna\trie.go:
  18  	if c&inlineXOR == inlineXOR {
  19: 		// TODO: support and handle two-byte inline masks
  20  		b[len(b)-1] ^= byte(index)

vendor\golang.org\x\net\internal\socks\socks.go:
  299  		b = append(b, up.Password...)
  300: 		// TODO(mikio): handle IO deadlines and cancelation if
  301  		// necessary

vendor\golang.org\x\net\trace\events.go:
   71  	for i, name := range data.Families {
   72: 		// TODO(sameer): move this loop under the family lock.
   73  		f := getEventFamily(name)

  261  	//
  262: 	// TODO(sameer): change this to a ring buffer to avoid the array copy
  263  	// when we hit maxEventsPerLog.

  328  		}
  329: 		// TODO(sameer): if this causes allocations on a critical path,
  330  		// change eventLog.What to be a fmt.Stringer, as in trace.go.

vendor\golang.org\x\net\trace\histogram.go:
  36  func (h *histogram) addMeasurement(value int64) {
  37: 	// TODO: assert invariant
  38  	h.sum += value

vendor\golang.org\x\net\trace\trace.go:
  127  
  128: 	// TODO(jbd): Serve Traces from /debug/traces in the future?
  129  	// There is no requirement for a request to be present to have traces.

  628  // the Free method when it is done with them.
  629: // TODO(dsymonds): keep track of traced requests in separate buckets.
  630  func (b *traceBucket) Copy(tracedOnly bool) traceList {

  908  
  909: var traceFreeList = make(chan *trace, 1000) // TODO(dsymonds): Use sync.Pool?
  910  

vendor\golang.org\x\net\websocket\hybi.go:
  428  	}
  429: 	// TODO(ukai): send Sec-WebSocket-Extensions.
  430  	err = config.Header.WriteSubset(bw, handshakeHeader)

  564  	}
  565: 	// TODO(ukai): send Sec-WebSocket-Extensions.
  566  	if c.Header != nil {

vendor\golang.org\x\oauth2\oauth2.go:
  163  	if state != "" {
  164: 		// TODO(light): Docs say never to omit state; don't allow empty.
  165  		v.Set("state", state)

vendor\golang.org\x\oauth2\jws\jws.go:
  120  	if len(s) < 2 {
  121: 		// TODO(jbd): Provide more context about the error.
  122  		return nil, errors.New("jws: invalid token received")

vendor\golang.org\x\sys\cpu\cpu_gccgo_s390x.go:
  13  
  14: // TODO(mundaym): the following feature detection functions are currently
  15  // stubs. See https://golang.org/cl/162887 for how to fix this.

vendor\golang.org\x\sys\execabs\execabs_go119.go:
  12  func isGo119ErrDot(err error) bool {
  13: 	// TODO: return errors.Is(err, exec.ErrDot)
  14  	return strings.Contains(err.Error(), "current directory")

vendor\golang.org\x\sys\plan9\syscall_plan9.go:
  281  	r0, _, _ := Syscall(SYS_NSEC, uintptr(unsafe.Pointer(&scratch)), 0, 0)
  282: 	// TODO(aram): remove hack after I fix _nsec in the pc64 kernel.
  283  	if r0 == 0 {

vendor\golang.org\x\sys\unix\epoll_zos.go:
   16  // Analogous to epoll_event on Linux.
   17: // TODO(neeilan): Pad is because the Linux kernel expects a 96-bit struct. We never pass this to the kernel; remove?
   18  type EpollEvent struct {

   47  
   48: // TODO(neeilan): We can eliminate these epToPoll / pToEpoll calls by using identical mask values for POLL/EPOLL
   49  // constants where possible The lower 16 bits of epoll events (uint32) can fit any system poll event (int16).

  139  	case EPOLL_CTL_ADD:
  140: 		// TODO(neeilan): When we make epfds and fds disjoint, detect epoll
  141  		// loops here (instances watching each other) and return ELOOP.

vendor\golang.org\x\sys\unix\ifreq_linux.go:
   42  
   43: // TODO(mdlayher): get/set methods for hardware address sockaddr, char array, etc.
   44  

  119  
  120: // TODO(mdlayher): export as IfreqData? For now we can provide helpers such as
  121  // IoctlGetEthtoolDrvinfo which use these APIs under the hood.

vendor\golang.org\x\sys\unix\ioctl_linux.go:
  187  
  188: // TODO(mdlayher): export if and when IfreqData is exported.
  189  

vendor\golang.org\x\sys\unix\ioctl_zos.go:
  27  func IoctlSetWinsize(fd int, req uint, value *Winsize) error {
  28: 	// TODO: if we get the chance, remove the req parameter and
  29  	// hardcode TIOCSWINSZ.

vendor\golang.org\x\sys\unix\ioctl.go:
  36  func IoctlSetWinsize(fd int, req uint, value *Winsize) error {
  37: 	// TODO: if we get the chance, remove the req parameter and
  38  	// hardcode TIOCSWINSZ.

  47  func IoctlSetTermios(fd int, req uint, value *Termios) error {
  48: 	// TODO: if we get the chance, remove the req parameter.
  49  	err := ioctl(fd, req, uintptr(unsafe.Pointer(value)))

vendor\golang.org\x\sys\unix\readdirent_getdirentries.go:
  16  	// actual system call is getdirentries64, 64 is a good guess.
  17: 	// TODO(rsc): Can we use a single global basep for all calls?
  18  	var base = (*uintptr)(unsafe.Pointer(new(uint64)))

vendor\golang.org\x\sys\unix\syscall_aix.go:
  282  
  283: // TODO
  284  func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {

vendor\golang.org\x\sys\unix\syscall_bsd.go:
  300  	}
  301: 	// TODO(jsing): DragonFly has a "bug" (see issue 3349), which should be
  302  	// reported upstream.

  599  
  600: // TODO: wrap
  601  //	Acct(name nil-string) (err error)

vendor\golang.org\x\sys\unix\syscall_linux.go:
  90  //
  91: // TODO: some existing code incorrectly uses ioctl when it should use ioctlPtr.
  92  

vendor\golang.org\x\sys\unix\syscall_netbsd.go:
  160  
  161: // TODO
  162  func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {

vendor\golang.org\x\sys\unix\syscall_openbsd.go:
  133  
  134: // TODO
  135  func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {

vendor\golang.org\x\sys\unix\syscall_solaris.go:
  227  	// Final argument is (basep *uintptr) and the syscall doesn't take nil.
  228: 	// TODO(rsc): Can we use a single global basep for all calls?
  229  	return Getdents(fd, buf, new(uintptr))

vendor\golang.org\x\sys\unix\syscall_zos_s390x.go:
   102  func anyToSockaddr(_ int, rsa *RawSockaddrAny) (Sockaddr, error) {
   103: 	// TODO(neeilan): Implement use of first param (fd)
   104  	switch rsa.Addr.Family {

   164  	}
   165: 	// TODO(neeilan): Remove 0 in call
   166  	sa, err = anyToSockaddr(0, &rsa)

   533  func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {
   534: 	// TODO(mundaym): z/OS doesn't have wait4. I don't think getrusage does what we want.
   535  	// At the moment rusage will not be touched.

   616  	}
   617: 	// TODO(neeilan) : Remove this 0 ( added to get sys/unix compiling on z/OS )
   618  	return anyToSockaddr(0, &rsa)

  1146  	if rsa.Addr.Family != AF_UNSPEC {
  1147: 		// TODO(neeilan): Remove 0 arg added to get this compiling on z/OS
  1148  		from, err = anyToSockaddr(0, &rsa)

  1218  
  1219: 	// TODO(neeilan): Commented this out to get sys/unix compiling on z/OS. Uncomment and fix. Error: "undefined: clearsyscall"
  1220: 	//clearsyscall.Errno() // TODO(mundaym): check pre-emption rules.
  1221  

vendor\golang.org\x\sys\unix\sysvshm_unix.go:
  36  	// Use unsafe to convert addr into a []byte.
  37: 	// TODO: convert to unsafe.Slice once we can assume Go 1.17
  38  	var b []byte

vendor\golang.org\x\sys\unix\zerrors_zos_s390x.go:
  8  // Hand edited based on zerrors_linux_s390x.go
  9: // TODO: auto-generate.
  10  

vendor\golang.org\x\sys\unix\zsysnum_zos_s390x.go:
   9  
  10: // TODO: auto-generate.
  11  

vendor\golang.org\x\sys\unix\ztypes_zos_s390x.go:
  8  // Hand edited based on ztypes_linux_s390x.go
  9: // TODO: auto-generate.
  10  

vendor\golang.org\x\sys\windows\syscall_windows.go:
  1250  
  1251: // TODO(brainman): fix all needed for net
  1252  

  1383  
  1384: // TODO(brainman): fix all needed for os
  1385  func Fchdir(fd Handle) (err error)             { return syscall.EWINDOWS }

vendor\golang.org\x\sys\windows\types_windows.go:
  1305  
  1306: // TODO(mattn): SockaddrGen is union of sockaddr/sockaddr_in/sockaddr_in6_old.
  1307  // will be fixed to change variable type as suitable.

vendor\golang.org\x\sys\windows\zsyscall_windows.go:
  31  	}
  32: 	// TODO: add more here, after collecting data on the common
  33  	// error values see on Windows. (perhaps when running

vendor\golang.org\x\sys\windows\registry\zsyscall_windows.go:
  33  	}
  34: 	// TODO: add more here, after collecting data on the common
  35  	// error values see on Windows. (perhaps when running

vendor\golang.org\x\sys\windows\svc\mgr\config.go:
  30  
  31: // TODO(brainman): Password is not returned by windows.QueryServiceConfig, not sure how to get it.
  32  

vendor\golang.org\x\sys\windows\svc\mgr\service.go:
  17  
  18: // TODO(brainman): Use EnumDependentServices to enumerate dependent services.
  19  

vendor\golang.org\x\text\encoding\encoding.go:
   22  
   23: // TODO:
   24  // - There seems to be some inconsistency in when decoders return errors

  242  
  243: // TODO: consider making this error public in some form.
  244  type repertoireError interface {

vendor\golang.org\x\text\encoding\charmap\charmap.go:
  62  
  63: // TODO: implement these encodings, in order of importance.
  64  // ASCII, ISO8859_1:       Rather common. Close to Windows 1252.

vendor\golang.org\x\text\encoding\htmlindex\htmlindex.go:
  10  
  11: // TODO: perhaps have a "bare" version of the index (used by this package) that
  12  // is not pre-loaded with all encodings. Global variables in encodings prevent

  21  
  22: // TODO: allow canonicalizing names
  23  

vendor\golang.org\x\text\encoding\htmlindex\map.go:
  62  // encodings maps the internal htmlEncoding to an Encoding.
  63: // TODO: consider using a reusable index in encoding/internal.
  64  var encodings = [numEncodings]encoding.Encoding{

vendor\golang.org\x\text\encoding\japanese\iso2022jp.go:
   61  				}
   62: 				// TODO: is it correct to only skip 1??
   63  				r, size = '\ufffd', 1

  178  			//
  179: 			// TODO: do we have to special-case U+00A5 and U+203E, as per
  180  			// http://encoding.spec.whatwg.org/#iso-2022-jp

vendor\golang.org\x\text\encoding\simplifiedchinese\hzgb2312.go:
  241  	}
  242: 	// TODO: should one always terminate in ASCII state to make it safe to
  243  	// concatenate two HZ-GB2312-encoded strings?

vendor\golang.org\x\text\encoding\unicode\override.go:
  27  func BOMOverride(fallback transform.Transformer) transform.Transformer {
  28: 	// TODO: possibly allow a variadic argument of unicode encodings to allow
  29  	// specifying details of which fallbacks are supported as well as

  45  var (
  46: 	// TODO: we could use decode functions here, instead of allocating a new
  47  	// decoder on every NewDecoder as IgnoreBOM decoders can be stateless.

vendor\golang.org\x\text\encoding\unicode\unicode.go:
   21  
   22: // TODO: I think the Transformers really should return errors on unmatched
   23  // surrogate pairs and odd numbers of bytes. This is not required by RFC 2781,

  244  		UseBOM:    identifier.UTF16, // BigEnding default is preferred by RFC 2781.
  245: 		// TODO: acceptBOM | strictBOM would map to UTF16BE as well.
  246  	},

  249  		UseBOM:    identifier.UTF16, // LittleEndian default is allowed and preferred on Windows.
  250: 		// TODO: acceptBOM | strictBOM would map to UTF16LE as well.
  251  	},

  274  	// in another map). See golang.org/issue/11354.
  275: 	// TODO: consider changing this value back to 8 if the use of 1.4.* has
  276  	// been minimized.

  293  
  294: 	// TODO (maybe): strictBOM: BOM must match Endianness. This would allow:
  295  	// - UTF-16(B|L)E,version=1: writeBOM | acceptBOM | requireBOM | strictBOM

vendor\golang.org\x\text\internal\language\compose.go:
  59  	b.Tag.ScriptID = t.ScriptID
  60: 	// TODO: optimize
  61  	b.variants = b.variants[:0]

vendor\golang.org\x\text\internal\language\language.go:
   8  
   9: // TODO: Remove above NOTE after:
  10  // - verifying that tables are dropped correctly (most notably matcher tables).

  35  type Tag struct {
  36: 	// TODO: the following fields have the form TagTypeID. This name is chosen
  37  	// to allow refactoring the public package without conflicting with its

  42  	RegionID Region
  43: 	// TODO: we will soon run out of positions for ScriptID. Idea: instead of
  44  	// storing lang, region, and ScriptID codes, store only the compact index and

  67  // attempt to infer their values.
  68: // TODO: consider removing
  69  func (t Tag) Raw() (b Language, s Script, r Region) {

vendor\golang.org\x\text\internal\language\lookup.go:
   45  
   46: // TODO language normalization as well as the AliasMaps could be moved to the
   47  // higher level package, but it is a bit tricky to separate the generation.

  263  // normRegion returns a region if r is deprecated or 0 otherwise.
  264: // TODO: consider supporting BYS (-> BLR), CSK (-> 200 or CZ), PHI (-> PHL) and AFI (-> DJ).
  265: // TODO: consider mapping split up regions to new most populous one (like CLDR).
  266  func normRegion(r Region) Region {

vendor\golang.org\x\text\internal\language\parse.go:
   33  // input is not well-formed, according to BCP 47.
   34: // TODO: return the position at which the syntax error occurred?
   35  var ErrSyntax = errors.New("language: tag is not well-formed")

  230  func Parse(s string) (t Tag, err error) {
  231: 	// TODO: consider supporting old-style locale key-value pairs.
  232  	if s == "" {

  300  	var e error
  301: 	// TODO: set an error if an unknown lang, script or region is encountered.
  302  	t.LangID, e = getLangID(scan.token)

  355  	for ; len(scan.token) >= 4; scan.scan() {
  356: 		// TODO: measure the impact of needing this conversion and redesign
  357  		// the data structure if there is an issue.

  360  			// unknown variant
  361: 			// TODO: allow user-defined variants?
  362  			scan.gobble(NewValueError(scan.token))

  521  			}
  522: 			// TODO: check key value validity
  523  			if bytes.Compare(key, last) != 1 || scan.err != nil {

vendor\golang.org\x\text\internal\language\tables.go:
  2980  // of the list in likelyRegionList.
  2981: // TODO: exclude containers and user-definable regions from the list.
  2982  // Size: 1432 bytes, 358 elements

vendor\golang.org\x\text\internal\language\compact\language.go:
    9  
   10: // TODO: Remove above NOTE after:
   11  // - verifying that tables are dropped correctly (most notably matcher tables).

   41  			t, _ = t.SetTypeForKey("rg", "")
   42: 			// TODO: should we not consider "va" for the language tag?
   43  			var exact1, exact2 bool

  112  	}
  113: 	// TODO: use parent lookup table once cycle from internal package is
  114  	// removed. Probably by internalizing the table and declaring this fast

  192  func FromTag(t language.Tag) (id ID, exact bool) {
  193: 	// TODO: perhaps give more frequent tags a lower index.
  194: 	// TODO: we could make the indexes stable. This will excluded some
  195  	//       possibilities for optimization, so don't do this quite yet.

  214  		} else if _, ok := t.Extension('u'); ok {
  215: 			// TODO: va may mean something else. Consider not considering it.
  216  			// Strip all but the 'va' entry.

vendor\golang.org\x\text\language\coverage.go:
  37  
  38: // TODO:
  39  // - Support Variants, numbering systems.

vendor\golang.org\x\text\language\doc.go:
  100  
  101: // TODO: explanation on how to match languages for your own locale-specific
  102  // service.

vendor\golang.org\x\text\language\language.go:
    8  
    9: // TODO: Remove above NOTE after:
   10  // - verifying that tables are dropped correctly (most notably matcher tables).

   35  
   36: // TODO: improve performance.
   37  func (t *Tag) lang() language.Language { return t.tag().LangID }

  109  
  110: 	// TODO: LikelyScript, LikelyRegion: suppress similar to ICU.
  111  )

  310  	if tt, err := tt.Maximize(); err == nil {
  311: 		return Region{tt.RegionID}, Low // TODO: differentiate between high and low.
  312  	}

  316  	}
  317: 	return Region{_ZZ}, No // TODO: return world instead of undetermined?
  318  }

vendor\golang.org\x\text\language\match.go:
   23  
   24: // TODO(v1.0.0): consider making Matcher a concrete type, instead of interface.
   25  // There doesn't seem to be too much need for multiple types.

   86  	} else {
   87: 		// TODO: this should be an option
   88  		tt = m.default_.tag

  105  		}
  106: 		// TODO: select first language tag based on script.
  107  	}

  112  		} else if r := w.RegionID.String(); len(r) == 2 {
  113: 			// TODO: also filter macro and deprecated.
  114  			tt, _ = tt.SetTypeForKey("rg", strings.ToLower(r)+"zzzz")

  118  	// to do after the fact, so we do it here.
  119: 	// TODO: add in alternative variants to -u-va-.
  120: 	// TODO: add preferred region to -u-rg-.
  121  	if e := w.Extensions(); len(e) > 0 {

  308  	for _, alt := range matchScript {
  309: 		// TODO: also match cases where language is not the same.
  310  		if (language.Language(alt.wantLang) == l || language.Language(alt.haveLang) == l) &&

  470  			}
  471: 			// TODO: should we do the same for scripts?
  472  			// See test case: en, sr, nl ; sh ; sr

  696  func equalsRest(a, b language.Tag) bool {
  697: 	// TODO: don't include extensions in this comparison. To do this efficiently,
  698  	// though, we should handle private tags separately.

vendor\golang.org\x\text\language\parse.go:
  138  			}
  139: 		// TODO: support parsing of raw strings based on morphology or just extensions?
  140  		case error:

vendor\golang.org\x\text\language\tags.go:
  8  
  9: // TODO: Various sets of commonly use tags and regions.
  10  

vendor\golang.org\x\text\runes\cond.go:
  103  // there to satisfy this package's Transformer interface.
  104: // TODO: there are certainly room for improvements, though. For example, if
  105  // t.t == transform.Nop (which will a common occurrence) it will save a bundle

vendor\golang.org\x\text\runes\runes.go:
   83  
   84: // TODO:
   85  // - Copy: copying strings and bytes in whole-rune units.

   96  		// created by Predicate roughly in half.
   97: 		// TODO: special-case RangeTables as well.
   98  		return Transformer{remove(f)}

  102  
  103: // TODO: remove transform.RemoveFunc.
  104  

vendor\golang.org\x\text\secure\bidirule\bidirule.go:
  268  					// the string has not yet been determined to be RTL.
  269: 					// TODO: is this correct?
  270  					return n, false

  274  		}
  275: 		// TODO: using CompactClass would result in noticeable speedup.
  276  		// See unicode/bidi/prop.go:Properties.CompactClass.

  313  		}
  314: 		// TODO: using CompactClass results in noticeable speedup.
  315  		// See unicode/bidi/prop.go:Properties.CompactClass.

vendor\golang.org\x\text\transform\transform.go:
  203  
  204: // TODO: implement ReadByte (and ReadRune??).
  205  

  237  		// Append bytes from data to the last remainder.
  238: 		// TODO: limit the amount copied on first try.
  239  		n = copy(w.src[w.n:], data)

  403  
  404: // TODO: make chain use Span (is going to be fun to implement!)
  405  

  604  
  605: 		// TODO:  let transformers implement an optional Spanner interface, akin
  606  		// to norm's QuickSpan. This would even allow us to avoid any allocation.

vendor\golang.org\x\text\unicode\bidi\bidi.go:
   14  
   15: // TODO
   16  // - Transformer for reordering?

  163  
  164: // TODO: what happens if the position is > len(input)? This should return an error.
  165  

  279  
  280: // TODO: perhaps with options.
  281  // // Reorder creates a reader that reads the runes in visual order per character.

  303  
  304: // TODO: methods for
  305  // - Display order

vendor\golang.org\x\text\unicode\bidi\bracket.go:
  231  //
  232: // TODO: have separate type for "strong" directionality.
  233  func (p *bracketPairer) getStrongTypeN0(index int) Class {

  250  //
  251: // TODO: use separate type for "strong" directionality.
  252  func (p *bracketPairer) classifyPairContent(loc bracketPair, dirEmbed Class) Class {

vendor\golang.org\x\text\unicode\bidi\prop.go:
  16  
  17: // TODO: using this for bidirule reduces the running time by about 5%. Consider
  18  // if this is worth exposing or if we can find a way to speed up the Class

  42  
  43: // TODO: find a better API and expose.
  44  func (p Properties) reverseBracket(r rune) rune {

  66  
  67: // TODO: these lookup methods are based on the generated trie code. The returned
  68  // sizes have slightly different semantics from the generated code, in that it

vendor\golang.org\x\text\unicode\norm\composition.go:
  238  	if info.hasDecomposition() {
  239: 		// TODO: inline.
  240  		rb.insertDecomposed(info.Decomposition())

vendor\golang.org\x\text\unicode\norm\forminfo.go:
  107  func (p Properties) BoundaryAfter() bool {
  108: 	// TODO: loosen these conditions.
  109  	return p.isInert()

  147  func (p Properties) Decomposition() []byte {
  148: 	// TODO: create the decomposition for Hangul?
  149  	if p.index == 0 {

vendor\golang.org\x\text\unicode\norm\iter.go:
  248  				i.rb.src.copySlice(i.buf[outCopyStart:], inCopyStart, i.p)
  249: 				// TODO: this condition should not be possible, but we leave it
  250  				// in for defensive purposes.

vendor\golang.org\x\text\unicode\norm\normalize.go:
  442  		}
  443: 		// TODO: Using streamSafe to determine the boundary isn't the same as
  444  		// using BoundaryBefore. Determine which should be used.

  509  	if s := rb.ss.next(info); s == ssStarter {
  510: 		// TODO: this could be removed if we don't support merging.
  511  		if rb.nrune > 0 {

vendor\golang.org\x\text\unicode\norm\transform.go:
  55  func (f Form) transform(dst, src []byte, atEOF bool) (nDst, nSrc int, err error) {
  56: 	// TODO: get rid of reorderBuffer. See CL 23460044.
  57  	rb := reorderBuffer{}

vendor\golang.org\x\text\width\transform.go:
  183  	for n < len(src) {
  184: 		// TODO: Consider ASCII fast path. Special-casing ASCII handling can
  185  		// reduce the ns/op of BenchmarkWideASCII by about 30%. This is probably

  207  	for nSrc < len(src) {
  208: 		// TODO: Consider ASCII fast path. Special-casing ASCII handling can
  209  		// reduce the ns/op of BenchmarkWideASCII by about 30%. This is probably

vendor\golang.org\x\text\width\width.go:
   23  
   24: // TODO
   25  // 1) Reduce table size by compressing blocks.

   66  
   67: // TODO: the generated tries need to return size 1 for invalid runes for the
   68  // width to be computed correctly (each byte should render width 1)

  148  
  149: // TODO for Properties:
  150  // - Add Fullwidth/Halfwidth or Inverted methods for computing variants

  199  
  200: // TODO: Consider the following options:
  201  // - Treat Ambiguous runes that have a halfwidth counterpart as wide, or some

vendor\golang.org\x\tools\container\intsets\sparse.go:
  14  
  15: // TODO(adonovan):
  16  // - Add InsertAll(...int), RemoveAll(...int)

  18  //
  19: // TODO(adonovan): implement Dense, a dense bit vector with a similar API.
  20  // The space usage would be proportional to Max(), not Len(), and the

  22  //
  23: // TODO(adonovan): opt: make UnionWith and Difference faster.
  24  // These are the hot-spots for go/pointer.

vendor\golang.org\x\tools\go\ast\astutil\enclosing.go:
  292  	case *ast.Field:
  293: 		// TODO(adonovan): Field.{Doc,Comment,Tag}?
  294  

  300  	case *ast.File:
  301: 		// TODO test: Doc
  302  		children = append(children,

  309  	case *ast.FuncDecl:
  310: 		// TODO(adonovan): FuncDecl.Comment?
  311  

  368  	case *ast.ImportSpec:
  369: 		// TODO(adonovan): ImportSpec.{Doc,EndPos}?
  370  

  446  	case *ast.TypeSpec:
  447: 		// TODO(adonovan): TypeSpec.{Doc,Comment}?
  448  

  455  	case *ast.ValueSpec:
  456: 		// TODO(adonovan): ValueSpec.{Doc,Comment}?
  457  

  461  
  462: 	// TODO(adonovan): opt: merge the logic of ast.Inspect() into
  463  	// the switch above so we can make interleaved callbacks for

  485  //
  486: // TODO(adonovan): in some cases (e.g. Field, FieldList, Ident,
  487  // StarExpr) we could be much more specific given the path to the AST

vendor\golang.org\x\tools\go\gcexportdata\gcexportdata.go:
  110  	// The App Engine Go runtime v1.6 uses the old export data format.
  111: 	// TODO(adonovan): delete once v1.7 has been around for a while.
  112  	if bytes.HasPrefix(data, []byte("package ")) {

vendor\golang.org\x\tools\go\internal\gcimporter\bexport.go:
   59  // with with the textual export format either).
   60: // TODO(gri) enable and remove once issues caused by it are fixed
   61  const trackAllTypes = false

  111  		typIndex:      make(map[types.Type]int),
  112: 		posInfoFormat: true, // TODO(gri) might become a flag, eventually
  113  	}

  458  func (p *exporter) iface(t *types.Interface) {
  459: 	// TODO(gri): enable importer to load embedded interfaces,
  460  	// then emit Embeddeds and ExplicitMethods separately here.

  624  	} else if num, denom := constant.Num(x), constant.Denom(x); num.Kind() == constant.Int {
  625: 		// TODO(gri): add big.Rat accessor to constant.Value.
  626  		r := valueToRat(num)

  629  		// Value too large to represent as a fraction => inaccessible.
  630: 		// TODO(gri): add big.Float accessor to constant.Value.
  631  		f.SetFloat64(math.MaxFloat64) // FIXME

vendor\golang.org\x\tools\go\internal\gcimporter\bimport.go:
   89  		// the extensible format string.
   90: 		// TODO(gri) Remove this support eventually; after Go1.8.
   91  		if b == 'd' {

  153  	// complete interfaces
  154: 	// TODO(gri) re-investigate if we still need to do this in a delayed fashion
  155  	for _, typ := range p.interfaceList {

  259  		// method importer.obj, switch case importing functions).
  260: 		// TODO(gri) review/update this comment once the gc compiler handles type aliases.
  261  		if !sameObj(obj, alt) {

  276  	case aliasTag:
  277: 		// TODO(gri) verify type alias hookup is correct
  278  		pos := p.pos()

  352  func (s *fakeFileSet) pos(file string, line, column int) token.Pos {
  353: 	// TODO(mdempsky): Make use of column.
  354  

  462  		for i := p.int(); i > 0; i-- {
  463: 			// TODO(gri) replace this with something closer to fieldName
  464  			pos := p.pos()

  469  
  470: 			recv, _ := p.paramList() // TODO(gri) do we need a full param list for the receiver?
  471  			params, isddd := p.paramList()

  542  		// first defined earlier.
  543: 		// TODO(gri) Is this still true now that we have type aliases?
  544  		// See issue #23225.

  793  	// convert to little endian
  794: 	// TODO(gri) go/constant should have a more direct conversion function
  795  	//           (e.g., once it supports a big.Float based implementation)

vendor\golang.org\x\tools\go\internal\gcimporter\gcimporter.go:
   206  
   207: 		// TODO(gri): allow clients of go/importer to provide a FileSet.
   208  		// Or, define a new standard go/types/gcexportdata package.

   246  
   247: // TODO(gri) Imported objects don't have position information.
   248  //           Ideally use the debug table line info; alternatively

   657  	}
   658: 	// TODO(gri) should we provide a package?
   659  	par = types.NewVar(token.NoPos, nil, name, typ)

  1028  	// and method exists already
  1029: 	// TODO(gri) This leads to a quadratic algorithm - ok for now because method counts are small.
  1030  	base.AddMethod(types.NewFunc(token.NoPos, pkg, name, sig))

vendor\golang.org\x\tools\go\internal\gcimporter\iexport.go:
  550  			w.startType(instanceType)
  551: 			// TODO(rfindley): investigate if this position is correct, and if it
  552  			// matters.

  788  	} else if num, denom := constant.Num(x), constant.Denom(x); num.Kind() == constant.Int {
  789: 		// TODO(gri): add big.Rat accessor to constant.Value.
  790  		n := valueToRat(num)

  794  		// Value too large to represent as a fraction => inaccessible.
  795: 		// TODO(gri): add big.Float accessor to constant.Value.
  796  		_, ok := f.SetString(x.ExactString())

  820  //
  821: // TODO(mdempsky): Is this level of complexity really worthwhile?
  822  func (w *exportWriter) mpint(x *big.Int, typ types.Type) {

vendor\golang.org\x\tools\go\internal\gcimporter\iimport.go:
  503  	if r.p.version >= iexportVersionGo1_18 {
  504: 		// TODO: add support for using the kind.
  505  		_ = constant.Kind(r.int64())

  741  
  742: 			// TODO(mdempsky): Matches bimport.go, but I
  743  			// don't agree with this.

  785  		// we must always use the methods of the base (orig) type.
  786: 		// TODO provide a non-nil *Environment
  787  		t, _ := typeparams.Instantiate(nil, baseType, targs, false)

vendor\golang.org\x\tools\go\internal\gcimporter\ureader_yes.go:
  149  
  150: 	// TODO(mdempsky): Delta encoding.
  151  	posBase := r.posBase()

  198  func (pr *pkgReader) pkgIdx(idx pkgbits.Index) *types.Package {
  199: 	// TODO(mdempsky): Consider using some non-nil pointer to indicate
  200  	// the universe scope, so we don't need to keep re-reading it.

  479  
  480: 			// TODO(mdempsky): Rewrite receiver types to underlying is an
  481  			// Interface? The go/types importer does this (I think because

  559  
  560: 	// TODO(mdempsky): This is subtle, elaborate further.
  561  	//

  568  	//
  569: 	// TODO(mdempsky): Is it safe to have a single "later" slice or do
  570  	// we need to have multiple passes? See comments on CL 386002 and

  589  
  590: 	_ = r.pos() // TODO(mdempsky): Remove; this is a hacker for linker.go.
  591  	return types.NewFunc(pos, pkg, name, sig)

  605  //
  606: // TODO(mdempsky): Remove after x/tools can depend on Go 1.19.
  607  func pkgScope(pkg *types.Package) *types.Scope {

vendor\golang.org\x\tools\go\internal\packagesdriver\sizes.go:
  26  			// User's running outside of a module. All bets are off. Get GOARCH and guess compiler is gc.
  27: 			// TODO(matloob): Is this a problem in practice?
  28  			inv.Verb = "env"

vendor\golang.org\x\tools\go\internal\pkgbits\decoder.go:
   28  	//
   29: 	// TODO(mdempsky): Remove; unneeded since CL 391014.
   30  	pkgPath string

   57  //
   58: // TODO(mdempsky): Remove; unneeded since CL 391014.
   59  func (pr *PkgDecoder) PkgPath() string { return pr.pkgPath }

   67  //
   68: // TODO(mdempsky): Remove pkgPath parameter; unneeded since CL 391014.
   69  func NewPkgDecoder(pkgPath, input string) PkgDecoder {

   73  
   74: 	// TODO(mdempsky): Implement direct indexing of input string to
   75  	// avoid copying the position information.

  176  
  177: 	// TODO(mdempsky) r.data.Reset(...) after #44505 is resolved.
  178  	r.Data = *strings.NewReader(pr.DataIdx(k, idx))

  239  
  240: 	pos, _ := r.Data.Seek(0, os.SEEK_CUR) // TODO(mdempsky): io.SeekCurrent after #44505 is resolved
  241  	mHave := SyncMarker(r.rawUvarint())

  277  	fmt.Printf("\nexpected %v, reading at:\n", mWant)
  278: 	var readerPCs [32]uintptr // TODO(mdempsky): Dynamically size?
  279  	n := runtime.Callers(2, readerPCs[:])

  323  //
  324: // TODO(mdempsky): Ideally this method would have signature "Code[T
  325  // Code] T" instead, but we don't allow generic methods and the

  405  
  406: // TODO(mdempsky): These should probably be removed. I think they're a
  407  // smell that the export data format is not yet quite right.

vendor\golang.org\x\tools\go\internal\pkgbits\encoder.go:
  160  func (w *Encoder) Flush() Index {
  161: 	var sb bytes.Buffer // TODO(mdempsky): strings.Builder after #44505 is resolved
  162  

  166  
  167: 	// TODO(mdempsky): Consider writing these out separately so they're
  168  	// easier to strip, along with function bodies, so that we can prune

  212  func (w *Encoder) rawReloc(r RelocKind, idx Index) int {
  213: 	// TODO(mdempsky): Use map for lookup; this takes quadratic time.
  214  	for i, rEnt := range w.Relocs {

  240  
  241: 	// TODO(mdempsky): Save space by writing out stack frames as a
  242  	// linked list so we can share common stack frames.

  371  	b := v.Bytes()
  372: 	w.String(string(b)) // TODO: More efficient encoding.
  373  	w.Bool(v.Sign() < 0)

  377  	b := v.Append(nil, 'p', -1)
  378: 	w.String(string(b)) // TODO: More efficient encoding.
  379  }

vendor\golang.org\x\tools\go\internal\pkgbits\frames_go1.go:
  7  
  8: // TODO(mdempsky): Remove after #44505 is resolved
  9  

vendor\golang.org\x\tools\go\internal\pkgbits\reloc.go:
  16  //
  17: // TODO(mdempsky): Rename this too.
  18  type RelocEnt struct {

vendor\golang.org\x\tools\go\packages\golist_overlay.go:
   24  // sometimes incorrect.
   25: // TODO(matloob): Handle unsupported cases, including the following:
   26  // - determining the correct package to add given a new import path

   95  				if isTestFile && !hasTestFiles(p) {
   96: 					// TODO(matloob): Are there packages other than the 'production' variant
   97  					// of a package that this can match? This shouldn't match the test main package

  152  			if pkg != nil {
  153: 				// TODO(rstambler): We should change the package's path and ID
  154  				// here. The only issue is that this messes with the roots.

  190  			pkg.GoFiles = append(pkg.GoFiles, opath)
  191: 			// TODO(matloob): Adding the file to CompiledGoFiles can exhibit the wrong behavior
  192  			// if the file will be ignored due to its build tags.

  201  		for _, imp := range imports {
  202: 			// TODO(rstambler): If the package is an x test and the import has
  203  			// a test variant, make sure to replace it.

  388  func extractImports(filename string, contents []byte) ([]string, error) {
  389: 	f, err := parser.ParseFile(token.NewFileSet(), filename, contents, parser.ImportsOnly) // TODO(matloob): reuse fileset?
  390  	if err != nil {

  409  func reclaimPackage(pkg *Package, id string, filename string, contents []byte) bool {
  410: 	// TODO(rstambler): Check the message of the actual error?
  411  	// It differs between $GOPATH and module mode.

  436  func extractPackageName(filename string, contents []byte) (string, bool) {
  437: 	// TODO(rstambler): Check the message of the actual error?
  438  	// It differs between $GOPATH and module mode.
  439: 	f, err := parser.ParseFile(token.NewFileSet(), filename, contents, parser.PackageClauseOnly) // TODO(matloob): reuse fileset?
  440  	if err != nil {

vendor\golang.org\x\tools\go\packages\golist.go:
   294  	for _, query := range queries {
   295: 		// TODO(matloob): Do only one query per directory.
   296  		fdir := filepath.Dir(query)

   350  	// try to make this file into its own ad-hoc package.
   351: 	// TODO(rstambler): Should this check against the original response?
   352  	if len(response.Packages) == 0 {

   370  				filename := filepath.Join(pattern, filepath.Base(query)) // avoid recomputing abspath
   371: 				// TODO(matloob): check if the file is outside of a root dir?
   372  				for path := range state.cfg.Overlay {

   513  			// have the new behavior this logic can be deleted.
   514: 			// TODO(matloob): delete the workaround logic once all supported versions of
   515  			// Go return the errors on the proper package.

   667  		// Work around for pre-go.1.11 versions of go list.
   668: 		// TODO(matloob): they should be handled by the fallback.
   669  		// Can we delete this?

   783  		}
   784: 		// TODO(matloob): This doesn't properly handle symlinks.
   785  		r, err := filepath.Rel(rdir, dir)

   794  			// result straight from golist.
   795: 			// TODO(matloob): Implement module tiebreaking?
   796  			return path.Join(rpath, filepath.ToSlash(r)), true, nil

   841  		// even when -compiled isn't passed in.
   842: 		// TODO(#52435): Should we make the test ask for -compiled, or automatically
   843  		// request CompiledGoFiles in certain circumstances?

  1037  			output := fmt.Sprintf(`{"ImportPath": %q,"Incomplete": true,"Error": {"Pos": "","Err": %q}}`,
  1038: 				// TODO(matloob): command-line-arguments isn't correct here.
  1039  				"command-line-arguments", strings.Trim(stderr.String(), "\n"))

  1045  			output := fmt.Sprintf(`{"ImportPath": %q,"Incomplete": true,"Error": {"Pos": "","Err": %q}}`,
  1046: 				// TODO(matloob): command-line-arguments isn't correct here.
  1047  				"command-line-arguments", strings.Trim(stderr.String(), "\n"))

  1075  		// The same is true if an ad-hoc package given to go list doesn't exist.
  1076: 		// TODO(matloob): Remove these once we can depend on go list to exit with a zero status with -e even when
  1077  		// packages don't exist or a build fails.

vendor\golang.org\x\tools\go\packages\packages.go:
   446  //
   447: // TODO(adonovan): identify this struct with Package, effectively
   448  // publishing the JSON protocol.

   635  		// Overlays can invalidate export data.
   636: 		// TODO(matloob): make this check fine-grained based on dependencies on overlaid files
   637  		exportDataInvalid := len(ld.Overlay) > 0 || pkg.ExportFile == "" && pkg.PkgPath != "unsafe"

  1010  	// mark the package as IllTyped (by reporting an error).
  1011: 	// TODO(adonovan): if these errors are annoying,
  1012  	// we could just set IllTyped quietly.

  1219  	//
  1220: 	// TODO(adonovan): it would be simpler and more efficient
  1221  	// if the export data machinery invoked a callback to

vendor\golang.org\x\tools\internal\fastwalk\fastwalk.go:
  51  func Walk(root string, walkFn func(path string, typ os.FileMode) error) error {
  52: 	// TODO(bradfitz): make numWorkers configurable? We used a
  53  	// minimum of 4 to give the kernel more info about multiple

vendor\golang.org\x\tools\internal\imports\mod_cache.go:
  29  // as they do still exist.
  30: // TODO(suzmue): can we share information with the caller about
  31  // what module needs to be downloaded to import this package?

  95  //
  96: // TODO(suzmue): consider other concurrency strategies and data structures (RWLocks, sync.Map, etc)
  97  type dirInfoCache struct {

vendor\golang.org\x\tools\internal\imports\mod.go:
  259  			// don't.
  260: 			// TODO(heschi): fix this.
  261  			if _, err := r.cachePackageName(info); err == nil {

vendor\golang.org\x\tools\internal\typeparams\termlist.go:
   68  	// Quadratic algorithm, but good enough for now.
   69: 	// TODO(gri) fix asymptotic performance
   70  	used := make([]bool, len(xl))

  111  	// Quadratic algorithm, but good enough for now.
  112: 	// TODO(gri) fix asymptotic performance
  113  	var rl termlist

  125  func (xl termlist) equal(yl termlist) bool {
  126: 	// TODO(gri) this should be more efficient
  127  	return xl.subsetOf(yl) && yl.subsetOf(xl)

vendor\golang.org\x\tools\internal\typesinternal\errorcode.go:
  139  	//
  140: 	// TODO(findleyr): this error code and example are not very clear. Consider
  141  	// removing it.

vendor\google.golang.org\api\compute\v0.alpha\compute-gen.go:
  57570  // UpcomingMaintenance: Upcoming Maintenance notification information.
  57571: // TODO(b/196881882) Deprecate this proto once it's fully migrated to be
  57572  // under proto ResourceStatus.UpcomingMaintenance.

vendor\google.golang.org\api\googleapi\googleapi.go:
  318  	// a JSON/XML document, and then 1 to see EOF if we haven't yet.
  319: 	// TODO(bradfitz): detect Go 1.3+ and skip these reads.
  320  	// See https://codereview.appspot.com/58240043

  447  
  448: // TODO: Fields too

vendor\google.golang.org\api\internal\settings.go:
  89  	// We currently allow TokenSource and CredentialsFile to coexist.
  90: 	// TODO(jba): make TokenSource & CredentialsFile an error (breaking change).
  91  	nCreds := 0

vendor\google.golang.org\api\internal\third_party\uritemplates\uritemplates.go:
  172  func parseTerm(term string) (result templateTerm, err error) {
  173: 	// TODO(djd): Remove "*" suffix parsing once we check that no APIs have
  174  	// mistakenly used that attribute.

vendor\google.golang.org\api\transport\cert\default_cert.go:
  119  	if err != nil {
  120: 		// TODO(cbro): read stderr for error message? Might contain sensitive info.
  121  		return nil, err

vendor\google.golang.org\api\transport\http\dial.go:
   39  	}
   40: 	// TODO(cbro): consider injecting the User-Agent even if an explicit HTTP client is provided?
   41  	if settings.HTTPClient != nil {

  134  	if t.userAgent != "" {
  135: 		// TODO(cbro): append to existing User-Agent header?
  136  		newReq.Header.Set("User-Agent", t.userAgent)

vendor\google.golang.org\api\transport\internal\dca\dca.go:
  79  	useClientCert := os.Getenv("GOOGLE_API_USE_CLIENT_CERTIFICATE")
  80: 	// TODO(andyrzhao): Update default to return "true" after DCA feature is fully released.
  81  	return strings.ToLower(useClientCert) == "true"

vendor\google.golang.org\appengine\internal\api.go:
  322  
  323: 		// TODO(dsymonds): Wire up the shutdown handler to do a final flush.
  324  		go c.logFlusher(make(chan int))

  557  	// Truncate long log lines.
  558: 	// TODO(dsymonds): Check if this is still necessary.
  559  	const lim = 8 << 10

vendor\google.golang.org\appengine\internal\identity_vm.go:
  61  func ServerSoftware() string {
  62: 	// TODO(dsymonds): Remove fallback when we've verified this.
  63  	if s := os.Getenv("SERVER_SOFTWARE"); s != "" {

  71  
  72: // TODO(dsymonds): Remove the metadata fetches.
  73  

vendor\google.golang.org\appengine\internal\internal.go:
  77  	Code   int32
  78: 	// TODO: Remove this if we get a distinguishable error code.
  79  	Timeout bool

vendor\google.golang.org\appengine\internal\metadata.go:
  29  
  30: // TODO(dsymonds): Do we need to support default values, like Python?
  31  func mustGetMetadata(key string) []byte {

  39  func getMetadata(key string) ([]byte, error) {
  40: 	// TODO(dsymonds): May need to use url.Parse to support keys with query args.
  41  	req := &http.Request{

vendor\google.golang.org\appengine\internal\net.go:
  17  
  18: var limitSem = make(chan int, 100) // TODO(dsymonds): Use environment variable.
  19  

vendor\google.golang.org\grpc\balancer_conn_wrappers.go:
  255  func (ccb *ccBalancerWrapper) handleSwitchTo(name string) {
  256: 	// TODO: Other languages use case-insensitive balancer registries. We should
  257  	// switch as well. See: https://github.com/grpc/grpc-go/issues/5288.

  261  
  262: 	// TODO: Ensure that name is a registered LB policy when we get here.
  263  	// We currently only validate the `loadBalancingConfig` field. We need to do

  324  	// handles the balancer switch by pushing the update onto the channel.
  325: 	// TODO(easwars): Handle this inline.
  326  	acbw, ok := sc.(*acBalancerWrapper)

  379  		//
  380: 		// TODO(bar) the state transition could be wrong when tearDown() old ac
  381  		// and creating new ac, fix the transition.

vendor\google.golang.org\grpc\clientconn.go:
   491  	// mu protects the following fields.
   492: 	// TODO: split mu so the same mutex isn't used for everything.
   493  	mu              sync.RWMutex

   552  			cc.mu.Lock()
   553: 			// TODO: load balance policy runtime change is ignored.
   554  			// We may revisit this decision in the future.

   634  		cc.maybeApplyDefaultServiceConfig(s.Addresses)
   635: 		// TODO: do we need to apply a failing LB policy if there is no
   636  		// default, per the error handling design?

   786  // It does nothing if the ac is not IDLE.
   787: // TODO(bar) Move this to the addrConn section.
   788  func (ac *addrConn) connect() error {

   915  func (cc *ClientConn) GetMethodConfig(method string) MethodConfig {
   916: 	// TODO: Avoid the locking here.
   917  	cc.mu.RLock()

  1230  func (ac *addrConn) createTransport(addr resolver.Address, copts transport.ConnectOptions, connectDeadline time.Time) error {
  1231: 	// TODO: Delete prefaceReceived and move the logic to wait for it into the
  1232  	// transport.

  1371  		//
  1372: 		// TODO: add a link to the health check doc in the error message.
  1373  		channelz.Error(logger, ac.channelzID, "Health check is requested but health check function is not set.")

  1509  	mu     sync.Mutex
  1510: 	tokens float64 // TODO(dfawley): replace with atomic and remove lock.
  1511  }

  1673  	case strings.HasPrefix(target, "unix:") || strings.HasPrefix(target, "unix-abstract:"):
  1674: 		// TODO: remove when the unix resolver implements optional interface to
  1675  		// return channel authority.

  1679  	default:
  1680: 		// TODO: Define an optional interface on the resolver builder to return
  1681  		// the channel authority given the user's dial target. For resolvers

vendor\google.golang.org\grpc\rpc_util.go:
  574  	}
  575: 	// TODO(bradfitz,zhaoq): garbage. reuse buffer after proto decoding instead
  576  	// of making it for each message:

  606  //
  607: // TODO(dfawley): eliminate cp parameter by wrapping Compressor in an encoding.Compressor.
  608  func compress(in []byte, cp Compressor, compressor encoding.Compressor) ([]byte, error) {

  715  		if size > maxReceiveMessageSize {
  716: 			// TODO: Revisit the error code. Currently keep it consistent with java
  717  			// implementation.

  753  // dc takes precedence over compressor.
  754: // TODO(dfawley): wrap the old compressor/decompressor using the new API?
  755  func recv(p *parser, c baseCodec, s *transport.Stream, dc Decompressor, m interface{}, maxReceiveMessageSize int, payInfo *payloadInfo, compressor encoding.Compressor) error {

vendor\google.golang.org\grpc\server.go:
   518  func NumStreamWorkers(numServerWorkers uint32) ServerOption {
   519: 	// TODO: If/when this API gets stabilized (i.e. stream workers become the
   520  	// only way streams are processed), change the behavior of the zero value to

  1089  	hdr, payload := msgHeader(data, compData)
  1090: 	// TODO(dfawley): should we be checking len(data) instead?
  1091  	if len(payload) > s.opts.maxSendMessageSize {

  1380  	}
  1381: 	// TODO: Should we be logging if writing status failed here, like above?
  1382  	// Should the logging be in WriteStatus?  Should we ignore the WriteStatus

  1593  		}
  1594: 		// TODO: Should we log an error from WriteStatus here and below?
  1595  		return appErr

vendor\google.golang.org\grpc\service_config.go:
  199  
  200: // TODO(lyuxuan): delete this struct after cleaning up old service config implementation.
  201  type jsonMC struct {

  209  
  210: // TODO(lyuxuan): delete this struct after cleaning up old service config implementation.
  211  type jsonSC struct {

  340  	if rp.MaxAttempts > 5 {
  341: 		// TODO(retry): Make the max maxAttempts configurable.
  342  		rp.MaxAttempts = 5

vendor\google.golang.org\grpc\stream.go:
   495  	numRetriesSincePushback int  // retries since pushback; to reset backoff
   496: 	finished                bool // TODO: replace with atomic cmpxchg or sync.Once?
   497  	// attempt is the active client stream attempt.

   504  	attempt *csAttempt
   505: 	// TODO(hedging): hedging will have multiple attempts simultaneously.
   506  	committed  bool // active attempt committed for retry?

   589  
   590: 		// TODO(retry): Move down if the spec changes to not check server pushback
   591  		// before considering this a failure for throttling.

   642  
   643: 	// TODO(dfawley): we could eagerly fail here if dur puts us past the
   644  	// deadline, but unsure if it is worth doing.

   823  
   824: 	// TODO(dfawley): should we be checking len(data) instead?
   825  	if len(payload) > *cs.callInfo.maxSendMessageSize {

   883  	if cs.sentLast {
   884: 		// TODO: return an error and finish the stream instead, due to API misuse?
   885  		return nil

  1021  			Payload:  m,
  1022: 			// TODO truncate large payload.
  1023  			Data:       payInfo.uncompressedBytes,

  1112  	if t == nil {
  1113: 		// TODO: return RPC error here?
  1114  		return nil, errors.New("transport provided is nil")

  1246  	if as.sentLast {
  1247: 		// TODO: return an error and finish the stream instead, due to API misuse?
  1248  		return nil

  1287  
  1288: 	// TODO(dfawley): should we be checking len(data) instead?
  1289  	if len(payld) > *as.callInfo.maxSendMessageSize {

  1544  
  1545: 	// TODO(dfawley): should we be checking len(data) instead?
  1546  	if len(payload) > ss.maxSendMessageSize {

  1620  				Payload:  m,
  1621: 				// TODO truncate large payload.
  1622  				Data:       payInfo.uncompressedBytes,

vendor\google.golang.org\grpc\trace.go:
  101  	msg  interface{} // e.g. a proto.Message
  102: 	// TODO(dsymonds): add stringifying info to codec, and limit how much we hold here?
  103  }

vendor\google.golang.org\grpc\balancer\base\balancer.go:
  95  func (b *baseBalancer) UpdateClientConnState(s balancer.ClientConnState) error {
  96: 	// TODO: handle s.ResolverState.ServiceConfig?
  97  	if logger.V(2) {

vendor\google.golang.org\grpc\credentials\credentials.go:
  46  	// available via ctx to this call.
  47: 	// TODO(zhaoq): Define the set of the qualified keys instead of leaving
  48  	// it as an arbitrary string.

vendor\google.golang.org\grpc\grpclog\loggerv2.go:
  176  	}
  177: 	// TODO: we can also include the logging component, but that needs more
  178  	// (API) changes.

vendor\google.golang.org\grpc\internal\internal.go:
   95  	//
   96: 	// TODO: Remove this function once the RLS env var is removed.
   97  	RegisterRLSClusterSpecifierPluginForTesting func()

  103  	//
  104: 	// TODO: Remove this function once the RLS env var is removed.
  105  	UnregisterRLSClusterSpecifierPluginForTesting func()

  109  	//
  110: 	// TODO: Remove this function once the RBAC env var is removed.
  111  	RegisterRBACHTTPFilterForTesting func()

  117  	//
  118: 	// TODO: Remove this function once the RBAC env var is removed.
  119  	UnregisterRBACHTTPFilterForTesting func()

  124  	//
  125: 	// TODO: Remove this function once the Outlier Detection env var is removed.
  126  	RegisterOutlierDetectionBalancerForTesting func()

  133  	//
  134: 	// TODO: Remove this function once the Outlier Detection env var is removed.
  135  	UnregisterOutlierDetectionBalancerForTesting func()

vendor\google.golang.org\grpc\internal\binarylog\env_config.go:
  118  const (
  119: 	// TODO: this const is only used by env_config now. But could be useful for
  120  	// other config. Move to binarylog.go if necessary.

vendor\google.golang.org\grpc\internal\binarylog\method_logger.go:
  60  
  61: 	sink Sink // TODO(blog): make this plugable.
  62  }

  71  
  72: 		sink: DefaultSink, // TODO(blog): make it plugable.
  73  	}

vendor\google.golang.org\grpc\internal\binarylog\sink.go:
  34  	// for the binarylog package to update.
  35: 	DefaultSink Sink = &noopSink{} // TODO(blog): change this default (file in /tmp).
  36  )

vendor\google.golang.org\grpc\internal\credentials\util.go:
  44  //
  45: // TODO: inline this function if possible.
  46  func CloneTLSConfig(cfg *tls.Config) *tls.Config {

vendor\google.golang.org\grpc\internal\grpcutil\encode_duration.go:
  41  func EncodeDuration(t time.Duration) string {
  42: 	// TODO: This is simplistic and not bandwidth efficient. Improve it.
  43  	if t <= 0 {

vendor\google.golang.org\grpc\internal\resolver\config_selector.go:
  124  	// information will be piped into context.
  125: 	AllowRPC(ctx context.Context) error // TODO: Make this a real interceptor for filters such as rate limiting.
  126  }

vendor\google.golang.org\grpc\internal\transport\flowcontrol.go:
  119  
  120: // TODO(mmukhi): Simplify this code.
  121  // inFlow deals with inbound flow control

vendor\google.golang.org\grpc\internal\transport\handler_server.go:
   59  	contentType := r.Header.Get("Content-Type")
   60: 	// TODO: do we assume contentType is lowercase? we did before
   61  	contentSubtype, validContentType := grpcutil.ContentSubtype(contentType)

  137  	// we store both contentType and contentSubtype so we don't keep recreating them
  138: 	// TODO make sure this is consistent across handler_server and http2_server
  139  	contentSubtype string

  207  			if err != nil {
  208: 				// TODO: return error instead, when callers are able to handle it.
  209  				panic(err)

  390  
  391: 		// TODO: minimize garbage, optimize recvBuffer code/ownership
  392  		const readSize = 8196

vendor\google.golang.org\grpc\internal\transport\http2_client.go:
   432  func (t *http2Client) newStream(ctx context.Context, callHdr *CallHdr) *Stream {
   433: 	// TODO(zhaoq): Handle uint32 overflow of Stream.id.
   434  	s := &Stream{

   490  	}
   491: 	// TODO(mmukhi): Benchmark if the performance gets better if count the metadata and other header fields
   492  	// first and create a slice of that exact size.

   513  		// Send out timeout regardless its value. The server can detect timeout context by itself.
   514: 		// TODO(mmukhi): Perhaps this field should be updated when actually writing out to the wire.
   515  		timeout := time.Until(dl)

  1076  		}
  1077: 		// TODO(bradfitz, zhaoq): A copy is required here because there is no
  1078  		// guarantee f.Data() is consumed before the arrival of next frame.

  1474  //
  1475: // TODO(zhaoq): currently one reader per transport. Investigate whether this is
  1476  // optimal.
  1477: // TODO(zhaoq): Check the validity of the incoming frame sequence.
  1478  func (t *http2Client) reader() {

vendor\google.golang.org\grpc\internal\transport\http2_server.go:
   167  	}}
   168: 	// TODO(zhaoq): Have a better way to signal "no limit" because 0 is
   169  	// permitted in the HTTP2 spec.

   662  		case *http2.GoAwayFrame:
   663: 			// TODO: Handle GoAway from the client appropriately.
   664  		default:

   782  		}
   783: 		// TODO(bradfitz, zhaoq): A copy is required here because there is no
   784  		// guarantee f.Data() is consumed before the arrival of next frame.

   975  func (t *http2Server) writeHeaderLocked(s *Stream) error {
   976: 	// TODO(mmukhi): Benchmark if the performance gets better if count the metadata and other header fields
   977  	// first and create a slice of that exact size.

  1011  // There is no further I/O operations being able to perform on this stream.
  1012: // TODO(zhaoq): Now it indicates the end of entire stream. Revisit if early
  1013  // OK is adopted.

  1021  
  1022: 	// TODO(mmukhi): Benchmark if the performance gets better if count the metadata and other header fields
  1023  	// first and create a slice of that exact size.

  1040  		if err != nil {
  1041: 			// TODO: return error instead, when callers are able to handle it.
  1042  			logger.Errorf("transport: failed to marshal rpc status: %v, error: %v", p, err)

  1203  // Close starts shutting down the http2Server transport.
  1204: // TODO(zhaoq): Now the destruction is not blocked on any pending streams. This
  1205  // could cause some resource issue. Revisit this later.

  1315  	t.mu.Lock()
  1316: 	if t.state == closing { // TODO(mmukhi): This seems unnecessary.
  1317  		t.mu.Unlock()

vendor\google.golang.org\grpc\internal\transport\transport.go:
  202  		//
  203: 		// TODO: delaying ctx error seems like a unnecessary side effect. What
  204  		// we really want is to mark the stream as done, and return ctx error

vendor\google.golang.org\grpc\resolver\resolver.go:
  40  
  41: // TODO(bar) install dns resolver in init(){}.
  42  

vendor\google.golang.org\grpc\tap\tap.go:
  36  	FullMethodName string
  37: 	// TODO: More to be added.
  38  }

vendor\google.golang.org\protobuf\encoding\prototext\decode.go:
  204  		if isFieldNumberName {
  205: 			// TODO: Add an option to permit parsing field numbers.
  206  			//

vendor\google.golang.org\protobuf\internal\filedesc\desc.go:
  626  	if len(dv.bytes) > 0 && !bytes.Equal(dv.bytes, dv.val.Bytes()) {
  627: 		// TODO: Avoid panic if we're running with the race detector
  628  		// and instead spawn a goroutine that periodically resets

vendor\google.golang.org\protobuf\internal\impl\codec_map.go:
  27  func encoderFuncsForMap(fd protoreflect.FieldDescriptor, ft reflect.Type) (valueMessage *MessageInfo, funcs pointerCoderFuncs) {
  28: 	// TODO: Consider generating specialized map coders.
  29  	keyField := fd.MapKey()

vendor\google.golang.org\protobuf\internal\impl\encode.go:
  124  		e := p.Apply(mi.extensionOffset).Extensions()
  125: 		// TODO: Special handling for MessageSet?
  126  		b, err = mi.appendExtensions(b, e, opts)

vendor\google.golang.org\protobuf\internal\impl\legacy_enum.go:
  171  
  172: 	// TODO: Use the presence of a UnmarshalJSON method to determine proto2?
  173  

  178  
  179: 	// TODO: We could use the String method to obtain some enum value names by
  180  	// starting at 0 and print the enum until it produces invalid identifiers.

vendor\google.golang.org\protobuf\internal\impl\message_reflect_field.go:
   77  
   78: 	// TODO: Implement unsafe fast path?
   79  	fieldOffset := offsetOf(fs, x)

  153  
  154: 	// TODO: Implement unsafe fast path?
  155  	fieldOffset := offsetOf(fs, x)

  206  
  207: 	// TODO: Implement unsafe fast path?
  208  	fieldOffset := offsetOf(fs, x)

  271  
  272: 	// TODO: Implement unsafe fast path?
  273  	fieldOffset := offsetOf(fs, x)

  417  
  418: 	// TODO: Implement unsafe fast path?
  419  	fieldOffset := offsetOf(fs, x)

  507  // isZero is identical to reflect.Value.IsZero.
  508: // TODO: Remove this when Go1.13 is the minimally supported Go version.
  509  func isZero(v reflect.Value) bool {

vendor\google.golang.org\protobuf\internal\impl\message_reflect.go:
  449  		if got, want := fd.ContainingMessage().FullName(), mi.Desc.FullName(); got != want {
  450: 			// TODO: Should this be exact containing message descriptor match?
  451  			panic(fmt.Sprintf("extension %v has mismatching containing message: got %v, want %v", fd.FullName(), got, want))

vendor\google.golang.org\protobuf\internal\impl\message.go:
  111  	WeakFields      = map[int32]protoreflect.ProtoMessage
  112: 	UnknownFields   = unknownFieldsA // TODO: switch to unknownFieldsB
  113  	unknownFieldsA  = []byte

vendor\google.golang.org\protobuf\internal\impl\pointer_reflect.go:
  138  func (p pointer) PointerSlice() []pointer {
  139: 	// TODO: reconsider this
  140  	if p.v.IsNil() {

vendor\google.golang.org\protobuf\internal\impl\pointer_unsafe.go:
  83  func (p pointer) AsIfaceOf(t reflect.Type) interface{} {
  84: 	// TODO: Use tricky unsafe magic to directly create ifaceHeader.
  85  	return p.AsValueOf(t).Interface()

vendor\google.golang.org\protobuf\internal\impl\validate.go:
  309  						//
  310: 						// TODO: Consider storing the results of this lookup somewhere
  311  						// rather than recomputing it on every validation.

  330  				//
  331: 				// TODO: We should return ValidationUnknown when:
  332  				//   1. The resolver is not frozen. (More extensions may be added to it.)

vendor\google.golang.org\protobuf\internal\version\version.go:
  69  
  70: 		// TODO: Add metadata about the commit or build hash.
  71  		// See https://golang.org/issue/29814

vendor\google.golang.org\protobuf\proto\encode.go:
  215  	if o.Deterministic {
  216: 		// TODO: This should use a more natural ordering like NumberFieldOrder,
  217  		// but doing so breaks golden tests that make invalid assumption about

vendor\google.golang.org\protobuf\proto\merge.go:
  25  func Merge(dst, src Message) {
  26: 	// TODO: Should nil src be treated as semantically equivalent to a
  27  	// untyped, read-only, empty message? What about a nil dst?

vendor\google.golang.org\protobuf\reflect\protodesc\desc_init.go:
  237  
  238: 	// TODO: Verify that the full name does not already exist in the resolver?
  239  	// This is not as critical since most usages of NewFile will register

vendor\google.golang.org\protobuf\reflect\protodesc\desc.go:
  149  		var l protoreflect.SourceLocation
  150: 		// TODO: Validate that the path points to an actual declaration?
  151  		l.Path = protoreflect.SourcePath(loc.GetPath())

  160  		}
  161: 		// TODO: Validate that the span information is sensible?
  162  		// See https://github.com/protocolbuffers/protobuf/issues/6378.

vendor\google.golang.org\protobuf\types\descriptorpb\descriptor.pb.go:
  862  	// For bytes, contains the C escaped value.  All bytes >= 128 are escaped.
  863: 	// TODO(kenton):  Base-64 encode?
  864  	DefaultValue *string `protobuf:"bytes,7,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`

vendor\gopkg.in\gcfg.v1\doc.go:
  124  //
  125: // TODO
  126  //

vendor\gopkg.in\gcfg.v1\scanner\errors.go:
  30  		// don't print "<unknown position>"
  31: 		// TODO(gri) reconsider the semantics of Position.IsValid
  32  		return e.Pos.String() + ": " + e.Msg

vendor\gopkg.in\gcfg.v1\token\position.go:
    4  
    5: // TODO(gri) consider making this a separate package outside the go directory.
    6  

  234  func (f *File) Line(p Pos) int {
  235: 	// TODO(gri) this can be implemented much more efficiently
  236  	return f.Position(p).Line

  422  	// speed of gofmt and thus seems worthwhile (2011-04-29).
  423: 	// TODO(gri): Remove this when compilers have caught up.
  424  	i, j := 0, len(a)

vendor\gopkg.in\inf.v0\dec.go:
  24  
  25: // TODO:
  26  //  - avoid excessive deep copying (quo and rounders)

vendor\gopkg.in\warnings.v0\warnings.go:
  70  //
  71: // TODO
  72  //

vendor\gopkg.in\yaml.v2\decode.go:
  391  	if d.aliases[n] {
  392: 		// TODO this could actually be allowed in some circumstances.
  393  		failf("anchor '%s' value contains itself", n.value)

  478  			// see a string and not a time.Time.
  479: 			// TODO(v3) Drop this.
  480  			out.Set(reflect.ValueOf(n.value))

  566  		if out.Type().Elem() == reflect.TypeOf(resolved) {
  567: 			// TODO DOes this make sense? When is out a Ptr except when decoding a nil value?
  568  			elem := reflect.New(out.Type().Elem())

vendor\gopkg.in\yaml.v2\resolve.go:
   61  func shortTag(tag string) string {
   62: 	// TODO This can easily be made faster and produce less garbage.
   63  	if strings.HasPrefix(tag, longTagPrefix) {

  238  func parseTimestamp(s string) (time.Time, bool) {
  239: 	// TODO write code to check all the formats supported by
  240  	// http://yaml.org/type/timestamp.html instead of using time.Parse.

vendor\gopkg.in\yaml.v3\decode.go:
  534  	if d.aliases[n] {
  535: 		// TODO this could actually be allowed in some circumstances.
  536  		failf("anchor '%s' value contains itself", n.Value)

vendor\gopkg.in\yaml.v3\encode.go:
  414  func (e *encoder) emitScalar(value, anchor, tag string, style yaml_scalar_style_t, head, line, foot, tail []byte) {
  415: 	// TODO Kill this function. Replace all initialize calls by their underlining Go literals.
  416  	implicit := tag == ""

vendor\gopkg.in\yaml.v3\resolve.go:
  306  func parseTimestamp(s string) (time.Time, bool) {
  307: 	// TODO write code to check all the formats supported by
  308  	// http://yaml.org/type/timestamp.html instead of using time.Parse.

vendor\k8s.io\gengo\examples\deepcopy-gen\generators\deepcopy.go:
  102  
  103: // TODO: This is created only to reduce number of changes in a single PR.
  104  // Remove it and use PublicNamer instead.

  198  			// in the output directory.
  199: 			// TODO: build a more fundamental concept in gengo for dealing with modifications
  200  			// to vendored packages.

vendor\k8s.io\gengo\examples\defaulter-gen\generators\defaulter.go:
  238  	// Accumulate pre-existing default functions.
  239: 	// TODO: This is too ad-hoc.  We need a better way.
  240  	existingDefaulters := defaulterFuncMap{}

  401  		// in the output directory.
  402: 		// TODO: build a more fundamental concept in gengo for dealing with modifications
  403  		// to vendored packages.

vendor\k8s.io\gengo\examples\import-boss\generators\import_restrict.go:
  154  
  155: // TODO: make a flag to enable this, or expose this information in some other way.
  156  func (importRuleFile) listEntireImportTree(f *generator.File, path string) error {

vendor\k8s.io\gengo\examples\set-gen\generators\sets.go:
   79  						//
   80: 						// TODO: make a namer that converts
   81  						// camelCase to '-' separation for file

  161  func (g *genSet) lessBody(sw *generator.SnippetWriter, t *types.Type) {
  162: 	// TODO: make this recursive, handle pointers and multiple nested structs...
  163  	switch t.Kind {

vendor\k8s.io\gengo\generator\generator.go:
  144  	// up to you to make sure they don't have colliding import names.
  145: 	// TODO: provide per-file import tracking, removing the requirement
  146  	// that generators coordinate..

vendor\k8s.io\gengo\generator\snippet_writer.go:
  96  //
  97: // TODO: Change Do() to optionally take a list of pairs of parameters (key, value)
  98  // and have it construct a combined map with that and args.

vendor\k8s.io\gengo\namer\import_tracker.go:
  27  //
  28: // TODO: pay attention to the package name (instead of renaming every package).
  29  type DefaultImportTracker struct {

vendor\k8s.io\gengo\namer\namer.go:
  273  	case types.Interface:
  274: 		// TODO: add to name test
  275  		names := []string{"Interface"}
  276  		for _, m := range t.Methods {
  277: 			// TODO: include function signature
  278  			names = append(names, m.Name.Name)

  281  	case types.Func:
  282: 		// TODO: add to name test
  283  		parts := []string{"Func"}

  362  	case types.Chan:
  363: 		// TODO: include directionality
  364  		name = "chan " + r.Name(t.Elem)
  365  	case types.Interface:
  366: 		// TODO: add to name test
  367  		elems := []string{}
  368  		for _, m := range t.Methods {
  369: 			// TODO: include function signature
  370  			elems = append(elems, m.Name.Name)

  373  	case types.Func:
  374: 		// TODO: add to name test
  375  		params := []string{}

vendor\k8s.io\gengo\parser\parse.go:
  780  		out.Elem = b.walkType(u, nil, t.Elem())
  781: 		// TODO: need to store direction, otherwise raw type name
  782  		// cannot be properly written.

vendor\k8s.io\gengo\types\comments.go:
  51  		}
  52: 		// TODO: we could support multiple values per key if we split on spaces
  53  		kv := strings.SplitN(line[len(marker):], "=", 2)

vendor\k8s.io\gengo\types\types.go:
  124  	// All comments from doc.go, if any.
  125: 	// TODO: remove Comments and use DocComments everywhere.
  126  	Comments []string

  352  
  353: 	// TODO: Add:
  354  	// * channel direction

vendor\k8s.io\klog\v2\contextual.go:
  139  
  140: // TODO can be used as a last resort by code that has no means of
  141  // receiving a logger from its caller. FromContext or an explicit logger

vendor\k8s.io\klog\v2\klog.go:
  305  		}
  306: 		// TODO: check syntax of filter?
  307  		filter = append(filter, modulePat{pattern, isLiteral(pattern), Level(v)})

  870  	if log != nil {
  871: 		// TODO: set 'severity' and caller information as structured log info
  872  		// keysAndValues := []interface{}{"severity", severityName[s], "file", file, "line", line}

vendor\k8s.io\klog\v2\internal\buffer\buffer.go:
  149  	buf.Tmp[21] = ' '
  150: 	buf.nDigits(7, 22, Pid, ' ') // TODO: should be TID
  151  	buf.Tmp[29] = ' '

vendor\k8s.io\klog\v2\internal\verbosity\verbosity.go:
  206  		}
  207: 		// TODO: check syntax of filter?
  208  		filter = append(filter, modulePat{pattern, isLiteral(pattern), Level(v)})

vendor\k8s.io\kube-openapi\pkg\common\common.go:
  30  const (
  31: 	// TODO: Make this configurable.
  32  	ExtensionPrefix   = "x-kubernetes-"

vendor\k8s.io\kube-openapi\pkg\generators\openapi.go:
   48  // Used for temporary validation of patch struct tags.
   49: // TODO: Remove patch struct tag validation because they we are now consuming OpenAPI on server.
   50  var tempPatchTags = [...]string{

  490  
  491: 	// TODO(seans3): Validate struct extensions here.
  492  	g.emitExtensions(extensions, unions)

  538  
  539: // TODO(#44005): Move this validation outside of this generator (probably to policy verifier)
  540  func (g openAPITypeWriter) validatePatchTags(m *types.Member, parent *types.Type) error {
  541: 	// TODO: Remove patch struct tag validation because they we are now consuming OpenAPI on server.
  542  	for _, tagKey := range tempPatchTags {

vendor\k8s.io\kube-openapi\pkg\generators\rules\names_match.go:
  115  // namesMatch evaluates if goName and jsonName match the API rule
  116: // TODO: Use an off-the-shelf CamelCase solution instead of implementing this logic. The following existing
  117  //       packages have been tried out:

vendor\k8s.io\kube-openapi\pkg\handler\handler.go:
  47  	mimeJson = "application/json"
  48: 	// TODO(mehdy): change @68f4ded to a version tag when gnostic add version tags.
  49  	mimePb   = "application/com.github.googleapis.gnostic.OpenAPIv2@68f4ded+protobuf"

vendor\k8s.io\kube-openapi\pkg\handler3\handler.go:
   46  	mimeJson = "application/json"
   47: 	// TODO(mehdy): change @68f4ded to a version tag when gnostic add version tags.
   48  	mimePb   = "application/com.github.googleapis.gnostic.OpenAPIv3@68f4ded+protobuf"

  279  	})
  280: 	// TODO: This forces a json marshal of corresponding group-versions.
  281  	// We should look to replace this with a faster hashing mechanism.

vendor\k8s.io\kube-openapi\pkg\schemaconv\smd.go:
  324  	}
  325: 	// TODO: We should check that the fields and discriminator
  326  	// specified in the union are actual fields in the struct.

vendor\k8s.io\kube-openapi\pkg\util\proto\document.go:
   94  func (d *Definitions) parseReference(s *openapi_v2.Schema, path *Path) (Schema, error) {
   95: 	// TODO(wrong): a schema with a $ref can have properties. We can ignore them (would be incomplete), but we cannot return an error.
   96  	if len(s.GetProperties().GetAdditionalProperties()) > 0 {

   98  	}
   99: 	// TODO(wrong): a schema with a $ref can have a type. We can ignore it (would be incomplete), but we cannot return an error.
  100  	if len(s.GetType().GetValue()) > 0 {

  103  
  104: 	// TODO(wrong): $refs outside of the definitions are completely valid. We can ignore them (would be incomplete), but we cannot return an error.
  105  	if !strings.HasPrefix(s.GetXRef(), "#/definitions/") {

  152  	var sub Schema
  153: 	// TODO(incomplete): this misses the boolean case as AdditionalProperties is a bool+schema sum type.
  154  	if s.GetAdditionalProperties().GetSchema() == nil {

  191  	case Boolean: // do nothing
  192: 	// TODO(wrong): this misses "null". Would skip the null case (would be incomplete), but we cannot return an error.
  193  	default:

  214  	if len(s.GetItems().GetSchema()) != 1 {
  215: 		// TODO(wrong): Items can have multiple elements. We can ignore Items then (would be incomplete), but we cannot return an error.
  216: 		// TODO(wrong): "type: array" witohut any items at all is completely valid.
  217  		return nil, newSchemaError(path, "array should have exactly one sub-item")

  280  	if s.GetXRef() != "" {
  281: 		// TODO(incomplete): ignoring the rest of s is wrong. As long as there are no conflict, everything from s must be considered
  282  		// Reference: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#path-item-object

  289  		// the type:object property (they only included the "properties" property), so we need to handle this case
  290: 		// TODO: validate that we ever published empty, non-nil properties. JSON roundtripping nils them.
  291  		if s.GetProperties() != nil {
  292: 			// TODO(wrong): when verifying a non-object later against this, it will be rejected as invalid type.
  293: 			// TODO(CRD validation schema publishing): we have to filter properties (empty or not) if type=object is not given
  294  			return d.parseKind(s, path)

  296  			// Definition has no type and no properties. Treat it as an arbitrary value
  297: 			// TODO(incomplete): what if it has additionalProperties=false or patternProperties?
  298  			// ANSWER: parseArbitrary is less strict than it has to be with patternProperties (which is ignored). So this is correct (of course not complete).

  315  		// the OpenAPI generator never generates (nor it ever did in the past) OpenAPI type definitions with multiple types
  316: 		// TODO(wrong): this is rejecting a completely valid OpenAPI spec
  317: 		// TODO(CRD validation schema publishing): filter these out
  318  		return nil, newSchemaError(path, "definitions with multiple types aren't supported")

vendor\k8s.io\kube-openapi\pkg\util\proto\validation\types.go:
  218  	}
  219: 	// TODO(wrong): this misses "null"
  220  

vendor\k8s.io\kube-openapi\pkg\validation\strfmt\doc.go:
  16  //
  17: // TODO: add info on how to define and register a custom format
  18  package strfmt

vendor\k8s.io\kube-openapi\pkg\validation\strfmt\duration.go:
  124  	switch v := raw.(type) {
  125: 	// TODO: case []byte: // ?
  126  	case int64:

vendor\k8s.io\kube-openapi\pkg\validation\strfmt\time.go:
  118  func (t *DateTime) Scan(raw interface{}) error {
  119: 	// TODO: case int64: and case float64: ?
  120  	switch v := raw.(type) {

vendor\k8s.io\kube-openapi\pkg\validation\validate\helpers.go:
  16  
  17: // TODO: define this as package validate/internal
  18  // This must be done while keeping CI intact with all tests and test coverage

vendor\k8s.io\kube-openapi\pkg\validation\validate\object_validator.go:
   44  func (o *objectValidator) Applies(source interface{}, kind reflect.Kind) bool {
   45: 	// TODO: this should also work for structs
   46  	// there is a problem in the type validator where it will be unhappy about null values

   54  	val := data.(map[string]interface{})
   55: 	// TODO: guard against nil data
   56  	numKeys := int64(len(val))

  103  				} else if regularProperty && !(matched || succeededOnce) {
  104: 					// TODO: this is dead code since regularProperty=false here
  105  					res.AddErrors(errors.FailedAllPatternProperties(o.Path, o.In, key))

  139  	// Check patternProperties
  140: 	// TODO: it looks like we have done that twice in many cases
  141  	for key, value := range val {

  154  
  155: // TODO: succeededOnce is not used anywhere
  156  func (o *objectValidator) validatePatternProperty(key string, value interface{}, result *Result) (bool, bool, []string) {

vendor\k8s.io\kube-openapi\pkg\validation\validate\result.go:
   34  //
   35: // TODO: keep path of key originating the error
   36  type Result struct {

  122  func (r *Result) keepRelevantErrors() *Result {
  123: 	// TODO: this one is going to disapear...
  124  	// keepRelevantErrors strips a result from standard errors and keeps

  200  //
  201: // TODO: reporting / pretty print with path ordered and indented
  202  func (r *Result) AsError() error {

vendor\k8s.io\kube-openapi\pkg\validation\validate\schema_messages.go:
  24  	//
  25: 	// TODO: should move to package go-openapi/errors
  26  	ArrayDoesNotAllowAdditionalItemsError = "array doesn't allow for additional items"

  41  	//
  42: 	// TODO: punctuation in message
  43  	MustValidateAllSchemasError = "%q must validate all the schemas (allOf)%s"

vendor\k8s.io\kube-openapi\pkg\validation\validate\schema.go:
  136  
  137: 	// TODO: this part should be handed over to type validator
  138  	// Handle special case of json.Number data (number marshalled as string)

vendor\k8s.io\kube-openapi\pkg\validation\validate\type.go:
   37  	// see https://github.com/go-openapi/strfmt/blob/master/README.md
   38: 	// TODO: this switch really is some sort of reverse lookup for formats. It should be provided by strfmt.
   39  	switch data.(type) {

   83  		return stringType, stringFormatUUID5
   84: 	// TODO: missing binary (io.ReadCloser)
   85: 	// TODO: missing json.Number
   86  	default:

  136  		// nil or zero value for the passed structure require Type: null
  137: 		if len(t.Type) > 0 && !t.Type.Contains(nullType) && !t.Nullable { // TODO: if a property is not required it also passes this
  138  			return errorHelp.sErr(errors.InvalidType(t.Path, t.In, strings.Join(t.Type, ","), nullType))

  152  	// check numerical types
  153: 	// TODO: check unsigned ints
  154: 	// TODO: check json.Number (see schema.go)
  155  	isLowerInt := t.Format == integerFormatInt64 && format == integerFormatInt32

  160  	if kind != reflect.String && kind != reflect.Slice && t.Format != "" && !(t.Type.Contains(schType) || format == t.Format || isFloatInt || isIntFloat || isLowerInt || isLowerFloat) {
  161: 		// TODO: test case
  162  		return errorHelp.sErr(errors.InvalidType(t.Path, t.In, t.Format, format))

vendor\k8s.io\kube-openapi\pkg\validation\validate\validator.go:
  122  //
  123: // TODO: consider replacing boundary check errors by simple warnings.
  124  //
  125: // TODO: default boundaries with MAX_SAFE_INTEGER are not checked (specific to json.Number?)
  126  func (n *numberValidator) Validate(val interface{}) *Result {

vendor\k8s.io\kube-openapi\pkg\validation\validate\values.go:
  246  //
  247: // TODO: Normally, a JSON MAX_SAFE_INTEGER check would ensure conversion remains loss-free
  248  func MaximumNativeType(path, in string, val interface{}, max float64, exclusive bool) *errors.Validation {

  276  //
  277: // TODO: Normally, a JSON MAX_SAFE_INTEGER check would ensure conversion remains loss-free
  278  func MinimumNativeType(path, in string, val interface{}, min float64, exclusive bool) *errors.Validation {

  306  //
  307: // TODO: Normally, a JSON MAX_SAFE_INTEGER check would ensure conversion remains loss-free
  308  func MultipleOfNativeType(path, in string, val interface{}, multipleOf float64) *errors.Validation {

vendor\k8s.io\system-validators\validators\docker_validator.go:
  56  // Validate is part of the system.Validator interface.
  57: // TODO(random-liu): Add more validating items.
  58  func (d *DockerValidator) Validate(spec SysSpec) ([]error, []error) {

vendor\k8s.io\system-validators\validators\types_unix.go:
  31  		Versions: []string{`^3\.[1-9][0-9].*$`, `^([4-9]|[1-9][0-9]+)\.([0-9]+)\.([0-9]+).*$`}, // Requires 3.10+, or newer
  32: 		// TODO(random-liu): Add more config
  33: 		// TODO(random-liu): Add description for each kernel configuration:
  34  		Required: []KernelConfig{

vendor\k8s.io\system-validators\validators\types.go:
  23  	Name string `json:"name,omitempty"`
  24: 	// TODO(yguo0905): Support the "or" operation, which will be the same
  25  	// as the "aliases".

  73  //
  74: // TODO(yguo0905): Support operator OR of multiple packages for the case where
  75  // either "foo (>=1.0)" or "bar (>=2.0)" is required.

  89  	//
  90: 	// TODO(yguo0905): Print the description where necessary.
  91  	Description string `json:"description,omitempty"`

vendor\k8s.io\utils\clock\testing\fake_clock.go:
  260  // After is unimplemented, will panic.
  261: // TODO: make interval clock use FakeClock so this can be implemented.
  262  func (*IntervalClock) After(d time.Duration) <-chan time.Time {

  266  // NewTimer is unimplemented, will panic.
  267: // TODO: make interval clock use FakeClock so this can be implemented.
  268  func (*IntervalClock) NewTimer(d time.Duration) clock.Timer {

  272  // AfterFunc is unimplemented, will panic.
  273: // TODO: make interval clock use FakeClock so this can be implemented.
  274  func (*IntervalClock) AfterFunc(d time.Duration, f func()) clock.Timer {

  278  // Tick is unimplemented, will panic.
  279: // TODO: make interval clock use FakeClock so this can be implemented.
  280  func (*IntervalClock) Tick(d time.Duration) <-chan time.Time {

  284  // NewTicker has no implementation yet and is omitted.
  285: // TODO: make interval clock use FakeClock so this can be implemented.
  286  func (*IntervalClock) NewTicker(d time.Duration) clock.Ticker {

vendor\sigs.k8s.io\apiserver-network-proxy\konnectivity-client\pkg\client\client.go:
   56  
   57: // TODO: Replace with a generic implementation once it is safe to assume the client is built with go1.18+
   58  type pendingDialManager struct {

   81  
   82: // TODO: Replace with a generic implementation once it is safe to assume the client is built with go1.18+
   83  type connectionManager struct {

  131  	// closing should only be accessed through atomic methods.
  132: 	// TODO: switch this to an atomic.Bool once the client is exclusively buit with go1.19+
  133  	closing uint32

  280  			resp := pkt.GetData()
  281: 			// TODO: flow control
  282  			conn, ok := t.conns.get(resp.ConnectID)

vendor\sigs.k8s.io\kustomize\api\filters\fieldspec\fieldspec.go:
  123  	// then change it to the creation type
  124: 	// TODO: update yaml.LookupCreate to support this
  125  	if field.YNode().Tag == yaml.NodeTagNull && yaml.IsCreate(kind) {

vendor\sigs.k8s.io\kustomize\api\filters\imagetag\legacy.go:
  58  // provided fieldCallback.
  59: // TODO: move this to kyaml/filterutils
  60  type findFieldsFilter struct {

vendor\sigs.k8s.io\kustomize\api\filters\nameref\nameref.go:
  53  // to consult things like the resource Id, its namespace, etc.
  54: // TODO(3455): No filter should use the Resource api; all information
  55  // about names should come from annotations, with helper methods

vendor\sigs.k8s.io\kustomize\api\filters\replacement\replacement.go:
  224  		v := yaml.GetValue(value)
  225: 		// TODO: Add a way to remove an element
  226  		switch {

vendor\sigs.k8s.io\kustomize\api\filters\valueadd\valueadd.go:
  111  			}
  112: 			// TODO: support SequenceNode.
  113  			// Presumably here one could look for array indices (digits) at

  121  			}
  122: 			// TODO: allow more kinds
  123  			if err := yaml.ErrorIfInvalid(n, yaml.ScalarNode); err != nil {

vendor\sigs.k8s.io\kustomize\api\internal\accumulator\loadconfigfromcrds.go:
  84  
  85: // TODO: Get Group and Version for CRD from the
  86  // openAPI definition once

vendor\sigs.k8s.io\kustomize\api\internal\accumulator\namereferencetransformer.go:
  149  
  150: // TODO: check res for field existence here to avoid extra work.
  151  // res.GetFieldValue, which uses yaml.Lookup under the hood, doesn't know

vendor\sigs.k8s.io\kustomize\api\internal\builtins\PrefixTransformer.go:
  21  
  22: // TODO: Make this gvk skip list part of the config.
  23  var prefixFieldSpecsToSkip = types.FsSlice{

  47  	for _, r := range m.Resources() {
  48: 		// TODO: move this test into the filter (i.e. make a better filter)
  49  		if p.shouldSkip(r.OrgId()) {

  55  		for _, fs := range p.FieldSpecs {
  56: 			// TODO: this is redundant to filter (but needed for now)
  57  			if !id.IsSelected(&fs.Gvk) {

  59  			}
  60: 			// TODO: move this test into the filter.
  61  			if fs.Path == "metadata/name" {

  67  				if p.Prefix != "" {
  68: 					// TODO: There are multiple transformers that can change a resource's name, and each makes a call to
  69  					// StorePreviousID(). We should make it so that we only call StorePreviousID once per kustomization layer

vendor\sigs.k8s.io\kustomize\api\internal\builtins\SuffixTransformer.go:
  21  
  22: // TODO: Make this gvk skip list part of the config.
  23  var suffixFieldSpecsToSkip = types.FsSlice{

  47  	for _, r := range m.Resources() {
  48: 		// TODO: move this test into the filter (i.e. make a better filter)
  49  		if p.shouldSkip(r.OrgId()) {

  55  		for _, fs := range p.FieldSpecs {
  56: 			// TODO: this is redundant to filter (but needed for now)
  57  			if !id.IsSelected(&fs.Gvk) {

  59  			}
  60: 			// TODO: move this test into the filter.
  61  			if fs.Path == "metadata/name" {

  67  				if p.Suffix != "" {
  68: 					// TODO: There are multiple transformers that can change a resource's name, and each makes a call to
  69  					// StorePreviousID(). We should make it so that we only call StorePreviousID once per kustomization layer

vendor\sigs.k8s.io\kustomize\api\internal\builtins\ValueAddTransformer.go:
   40  	// from those included by overly broad selectors.
   41: 	// TODO: implement this?
   42  	// NotSelector *types.Selector `json:"notSelector,omitempty" yaml:"notSelector,omitempty"`

   80  		}
   81: 		// TODO: call validateSelector(target.NotSelector) if field added.
   82  		if err = validateJsonFieldPath(target.FieldPath); err != nil {

   93  
   94: // TODO: implement
   95  func validateSelector(_ *types.Selector) error {

   98  
   99: // TODO: Enforce RFC 6902?
  100  func validateJsonFieldPath(p string) error {

  117  		}
  118: 		// TODO: consider t.NotSelector if implemented
  119  		for _, res := range resources {

vendor\sigs.k8s.io\kustomize\api\internal\git\repospec.go:
  26  	// Raw, original spec, used to look for cycles.
  27: 	// TODO(monopole): Drop raw, use processed fields instead.
  28  	raw string

vendor\sigs.k8s.io\kustomize\api\internal\plugins\builtinconfig\namebackreferences.go:
  46  	resid.Gvk `json:",inline,omitempty" yaml:",inline,omitempty"`
  47: 	// TODO: rename json 'fieldSpecs' to 'referrers' for clarity.
  48  	// This will, however, break anyone using a custom config.

vendor\sigs.k8s.io\kustomize\api\internal\plugins\execplugin\execplugin.go:
  55  	// file is executable through file mode.
  56: 	// TODO: provide for setting the executable FileMode bit on Windows
  57  	// The (fs *fileStat) Mode() (m FileMode) {} function in

vendor\sigs.k8s.io\kustomize\api\internal\plugins\fnplugin\fnplugin.go:
  174  	// Since we added `local-config` annotation so it will be ignored in generator output
  175: 	// TODO(donnyxia): This is actually not used by generator and only used to bypass a kio limitation.
  176  	// Need better solution.

vendor\sigs.k8s.io\kustomize\api\internal\plugins\loader\loader.go:
  165  func isBuiltinPlugin(res *resource.Resource) bool {
  166: 	// TODO: the special string should appear in Group, not Version.
  167  	return res.GetGvk().Group == "" &&

vendor\sigs.k8s.io\kustomize\api\internal\utils\makeResIds.go:
  35  	var ids []resid.ResId
  36: 	// TODO: merge previous names and namespaces into one list of
  37  	//     pairs on one annotation so there is no chance of error

vendor\sigs.k8s.io\kustomize\api\internal\validate\fieldvalidator.go:
  13  //
  14: // TODO: Have this use kyaml/yaml/internal/k8sgen/pkg/labels
  15  //  which has label and annotation validation code, but is internal

  25  
  26: // TODO(#FieldValidator): implement MakeAnnotationValidator
  27  func (f FieldValidator) MakeAnnotationValidator() func(map[string]string) error {

  32  
  33: // TODO(#FieldValidator): implement MakeAnnotationNameValidator
  34  func (f FieldValidator) MakeAnnotationNameValidator() func([]string) error {

  39  
  40: // TODO(#FieldValidator): implement MakeLabelValidator
  41  func (f FieldValidator) MakeLabelValidator() func(map[string]string) error {

  46  
  47: // TODO(#FieldValidator): implement MakeLabelNameValidator
  48  func (f FieldValidator) MakeLabelNameValidator() func([]string) error {

  53  
  54: // TODO(#FieldValidator): implement ValidateNamespace
  55  func (f FieldValidator) ValidateNamespace(s string) []string {

  59  
  60: // TODO(#FieldValidator): implement ErrIfInvalidKey
  61  func (f FieldValidator) ErrIfInvalidKey(s string) error {

  64  
  65: // TODO(#FieldValidator): implement IsEnvVarName
  66  func (f FieldValidator) IsEnvVarName(k string) error {

vendor\sigs.k8s.io\kustomize\api\loader\fileloader.go:
  263  
  264: // TODO(monopole): Distinguish branches?
  265  // I.e. Allow a distinction between git URI with

  268  func (fl *fileLoader) errIfRepoCycle(newRepoSpec *git.RepoSpec) error {
  269: 	// TODO(monopole): Use parsed data instead of Raw().
  270  	if fl.repoSpec != nil &&

vendor\sigs.k8s.io\kustomize\api\resmap\resmap.go:
  105  //
  106: // TODO: get rid of this interface (use bare resWrangler).
  107  // There aren't multiple implementations any more.

  293  	// fail spuriously.
  294: 	// TODO: modify tests to not use resmap.FromMap,
  295: 	// TODO: - and replace this with a stricter equals.
  296  	ErrorIfNotEqualSets(ResMap) error

  324  	// ApplyFilter applies an RNode filter to all Resources in the ResMap.
  325: 	// TODO: Send/recover ancillary Resource data to/from subprocesses.
  326  	// Assure that the ancillary data in Resource (everything not in the RNode)

vendor\sigs.k8s.io\kustomize\api\resource\factory.go:
  63  	if err != nil {
  64: 		// TODO: return err instead of log.
  65  		log.Fatal(err)

vendor\sigs.k8s.io\kustomize\api\resource\resource.go:
  157  // the resource.
  158: // TODO: move to RNode, use GetMeta to improve performance.
  159: // TODO: make a version of mergeStringMaps that is build-annotation aware
  160  //   to avoid repeatedly setting refby and genargs annotations

vendor\sigs.k8s.io\kustomize\api\types\replacement.go:
  73  
  74: 	// TODO (#3492): Implement use of this option
  75  	// None, Base64, URL, Hex, etc

vendor\sigs.k8s.io\kustomize\kyaml\comments\comments.go:
  35  	to := s.Origin()
  36: 	// TODO: File a bug with upstream yaml to handle comments for FoldedStyle scalar nodes
  37  	// Hack: convert FoldedStyle scalar node to DoubleQuotedStyle as the line comments are

vendor\sigs.k8s.io\kustomize\kyaml\fieldmeta\fieldmeta.go:
   65  			// other comments are valid, they just don't parse
   66: 			// TODO: consider more sophisticated parsing techniques similar to what is used
   67  			// for go struct tags.

  177  // WriteV1Setters is the v1 setters way of writing setter definitions
  178: // TODO: pmarupaka - remove this method after migration
  179  func (fm *FieldMeta) WriteV1Setters(n *yaml.RNode) error {

vendor\sigs.k8s.io\kustomize\kyaml\filesys\confirmeddir.go:
  57  // on other operating systems.
  58: // TODO(monopole) Refactor when #golang/go/18358 closes.
  59  // See also:

vendor\sigs.k8s.io\kustomize\kyaml\internal\forked\github.com\go-yaml\yaml\decode.go:
  529  	if d.aliases[n] {
  530: 		// TODO this could actually be allowed in some circumstances.
  531  		failf("anchor '%s' value contains itself", n.Value)

vendor\sigs.k8s.io\kustomize\kyaml\internal\forked\github.com\go-yaml\yaml\encode.go:
  414  func (e *encoder) emitScalar(value, anchor, tag string, style yaml_scalar_style_t, head, line, foot, tail []byte) {
  415: 	// TODO Kill this function. Replace all initialize calls by their underlining Go literals.
  416  	implicit := tag == ""

vendor\sigs.k8s.io\kustomize\kyaml\internal\forked\github.com\go-yaml\yaml\resolve.go:
  306  func parseTimestamp(s string) (time.Time, bool) {
  307: 	// TODO write code to check all the formats supported by
  308  	// http://yaml.org/type/timestamp.html instead of using time.Parse.

vendor\sigs.k8s.io\kustomize\kyaml\kio\kio.go:
  137  		result, err = op.Filter(result)
  138: 		// TODO (issue 2872): This len(result) == 0 should be removed and empty result list should be
  139  		// handled by outputs. However currently some writer like LocalPackageReadWriter

vendor\sigs.k8s.io\kustomize\kyaml\kio\tree.go:
   33  // TreeWriter prints the package structured as a tree.
   34: // TODO(pwittrock): test this package better.  it is lower-risk since it is only
   35  //   used for printing rather than updating or editing.

  381  // getFields looks up p.Fields from leaf and structures them into treeFields.
  382: // TODO(pwittrock): simplify this function
  383  func (p TreeWriter) getFields(leaf *yaml.RNode) (treeFields, error) {

vendor\sigs.k8s.io\kustomize\kyaml\openapi\openapi.go:
  165  // SchemaForResourceType returns the Schema for the given Resource
  166: // TODO(pwittrock): create a version of this function that will return a schema
  167  // which can be used for duck-typed Resources -- e.g. contains common fields such

  605  
  606: 	// TODO(natasha41575): Accept proto-formatted schema files
  607  	if customSchema != nil {

vendor\sigs.k8s.io\kustomize\kyaml\runfn\runfn.go:
  316  		if spec.Container.Network && !r.Network {
  317: 			// TODO(eddiezane): Provide error info about which function needs the network
  318  			return fltrs, errors.Errorf("network required but not enabled with --network")

  468  	if !r.DisableContainers && spec.Container.Image != "" {
  469: 		// TODO: Add a test for this behavior
  470  		uidgid, err := getUIDGID(r.AsCurrentUser, currentUser)

vendor\sigs.k8s.io\kustomize\kyaml\utils\pathsplitter.go:
  7  
  8: // TODO: Move these to kyaml
  9  

vendor\sigs.k8s.io\kustomize\kyaml\yaml\fns.go:
  384  		case f.StringRegexValue != "":
  385: 			// TODO(pwittrock): pre-compile this when unmarshalling and cache to a field
  386  			rg, err := regexp.Compile(f.StringRegexValue)

  689  	// need to set style for strings not recognized by yaml 1.1 to quoted if not previously set
  690: 	// TODO: fix in upstream yaml library so this can be handled with yaml SetString
  691  	if s.Value.IsStringValue() && !s.OverrideStyle && s.Value.YNode().Style == 0 && IsYaml1_1NonString(s.Value.YNode()) {

vendor\sigs.k8s.io\kustomize\kyaml\yaml\rnode.go:
    27  // IsMissingOrNull is true if the RNode is nil or explicitly tagged null.
    28: // TODO: make this a method on RNode.
    29  func IsMissingOrNull(node *RNode) bool {

    33  // IsEmptyMap returns true if the RNode is an empty node or an empty map.
    34: // TODO: make this a method on RNode.
    35  func IsEmptyMap(node *RNode) bool {

   272  
   273: 	// TODO: consider optimizing this parsing
   274  	if f := n.Field(APIVersionField); !f.IsNilOrEmpty() {

  1099  // a nil item, along with the path to the missing item.
  1100: // TODO(broken): This doesn't do what it claims to do.
  1101  // (see TODO in unit test and pr 1513).

  1203  // GetFieldValue finds period delimited fields.
  1204: // TODO: When doing kustomize var replacement, which is likely a
  1205  // a primary use of this function and the reason it returns interface{}

vendor\sigs.k8s.io\kustomize\kyaml\yaml\types.go:
  62  func IsYNodeZero(n *yaml.Node) bool {
  63: 	// TODO: Change this to use IsZero when it's avaialable.
  64  	return n != nil && n.Kind == 0 && n.Style == 0 && n.Tag == "" && n.Value == "" &&

  81  
  82: // TODO(pwittrock): test this
  83  func GetStyle(styles ...string) Style {

vendor\sigs.k8s.io\kustomize\kyaml\yaml\internal\k8sgen\pkg\labels\selector.go:
  921  // See the documentation for Parse() function for more details.
  922: // TODO: Consider exporting the internalSelector type instead.
  923  func ParseToRequirements(selector string) ([]Requirement, error) {

vendor\sigs.k8s.io\kustomize\kyaml\yaml\internal\k8sgen\pkg\util\validation\validation.go:
   78  // 2 and does not accept a trailing . as valid.
   79: // TODO: This function is deprecated and preserved until all callers migrate to
   80  // IsFullyQualifiedDomainName; please don't add new callers.

  295  // Now in libcontainer UID/GID limits is 0 ~ 1<<31 - 1
  296: // TODO: once we have a type for UID/GID we should make these that type.
  297  const (

vendor\sigs.k8s.io\kustomize\kyaml\yaml\internal\k8sgen\pkg\util\validation\field\errors.go:
  77  			// fallback to raw struct
  78: 			// TODO: internal types have panic guards against json.Marshalling to prevent
  79  			// accidental use of internal types in external serialized form.  For now, use

  94  
  95: // TODO: These values are duplicated in api/types.go, but there's a circular dep.  Fix it.
  96  const (

vendor\sigs.k8s.io\kustomize\kyaml\yaml\merge3\visitor.go:
  14  const (
  15: 	// TODO: Support more strategies
  16  	TakeUpdate ConflictStrategy = 1 + iota

vendor\sigs.k8s.io\structured-merge-diff\v4\fieldpath\element.go:
  176  // PathElementSet is a set of path elements.
  177: // TODO: serialize as a list.
  178  type PathElementSet struct {

vendor\sigs.k8s.io\structured-merge-diff\v4\fieldpath\path.go:
   88  		case int:
   89: 			// TODO: Understand schema and object and convert this to the
   90  			// FieldSpecifier below if appropriate.

   99  		case value.Value:
  100: 			// TODO: understand schema and verify that this is a set type
  101: 			// TODO: make a copy of t
  102  			fp = append(fp, PathElement{Value: &t})

vendor\sigs.k8s.io\structured-merge-diff\v4\fieldpath\pathelementmap.go:
  26  //
  27: // TODO(apelisse): We have multiple very similar implementation of this
  28  // for PathElementSet and SetNodeMap, so we could probably share the

vendor\sigs.k8s.io\structured-merge-diff\v4\fieldpath\set.go:
  28  	// Members lists fields that are part of the set.
  29: 	// TODO: will be serialized as a list of path elements.
  30  	Members PathElementSet

vendor\sigs.k8s.io\structured-merge-diff\v4\merge\update.go:
  192  		set = set.RecursiveDifference(ignored)
  193: 		// TODO: is this correct. If we don't remove from lastSet pruning might remove the fields?
  194  		if lastSet != nil {

vendor\sigs.k8s.io\structured-merge-diff\v4\schema\elements.go:
   77  //
   78: // TODO: split numeric into float/int? Something even more fine-grained?
   79  type Scalar string

  265  	//
  266: 	// TODO: change this to "non-atomic struct" above and make the code reflect this.
  267  	//

vendor\sigs.k8s.io\structured-merge-diff\v4\typed\helpers.go:
  231  	case child.IsMap():
  232: 		// TODO: atomic maps should be acceptable.
  233  		return pe, errors.New("associative list without keys has an element that's a map type")

  236  		// let's say we don't.
  237: 		// TODO: atomic lists should be acceptable.
  238  		return pe, errors.New("not supported: associative list with lists as elements")

vendor\sigs.k8s.io\structured-merge-diff\v4\typed\typed.go:
  133  		} else if !value.Equals(w.rhs, w.lhs) {
  134: 			// TODO: Equality is not sufficient for this.
  135  			// Need to implement equality check on the value type.

vendor\sigs.k8s.io\structured-merge-diff\v4\typed\validate.go:
  93  		if !v.IsFloat() && !v.IsInt() {
  94: 			// TODO: should the schema separate int and float?
  95  			return errorf("%vexpected numeric (int or float), got %T", prefix, v.Unstructured())

vendor\sigs.k8s.io\structured-merge-diff\v4\value\jsontagutil.go:
  24  
  25: // TODO: This implements the same functionality as https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/runtime/converter.go#L236
  26  // but is based on the highly efficient approach from https://golang.org/src/encoding/json/encode.go

vendor\sigs.k8s.io\structured-merge-diff\v4\value\mapreflect.go:
  72  
  73: // TODO: Do we need to support types that implement json.Marshaler and are used as string keys?
  74  func (r mapReflect) toMapKey(key string) reflect.Value {

vendor\sigs.k8s.io\structured-merge-diff\v4\value\reflectcache.go:
  264  func (e TypeReflectCacheEntry) FromUnstructured(sv, dv reflect.Value) error {
  265: 	// TODO: this could be made much more efficient using direct conversions like
  266  	// UnstructuredConverter.ToUnstructured provides.

vendor\sigs.k8s.io\structured-merge-diff\v4\value\valuereflect.go:
  194  
  195: // TODO find a cleaner way to avoid panics from reflect.IsNil()
  196  func safeIsNil(v reflect.Value) bool {
